-- MySQL dump 10.13  Distrib 8.0.12, for Win64 (x86_64)
--
-- Host: localhost    Database: vergilplus
-- ------------------------------------------------------
-- Server version	8.0.12

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
 SET NAMES utf8 ;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `course`
--

DROP TABLE IF EXISTS `course`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `course` (
  `CourseNumber` varchar(64) NOT NULL,
  `Section` int(11) NOT NULL,
  `CourseTitle` text,
  `Week` text,
  `Start_Time` text,
  `End_Time` text,
  `Instructor` text,
  `Prerequisite` text,
  `Term` int(11) DEFAULT NULL,
  `Description` text,
  PRIMARY KEY (`CourseNumber`,`Section`),
  KEY `coursenumber` (`CourseNumber`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `course`
--

LOCK TABLES `course` WRITE;
/*!40000 ALTER TABLE `course` DISABLE KEYS */;
INSERT INTO `course` VALUES ('ECOMS6121',1,'Reliable Software','TU','10:10','12:00','Yang, Junfeng','WCOMS4118 WCOMS4115 WCOMS4117;;',0,'Topics include: automated debugging, automated software repair, Concurrent software reliability, software error detection, and more.'),('ECOMS6156',1,'Topics in Software Engineering','FR','13:10','15:40','Ferguson, Donald F.',';;',1,'Topics in Software engineering arranged as the need and availability arises. Topics are usually offered on a one-time basis. Since the content of this course changes, it may be repeated for credit with advisor approval. Consult the department for section assignment.'),('ECOMS6181',1,'Advanced Internet Services','FR','12:10','14:00','Schulzrinne, Henning G',';;',1,'In-depth survey of protocols and algorithms needed to transport multimedia information across the Internet, including audio and video encoding, multicast, quality-of-service, voice-over-IP, streaming media and peer-to-peer multimedia systems. Includes a semester-long programming project.'),('ECOMS6185',1,'Intrusion Detection Systems','FR','13:10','15:40','Stolfo, Salvatore J','WCOMS4180 WCOMS4180;;',1,'The state of threats against computers, and networked systems. An overview of computer security solutions and why they fail. Provides a detailed treatment for Network and Host-based Intrusion Detection and Intrusion Prevention systems. Considerable depth is provided on anomaly detection systems to detect new attacks. Covers issues and problems in email (spam, and viruses) and insider attacks (masquerading and impersonation).'),('ECOMS6261',1,'Advanced cryptography','MO','18:10','20:00','Bishop, Allison','WCOMS4261;;',0,'NULL'),('ECOMS6424',1,'Hardware Security','FR','12:10','14:00','Sethumadhavan, Simha',';;',1,'NULL'),('ECOMS6717',1,'Information Theory','TU','16:10','18:40','Xiaodong Wang',';;Kowledge of stochastic process',1,'Mutual information and entropy. The source coding theorem. The capacity of discrete memoryless channels and the noisy channel coding theorem. The rate distortion function. Discrete memoryless sources and single-letter distortion measures. Bhattacharya bounds, convolutional codes, and the Viterbi algorithm.'),('ECOMS6731',1,'Humanoid Robots','TU','16:10','18:00','Allen, Peter Kirby',';;',0,'Analysis of existing hardware and software platforms. Programming of multi-degree-of-freedom robots. Understanding sensor feedback in perceive-act-sense control paradigms. Task-level planning and reasoning. Final project includes implementing a humanoid robot task on either a simulated or physical robot.'),('ECOMS6915',1,'Academic Writing for Spring','MOWE','13:10','15:40','Kayfetz, Janet',';;',0,'NULL'),('ECOMS6915',2,'Pronunciation Of English','TH','12:10','14:00','Kayfetz, Janet',';;',1,'NULL'),('ECOMS6998',1,'TPCS GEOMETRY PROC COMP FABRIC','TU','14:10','16:00','Grinspun, Eitan',';Instructor\'s permission;',1,'Selected topics in computer science. Content varies from year to year. May be repeated for credit.'),('ECOMS6998',3,'Fund Speech Recognition','TH','19:00','21:30','Beigi, Homayoon',';Instructor\'s permission;',1,'Selected topics in computer science. Content varies from year to year. May be repeated for credit.'),('ECOMS6998',4,'Social network','TU','14:10','16:00','Chaintreau, Augustin',';Instructor\'s permission;',2,'Selected topics in computer science. Content varies from year to year. May be repeated for credit.'),('ECOMS6998',5,'Formal Verification Systm','TU','18:10','20:00','Gu, Ronghui',';Instructor\'s permission;',1,'Selected topics in computer science. Content varies from year to year. May be repeated for credit.'),('ECOMS6998',6,'BANDITS REINFORCEMENT LEARNING','WE','16:10','18:40','Slivkins, Alex',';Instructor\'s permission;',1,'Selected topics in computer science. Content varies from year to year. May be repeated for credit.'),('ECOMS6998',7,'INTRO BRAIN COMPUTER INTERACT','TH','18:10','20:00','He, Xiaofu',';;',0,'NULL'),('ECOMS6998',8,'Adv Web Design Studio','FR','14:10','16:00','Chilton, Lydia B',';Instructor\'s permission;',1,'Selected topics in computer science. Content varies from year to year. May be repeated for credit.'),('ECOMS6998',9,'Security and Robustness of ML Systems','MO','10:10','12:00','Yang, Junfeng',';Instructor\'s permission;',0,'Selected topics in computer science. Content varies from year to year. May be repeated for credit.'),('ECOMS6998',10,'TOPICS HUMAN LANGUAGE TECH','FR','16:10','18:00','Church, Kenneth W',';Instructor\'s permission;',1,'NULL'),('ECOMS6998',11,'INTRODUCTION TO DEVOPS','TH','18:10','20:00','Boutros, Tristan',';Instructor\'s permission;',1,'Selected topics in computer science. Content varies from year to year. May be repeated for credit.'),('ECOMS6998',12,'Probabilistic Programming','FR','10:10','12:40','Kucukelbir, Alp',';Instructor\'s permission;',1,'Selected topics in computer science. Content varies from year to year. May be repeated for credit.'),('ECOMS6998',13,'CLOUD COMPUTING&BIG DATA','MO','18:10','20:00','Sahu, Sambit',';Instructor\'s permission;',1,'Selected topics in computer science. Content varies from year to year. May be repeated for credit.'),('ECOMS6998',14,'TOPICS DATACENTER NETWORKING','FR','10:10','12:00','Misra, Vishal',';Instructor\'s permission;',1,'Selected topics in computer science. Content varies from year to year. May be repeated for credit.'),('ECOMS6999',6,'COMPUTATION AND THE BRAIN','WE','16:10','18:40','Papadimitriou, Christos H',';Instructor\'s permission;',1,'Selected topics in computer science. Content varies from year to year. May be repeated for credit.'),('ECSEE6111',1,'Advanced Database Systems','TU','16:10','18:00','Gravano, Luis','WCOMS4111; Instructor\'s permission; Knowledge of Java',1,'Continuation of COMS W4111, covers latest trends in both database research and industry: information retrieval, web search, data mining, data warehousing, OLAP, decision support, multimedia databases, and XML and databases. Programming projects required.'),('ECSEE6180',1,'Modeling and performance evaluation','TH','10:00','12:00','Misra, Vishal',';;',0,'NULL'),('ECSEE6600',1,'From Data to Solutions','FR','10:10','12:40','Hirschberg, Julia B.',';;',0,'This course is designed for participants in the NSF IGERT program \"From Data to Solutions\"\".  Students in the seminar may be IGERT Trainees'),('ECSEE6863',1,'Formal Verif HW SW Systems','WE','18:10','20:00','Theobald, Michael',';;',1,'NULL'),('ECSEE6868',1,'Embedded Scalable Platforms','TH','16:10','18:00','Carloni, Luca',';;',0,'NULL'),('ECSEE6898',1,'Information Processing: From Data to Solutions','FR','12:00','14:00','Shih-Fu ChangÎ¾',';;',0,'This course is designed for participants in the NSF IGERT program \"From Data to Solutions\"\". Î¾Students in the seminar may be IGERT Trainees'),('EEECS6720',1,'Bayes Models Mach Learn','TH','16:10','18:40','Paisley, John',';;',1,'NULL'),('EEECS6893',1,'Tpc: Big Data Analytics','TH','19:00','21:30','Lin, Ching-Yung',';;',1,'NULL'),('EEECS6894',1,'TPC:DEEP LRNG VIS,SPEECH,LANG','TU','19:00','21:30','Cao, Liangliang',';;',1,'NULL'),('EEECS6895',1,'Advanced Big Data Analytics','TH','19:00','21:30','Ching-Yung Lin',';;',1,'In this course, students will conduct Research and Development on the tasks that shall collectively contribute to building intelligent machines that are like human, or more knowledgable than human, through analyzing Big Data. Most lectures will be divided by two parts. The first part will be the presentations by Prof. Lin or guest speakers to explain the potential Computer Science / Electrical Engineering technologies for building such machines. The second part will be students\' presentations on their progress in the 4 areas: (1) Cognitive Robot, (2) Finance Robo-Advisor, (3) Knowledge Graphs, and (4) Software for Next-Generation Hardware Platforms.'),('WCBMF4761',1,'Computational Genomics','MOWE','16:10','17:25','Pe\'er, Itsik G',';;',0,'Disruptive technologies in genomics continuously cause exponential increase in data throughput that outpaces available computing resources, and therefore requires sophisticated analysis methods. The class is designed to provide a broad introduction to computational methods used in genomics, getting students to the level of carrying out a project in the field. The class syllabus should be viewed from a dual perspective. In terms of genomics applications, the class covers high throughput (\"Next Generation\"\") sequencing of genomic DNA (mapping'),('WCOMS4111',1,'INTRODUCTION TO DATABASES','FR','10:10','12:40','Donald F Ferguson',';;',2,'The fundamentals of database design and application development using databases: entity-relationship modeling, logical design of relational databases, relational data definition and manipulation languages, SQL, XML, query processing, physical database tuning, transaction processing, security. Programming projects are required.'),('WCOMS4111',2,'INTRODUCTION TO DATABASES','TUTH','16:10','17:25','Wu, Eugene',';;',2,'The fundamentals of database design and application development using databases: entity-relationship modeling, logical design of relational databases, relational data definition and manipulation languages, SQL, XML, query processing, physical database tuning, transaction processing, security. Programming projects are required.'),('WCOMS4111',3,'INTRODUCTION TO DATABASES','MO','16:10','18:40','Biliris, Alexandros',';;',2,'The fundamentals of database design and application development using databases: entity-relationship modeling, logical design of relational databases, relational data definition and manipulation languages, SQL, XML, query processing, physical database tuning, transaction processing, security. Programming projects are required.'),('WCOMS4112',1,'Database System Implementation','MOWE','13:10','14:25','Ross, Kenneth A','WCOMS4111;;',0,'The principles and practice of building large-scale database management systems. Storage methods and indexing, query processing and optimization, materialized views, transaction processing and recovery, object-relational databases, parallel and distributed databases, performance considerations. Programming projects are required.'),('WCOMS4113',1,'Fundamentals of Large-Scale Distributed Systems','MOWE','13:10','14:25','Geambasu, Roxana','WCOMS4118  WCOMS4119;;',1,'Design and implementation of large-scale distributed and cloud systems. Teaches abstractions, design and implementation techniques that enable the building of fast, scalable, fault-tolerant distributed systems. Topics include distributed communication models (e.g., sockets, remote procedure calls, distributed shared memory), distributed synchronization (clock synchronization, logical clocks, distributed mutex), distributed file systems, replication, consistency models, fault tolerance, distributed transactions, agreement and commitment, Paxos-based consensus, MapReduce infrastructures, scalable distributed databases. Combines concepts and algorithms with descriptions of real-world implementations at Google, Facebook, Yahoo, Microsoft, LinkedIn, etc'),('WCOMS4115',1,'Programming Languages and Translators','MOWE','16:10','17:25','Edwards, Stephen A.',';;',1,'Modern programming languages and compiler design. Imperative, object-oriented, declarative, functional, and scripting languages. Language syntax, control structures, data types, procedures and parameters, binding, scope, run-time organization, and exception handling. Implementation of language translation tools including compilers and interpreters. Lexical, syntactic and semantic analysis; code generation; introduction to code optimization. Teams implement a language and its compiler.'),('WCOMS4115',2,'Programming Languages and Translators','MOWE','13:10','14:25','Ray, Baishakhi',';;',2,'Modern programming languages and compiler design. Imperative, object-oriented, declarative, functional, and scripting languages. Language syntax, control structures, data types, procedures and parameters, binding, scope, run-time organization, and exception handling. Implementation of language translation tools including compilers and interpreters. Lexical, syntactic and semantic analysis; code generation; introduction to code optimization. Teams implement a language and its compiler.'),('WCOMS4118',1,'Operating Systems, I','TUTH','13:10','14:25','Nieh, Jason',';;Knowledge of C',2,'Design and implementation of operating systems. Topics include process management, process synchronization and interprocess communication, memory management, virtual memory, interrupt handling, processor scheduling, device management, I/O, and file systems. Case study of the UNIX operating system. A programming project is required. Science requirement: partial fulfillment.'),('WCOMS4119',1,'Computer Networks','TUTH','13:10','14:25','Katz-Bassett, Ethan',';;',2,'Introduction to computer networks and the technical foundations of the Internet, including applications, protocols, local area networks, algorithms for routing and congestion control, security, elementary performance evaluation. Several written and programming assignments required.'),('WCOMS4121',1,'COMPUTER SYSTEMS FOR DATA SCIENCE','TU','19:00','21:30','Wu, Eugene',';;',0,'NULL'),('WCOMS4156',1,'Advanced Software Engineering','TUTH','10:10','11:25','Kaiser, Gail E','WCOMS4111 WCOMS4115 WCOMS4118 WCOMS4444;;',2,'Assumes substantial prior software development experience in one or more of C++, Java or C#, as well as basic familiarity with using SQL. Focuses primarily on component model frameworks (EJB, .NET/COM+, Web Services) and quality assurance (code inspection, unit and integration testing, stress testing). Introduction to UML. Surveys other software lifecycle topics as time permits. Centers on an intense semester-long multi-iteration team project building an N-tier application.'),('WCOMS4160',1,'Computer Graphics','TUTH','11:40','12:55','Zheng, Changxi',';;',2,'Strong programming background and some mathematical familiarity including linear algebra is required. Introduction to computer graphics. Topics include 3D viewing and projections, geometric modeling using spline curves, graphics systems such as OpenGL, lighting and shading, and global illumination. Significant implementation is required: the final project involves writing an interactive 3D video game in OpenGL.'),('WCOMS4162',1,'Advanced Computer Graphics','MOWE','14:20','15:55','Changxi Zheng','WCOMS4167 WCOMS4160;;',0,'A second course in computer graphics covering more advanced topics including image and signal processing, geometric modeling with meshes, advanced image synthesis including ray tracing and global illumination, and other topics as time permits. Emphasis will be placed both on implementation of systems and important mathematical and geometric concepts such as Fourier analysis, mesh algorithms and subdivision, and Monte Carlo sampling for rendering.'),('WCOMS4167',1,'Animation','TU','16:10','18:15','Grinspun, Eitan',';;Knowledge of C++',2,'Intensive introduction to computer animation, including: fundamental theory and algorithms for computer animation, keyframing, kinematic rigging, simulation, dynamics, free-form animation, behavioral/procedural animation, particle systems, post-production; small groups implement a significant animation project; advanced topics as time permits.'),('WCOMS4170',1,'User Interface Design','TUTH','13:10','14:25','Feiner, Steven K',';;',1,'Introduction to the theory and practice of computer user interface design, emphasizing the software design of graphical user interfaces. Topics include basic interaction devices and techniques, human factors, interaction styles, dialogue design, and software infrastructure. Design and programming projects are required.'),('WCOMS4172',1,'3D User Interfaces and Augmented Reality','TUTH','13:10','14:25','Feiner, Steven K','WCOMS4160 WCOMS4170;Instructor\'s permission;',0,'Design, development, and evaluation of 3D user interfaces. Interaction techniques and metaphors, from desktop to immersive. Selection and manipulation. Travel and navigation. Symbolic, menu, gestural, and multimodal interaction. Dialogue design. 3D software support. 3D interaction devices and displays. Virtual and augmented reality. Tangible user interfaces. Review of relevant 3D math.'),('WCOMS4180',1,'Network Security','FR','10:10','12:40','Cook, Debra Lee','WCOMS4119;;',0,'Introduction to network security concepts and mechanisms. Foundations of network security and an in-depth review of commonly-used security mechanisms and techniques, security threats and network-based attacks, applications of cryptography, authentication, access control, intrusion detection and response, security protocols (IPsec, SSL, Kerberos), denial of service, viruses and worms, software vulnerabilities, web security, wireless security, and privacy.'),('WCOMS4181',1,'Security I','MOWE','14:40','15:55','Jana, Suman',';;',1,'NULL'),('WCOMS4182',1,'SECURITY II','MO','18:10','20:00','Steven M Bellovin','WCOMS4181;;',0,'NULL'),('WCOMS4186',1,'MALWARE ANALYSIS&REVERSE ENGINEERING','TH','16:10','18:40','Sikorski, Michael',';;',1,'NULL'),('WCOMS4187',1,'Security Architecture and Engineering','MOWE','14:40','15:55','Jana, Suman','WCOMS4118 WCOMS4180 WCOMS4119;;',2,'COMS E 6998-009'),('WCOMS4203',1,'Introduction to Graph Theory','FR','16:00','18:00','Timothy Sun',';;',0,'In this class, we will cover fundamental topics in graph theory, such as coloring, planarity, connectivity, matchings, and extremal graph theory. Some areas we may also cover include matroid theory and embeddings of graphs on higher-genus surfaces.'),('WCOMS4236',1,'Introduction To Computational Complexity','MOWE','10:10','11:25','Weinstein, Omri',';;',2,'Develops a quantitative theory of the computational difficulty of problems in terms of the resources (eg. time, space) needed to solve them. Classification of problems into complexity classes, reductions and completeness. Power and limitations of different modes of computation such as nondeterminism, randomization, interaction and parallelism.'),('WCOMS4241',1,'Numerical Algorithms and Complexity','MOWE','16:10','17:25','Joseph F. Traub',';;',0,'Basic concepts of scientific computations: complexity and numerical stability, Matrix multiplications,Polynomial equations, Systems of linear equations,Norms of vectors and matrices,Newton and secant algorithms'),('WCOMS4252',1,'Introduction to Computational Learning Theory','TUTH','8:40','9:55','Servedio, Rocco A.','WCOMS4231 WCOMS4236;;',1,'Possibilities and limitations of performing learning by computational agents. Topics include computational models of learning, polynomial time learnability, learning from examples and learning from queries to oracles. Computational and statistical limitations of learning. Applications to Boolean functions, geometric functions, automata.'),('WCOMS4261',1,'Introduction To Cryptography','MOWE','19:10','20:25','Bishop, Allison','WCOMS4231;;Knowledge of discrete math AND knowledge of probability',1,'An introduction to modern cryptography, focusing on the complexity-theoretic foundations of secure computation and communication in adversarial environments; a rigorous approach, based on precise definitions and provably secure protocols. Topics include private and public key encryption schemes, digital signatures, authentication, pseudorandom generators and functions, one-way functions, trapdoor functions, number theory and computational hardness, identification and zero knowledge protocols.'),('WCOMS4281',1,'Introduction to Quantum Computing','TUTH','9:00','10:25','Henryk Wozniakowski',';;Kowledge of liearn algebra',1,'The algorithms of Shor for factorization, Grover for database search, and Brassard, Hoyer, Mosca and Tapp for summation of Boolean and real functions will be covered. The emphasis will be on upper and lower bounds on the number of qubits and quantum queries needed to solve these problems. The quantum and classical complexity of a number of problems will be discussed. Exponential and polynomial speedups for quantum computing will illustrate the potential power of quantum computers.'),('WCOMS4444',1,'Programming and Problem Solving','MOWE','13:10','14:25','Ross, Kenneth A',';;',1,'Hands-on introduction to solving open-ended computational problems. Emphasis on creativity, cooperation, and collaboration. Projects spanning a variety of areas within computer science, typically requiring the development of computer programs. Generalization of solutions to broader problems, and specialization of complex problems to make them manageable. Team-oriented projects, student presentations, and in-class participation required.'),('WCOMS4460',1,'Principles of Innovation and Entrepreneurship','FR','10:10','12:40','Reinisch, William',';;',1,'Team project centered course focused on principles of planning, creating, and growing a technology venture. Topics include: indentifying and analyzing opportunities created by technology paradigm shifts, designing innovative products, protecting intellectual property, engineering innovative business models.'),('WCOMS4701',1,'Artificial Intelligence','TUTH','10:10','11:25','Dear, Tony',';;',2,'Provides a broad understanding of the basic techniques for building intelligent computer systems. Topics include state-space problem representations, problem reduction and and-or graphs, game playing and heuristic search, predicate calculus, and resolution theorem proving, AI systems and languages for knowledge representation, machine learning and concept formation and other topics such as natural language processing may be included as time permits. Examples of AI applications where these techniques are used will be discussed.'),('WCOMS4701',2,'Artificial Intelligence','TUTH','17:40','18:55','Dear, Tony',';;',2,'Provides a broad understanding of the basic techniques for building intelligent computer systems. Topics include state-space problem representations, problem reduction and and-or graphs, game playing and heuristic search, predicate calculus, and resolution theorem proving, AI systems and languages for knowledge representation, machine learning and concept formation and other topics such as natural language processing may be included as time permits. Examples of AI applications where these techniques are used will be discussed.'),('WCOMS4705',1,'Natural Language Processing','TUTH','14:40','15:55','McKeown, Kathleen',';;',2,'Computational approaches to natural language generation and understanding. Recommended preparation: some previous or concurrent exposure to AI or Machine Learning. Topics include information extraction, summarization, machine translation, dialogue systems, and emotional speech. Particular attention is given to robust techniques that can handle understanding and generation for the large amounts of text on the Web or in other large corpora. Programming exercises in several of these areas.'),('WCOMS4705',2,'Natural Language Processing','MOWE','10:10','11:25','Bauer, Daniel',';;',2,'Computational approaches to natural language generation and understanding. Recommended preparation: some previous or concurrent exposure to AI or Machine Learning. Topics include information extraction, summarization, machine translation, dialogue systems, and emotional speech. Particular attention is given to robust techniques that can handle understanding and generation for the large amounts of text on the Web or in other large corpora. Programming exercises in several of these areas.'),('WCOMS4721',1,'Machine Learning for Data Science','MOWE','17:40','18:55','Hsu, Daniel J',';;',0,'The course covers basic statistical principles of supervised machine learning, as well as some common algorithmic paradigms.'),('WCOMS4731',1,'Computer Vision','MOWE','14:40','15:55','Vondrick, Carl',';;Knowledge of C AND Calculus AND Linear algebra',1,'Introductory course in computer vision. Topics include image formation and optics, image sensing, binary images, image processing and filtering, edge extraction and boundary detection, region growing and segmentation, pattern classification methods, brightness and reflectance, shape from shading and photometric stereo, texture, binocular stereo, optical flow and motion, 2-D and 3-D object representation, object recognition, vision systems and applications.'),('WCOMS4733',1,'Computational Aspects of Robotics','TUTH','11:40','12:55','Allen, Peter Kirby',';;',1,'Introduction to robotics from a computer science perspective. Topics include coordinate frames and kinematics, computer architectures for robotics, integration and use of sensors, world modeling systems, design and use of robotic programming languages, and applications of artificial intelligence for planning, assembly, and manipulation.'),('WCOMS4735',1,'Visual Interfaces To Computers','TUTH','14:40','15:55','Kender, John R',';;',0,'Visual input as data and for control of computer systems. Survey and analysis of architecture, algorithms, and underlying assumptions of commercial and research systems that recognize and interpret human gestures, analyze imagery such as fingerprint or iris patterns, generate natural language descriptions of medical or map imagery. Explores foundations in human psychophysics, cognitive science, and artificial intelligence.'),('WCOMS4737',1,'Biometrics','FR','17:10','19:00','Peter N. Belhumeur',';;',1,'In this course. we will explore the latest advances in biometrics as well as the machine learning techniques behind them. Students will learn how these technologies work and how they are sometimes defeated. Grading will be based on homework assignments and a final project. There will be no midterm or final exam. This course shares lectures withÎ¾COMSÎ¾E6737. Students takingÎ¾COMSÎ¾E6737Î¾are required to complete additional homework problems and undertake a more rigorous final project. Students will only be allowed to earn credit forÎ¾COMSÎ¾W4737Î¾orÎ¾COMSÎ¾E6737Î¾and not both.'),('WCOMS4761',1,'Computational Genomics','TUTH','16:10','17:25','Yechiam Yemini',';;',1,'Emerging high-thruput experimental techniques --DNA sequencing and microarray measurements of RNA expression-- have been transforming biology. These techniques create vast amounts of data on the structure and operations of the cell. Computational techniques to analyze these data -- aka \"in silico biology\"\" -- have been playing an increasing role in advancing biological knowledge. This course aims to provide a state of the art working knowledge of these techniques'),('WCOMS4771',1,'Machine Learning','MOWE','10:10','13:25','Hsu, Daniel J',';;',2,'Topics from generative and discriminative machine learning including least squares methods, support vector machines, kernel methods, neural networks, Gaussian distributions, linear classification, linear regression, maximum likelihood, exponential family distributions, Bayesian networks, Bayesian inference, mixture models, the EM algorithm, graphical models and hidden Markov models. Algorithms implemented in Matlab.'),('WCOMS4771',2,'Machine Learning','MOWE','14:40','15:55','Verma, Nakul',';;',2,'Topics from generative and discriminative machine learning including least squares methods, support vector machines, kernel methods, neural networks, Gaussian distributions, linear classification, linear regression, maximum likelihood, exponential family distributions, Bayesian networks, Bayesian inference, mixture models, the EM algorithm, graphical models and hidden Markov models. Algorithms implemented in Matlab.'),('WCOMS4772',1,'Advanced Machine Learning','WE','16:10','18:00','Daniel Hsu','WCOMS4771;;',1,'COMS 4772 is an advanced graduate-level course on machine learning theory. The course will cover theoretical aspects of high-dimensional data analysis and statistical machine learning.'),('WCOMS4995',1,'Deep Learning','MOWE','19:10','20:25','Drori, Iddo',';Instructor\'s permission;',2,'Special topics arranged as the need and availability arises. Topics are usually offered on a one-time basis. Since the content of this course changes each time it is offered, it may be repeated for credit. Consult the department for section assignment.'),('WCOMS4995',3,'Hacking 4 Defense','TU','16:10','18:40','Blaer, Paul S',';Instructor\'s permission;',1,'Special topics arranged as the need and availability arises. Topics are usually offered on a one-time basis. Since the content of this course changes each time it is offered, it may be repeated for credit. Consult the department for section assignment'),('WCOMS4995',4,'INTRO TO DATA VISUALIZATION','TU','18:10','20:00','Chang, Agnes',';;',1,'NULL'),('WCOMS4995',5,'CASUAL INFERENCE FOR DATA SCI','TH','19:00','21:30','Kelleher, Adam',';;',1,'Special topics arranged as the need and availability arises. Topics are usually offered on a one-time basis. Since the content of this course changes each time it is offered, it may be repeated for credit. Consult the department for section assignment'),('WCOMS4995',6,'ELEMENTS DATA SCI FIRST CRSE','TU','19:00','21:30','Wang, Haiyuan',';Instructor\'s permission;',1,'Special topics arranged as the need and availability arises. Topics are usually offered on a one-time basis. Since the content of this course changes each time it is offered, it may be repeated for credit. Consult the department for section assignment.'),('WCOMS4995',7,'ELEMENTS FOR DATA SCIENCE','MO','19:00','21:30','Gibson, Bryan',';;',1,'Special topics arranged as the need and availability arises. Topics are usually offered on a one-time basis. Since the content of this course changes each time it is offered, it may be repeated for credit. Consult the department for section assignment.'),('WCOMS4995',8,'ELEMENTS DATA SCI FIRST CRSE B','TH','19:00','21:30','Gibson, Bryan',';Instructor\'s permission;',1,'Special topics arranged as the need and availability arises. Topics are usually offered on a one-time basis. Since the content of this course changes each time it is offered, it may be repeated for credit. Consult the department for section assignment.'),('WCSEE4119',1,'Computer Networks','TUTH','13:10','14:25','Katz-Bassett, Ethan',';;',2,'Introduction to computer networks and the technical foundations of the Internet, including applications, protocols, local area networks, algorithms for routing and congestion control, security, elementary performance evaluation. Several written and programming assignments required.'),('WCSEE4140',1,'Networking Laboratory','MOWE','10:10','11:25','Zussman, Gil',';;',2,'In this course, students will learn how to put \"principles into practice'),('WCSEE4823',1,'Advanced Logic Design','MOWE','11:40','12:55','Seok, Mingoo',';;',0,'An introduction to modern digital system design. Advanced topics in digital logic: controller synthesis (Mealy and Moore machines); adders and multipliers; structured logic blocks (PLDs, PALs, ROMs); iterative circuits. Modern design methodology: register transfer level modelling (RTL); algorithmic state machines (ASMŠ—Ès); introduction to hardware description languages (VHDL or Verilog); system-level modelling and simulation; design examples.'),('WCSEE4824',1,'Computer Architecture','TUTH','14:40','15:55','Sethumadhavan, Simha','WCSEE4827;;',2,'Introduction to modern computer architecture. Focuses on advanced topics, illustrated by recent case studies. Topics include fundamentals of quantitative analysis, basics of pipelining, advanced pipelining, caches, memories, storage systems, multiprocessors.'),('WCSEE4868',1,'System-on-Chip Platforms','TUTH','11:40','12:55','Carloni, Luca',';;',1,'NULL'),('WCSOR4231',1,'Analysis of Algorithms I','TUTH','10:10','11:25','Yannakakis, Mihalis',';;',2,'Introduction to the design and analysis of efficient algorithms. Topics include models of computation, efficient sorting and searching, algorithms for algebraic problems, graph algorithms, dynamic programming, probabilistic methods, approximation algorithms, and NP-completeness.'),('WCSOR4231',2,'Analysis of Algorithms I','TUTH','11:40','12:55','Yannakakis, Mihalis',';;',2,'Introduction to the design and analysis of efficient algorithms. Topics include models of computation, efficient sorting and searching, algorithms for algebraic problems, graph algorithms, dynamic programming, probabilistic methods, approximation algorithms, and NP-completeness.'),('WCSOR4246',1,'ALGORITHMS FOR DATA SCIENCE','TUTH','13:10','14:25','Drinea, Eleni',';;',2,'NULL'),('WCSOR4246',2,'ALGORITHMS FOR DATA SCIENCE','TUTH','17:40','18:55','Drinea, Eleni',';;',2,'NULL');
/*!40000 ALTER TABLE `course` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `sentiment`
--

DROP TABLE IF EXISTS `sentiment`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `sentiment` (
  `number` varchar(64) NOT NULL,
  `professor` varchar(64) DEFAULT NULL,
  `review` text NOT NULL,
  `score` text NOT NULL,
  `magnitude` text NOT NULL,
  `words` text,
  KEY `idx` (`number`),
  KEY `idx2` (`professor`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `sentiment`
--

LOCK TABLES `sentiment` WRITE;
/*!40000 ALTER TABLE `sentiment` DISABLE KEYS */;
INSERT INTO `sentiment` VALUES ('WCOMS4701','Pasik, Alexander','Entertaining and fun, cares about the material and seems genuinely excited to teach people.\nReally, really likes Lisp and Recursion.\nDoesn\'t use a textbook for data structures. My only complaint is that given the time (one full semester) he could have gone into a bit more detail about various, more exotic, data structures. But what he does cover, he does very well.\nSo I recommend him.\nWorkload:\n6 assignments, Midterm and Final in 3137. 4 Assignments, Midterm and Final in 4701.','2.999999896','4.199999943','excited, exotic, fun'),('WCOMS4205','Gross, Jonathan','Prof. Gross teaches 3 sequential courses - Discrete Math, Graph Theory, and Combinatorial Theory - and teaches them all in the same fashion. It helps to go to class, but since a complete lecture notes booklet is available and covers everything from the beginning to the end of the semester, you could potentially learn the material yourself. His tests are open book, but are by no means easy - they are often referred to as \"the learning experience.\" Overall, he\'s a great teacher, and makes the courses bearable even for a math-illiterate like myself.\nWorkload:\nNo homework. Open-book tests. Lectures conducted according to a lecture-notes booklet.','1.600000001','1.600000001','great'),('WCBMF4761','Yemini, Yechiam','He\'s one of the worst prof I\'ve ever had.\nHis lecture is very dry and he doesn\'t seem\nto really care much about students.\nWorkload:\nOne research project. 2 extra credit assignment','-1.299999982','1.299999982','worst'),('WCBMF4761','Leslie, Christina','Compare to other 4000 level classes such as OS and PLT, this class is an easy technical elective. Christina Leslie is a very caring teacher, even though her lectures can be boring and involve a lot of materials. She writes a lot on the board and you\'ll have to go to class in order to do the exams. The textbook is virtually useless. The tests are open book and based on the class notes, so, GO TO CLASS AND YOU\'LL GET an A.\nYou\'ll need substantial biology background to truely enjoy this class, though biology is not needed to ace this class.\nWorkload:\n3 Homework assignments, midterm, final and a project (it doesn\'t sound as much as it is)','1.499999993','3.299999945','useless'),('WCOMS4156','Sheth, Swapneel','Feels like learning nothing but how to argue with TAs. Definitely not worth the tuition, and don\'t waste your money and time on it.\nThe grading is the most ridiculous part - no guildelines on how the answers are graded, and for some assignments even asking questions regarding the assignment description is forbidden. If you argue with TA, you\'ll probably be rewarded a lower score. Someone accidentally witnessed how the TA graded the assignments - it was in a pretty irresponsible manner. No surprise if you find the TA didn\'t actually read your assignment, and gave you a random number instead.\nSwapneel is a good guy and might be a good researcher to work with, but so sad that he just didn\'t take the teaching job seriously.\nWorkload:\nA group project (continues throughout the whole semester) and a few individual assignments. Most of them are reading and writing assignments.','-3.199999973','4.200000003','irresponsible, waste'),('WCOMS4156','Sheth, Swapneel','Oh dear. I don\'t even know where to begin.\nConsider this review as a warning to all of you misguided souls who are thinking of taking this class under Swapneel. Consider this review a strong and heavy deterrent such that you may maintain and keep your sanity and save yourself the struggle of taking a class with arguably the worst teacher I\'ve ever encountered in my entire life.\nSure, Swapneel is a nice guy and he\'s approachable. I\'m sure he\'s great in the other classes he teaches; I don\'t doubt the accuracy of his other reviews for a second. However, ABSOLUTELY NONE OF THAT APPLIES TO ASE. Swapneel\'s ideas for this class go from mind-fuck stupid to borderline insane.\nAhem. There are five distinct reasons you don\'t want to take this class, four of which are a direct result of Swapneel\'s horrible decisions:\n1. This is a class about software engineering, and you will be doing a lot of busy work. You\'ll be doing a lot of reading. Now you MIGHT think that would make for an easy A but you would be grossly mistaken for reasons I\'ll get into in just a second. The material in the class is EXTREMELY boring unless you\'re actually into this shit. You could seriously learn everything in the class by either reading Wikipedia or holding down a programming job for a little while. The material is definitely not something to spend your tuition on because you are almost certainly going to learn it elsewhere.\n2. The Midterm. The midterm wasn\'t exactly difficult (even though the average was in the 60\'s) but there was a certain stipulation to the grading that didn\'t make any sense. Each multiple choice question was worth 3 points; missing a question not only cost you the chance at getting those 3 points but you would lose an additional point as well. What\'s the point? I don\'t know why Swapneel thought this would be a good idea; it\'s nonsense like this and the teacher\'s inability to know unequivocal rock-fuck stupid when the rest of the class sees it that will prove to be his defining hallmark in ASE.\n3. The \"Implementation\" assignment. You spend a good chunk of the class developing a piece of software using the class concepts to guide you along. There is a proprietary repository set up for the class where you can use Git to handle your code and there is also a website called Jira which allows teams to create and document project tasks. The skillful use of both of these tools as well as planning and executing software engineering strategies is crucial to your success and one would think that mastery of these tools and concepts would be critical in the grading of your project. WRONG. The majority of your project grade comes from a subjective analysis by the TAs. In order words, you could program a solid piece of software and demonstrate exemplary skill of all class concepts in getting your work done; however, if the TA\'s for whatever reason don\'t like your project, don\'t think it\'s cool enough, or you are a bad speaker and don\'t demonstrate it in a way that would blow their mind then it\'s going to hurt you. I can understand subjective analysis being a bit player when it comes to grading, but why the fuck do you make it more important than the objective analysis which is far more relevant to the intentions of the class?\n4. The third assignment. The assignment was out of 40 points with additional 20 points of extra credit. The average on the assignment itself was a 17; the average on the extra credit was a 4. Yes, that\'s a four. Given the horrible midterm average and the average of this assignment, I don\'t think it\'s a stretch to say that the class is at fault; that\'s the mark of a shitty teacher. Furthermore, the TA\'s took points off for things that weren\'t even mentioned in the assignment document. For example, part of the assignment required White Box testing on a hypothetical feature of a certain project. The assignment stated that all we had to include was our \"general procedure\" for doing white box testing. The TA who graded me took off points for only writing a \"general procedure\". What gives?\n5. The testing assignment. This one BY FAR is the worst offender and permanently turned me against Swapneel. This is by far the stupidest assignment I\'ve ever done in my life, particularly because of one caveat of the grading. You see, the assignment itself was 200 points with 50 extra credit; 70 points of the 200 dealt with testing other teams\' applications. Each team tested two other teams; you could get a maximum of 35 points per team. Before actually performing the testing, each team had to document as many bugs as they could in the aforementioned Jira website used in the class. Documenting a bug meant that it could not be used against you when other teams tested you; however, if a team found a bug that WASN\'T documented it not only cost the tested team 2 points but the testing team would gain 2 points. In order to get the full 35 points for the assignment your team had to find 15 undocumented bugs and 10 documented bugs; 1 point per documented and 2 for each undocumented. Your team could not get more than 15 points for documented bugs and 20 for undocumented; even if your team found 40 documented bugs you could only get a maximum of 15 points by virtue of all bugs being documented. Furthermore, each team was only given 30 minutes to test each application. TO RECAP: In order to get a full score on testing a particular team, you had 30 minutes to find at least 25 bugs. Of those 25 bugs, EXACTLY 15 had to be undocumented and 10 had to be undocumented. Is it is easy to see how this is borderline impossible? Congratulations, you have more foresight than Swapneel Sheth. Furthermore, a team could get stuck with an application that had relatively little bugs thus harming their grade due to factors that are impossible to control; when the class was berating him for this possible outcome his only reply was a sheepish \"Yes, it could be unfair, but that\'s why you get two teams to test.\". The teacher deliberately knew the assignment could be unfair but went ahead with it anyway: if that isn\'t a mark of poor judgement then I don\'t know what is. OH....and if you happened to program a perfect application with ZERO bugs then the two teams testing you would get full credit (as long as the TAs couldn\'t find any either). The team creating the perfect application would get jack shit for having made such a fine specimen of software. I\'m not even mentioning the infighting that occurred during the testing phase; the stipulations of the assignment encouraged teams to screw each other over by \"finding\" undocumented bugs and I saw several arguments in the testing room between whether or not so-and-so was a bug. Why the fuck would the teacher think this was a good idea? Does this sound like something you want to be spending your time and tuition on?\nThink about it. Save yourself. Go to SSOL and click that \"unregister\" button. You\'ll be glad you did.\nWorkload:\nI don\'t think the workload was any better or worse than a typical CS class; just lots of writing which can be highly mind-numbing.','-10.00000001','29.70000017','stupidest, worst, exemplary'),('WCOMS4156','Kaiser, Gail','I would not recommend this course unless a) you really want to be a software engineer and have no prior experience or b) absolutely need it to graduate. It\'s mostly busywork and stuff that you can learn in a decent summer internship at a software company (if you want to go into software).\nThat being said, Gail is a wonderful person, and is very kind and understanding. However, her lectures tend to be very dry and not very helpful, and the course materials aren\'t any better. The course skims over component model frameworks, software testing and various software quality assurance techniques, but doesn\'t really go deep enough to make things useful. Most of these topics are covered briefly in lecture, and then exercised in a group project where they become a passing thought when completing your documentation. By the end, you\'ll learn that you should do \'xx\' and \'yy\' if you\'re working in the software industry on a big project, but will be unsure as to what exactly qualifies as \'xx\' or \'yy\'.\nWorkload:\nTake home midterm and final, three easy homeworks in the beginning of the semester, and one semester long group project. The group project is very hit or miss depending on your group (I chose poorly). Oh and five to six pop quizzes that really just check if you\'re sitting in lecture and still awake (it\'s hard sometimes...).','0.800000019','3.399999984','wonderful, gail'),('WCOMS4156','Kaiser, Gail','Professor Kaiser is interested in her material and works hard at getting it across to her students. The only thing is that she isn\'t the best at instructing students how to code within the complex component frameworks introduced in this course. However, teams of students have freedom to choose a project of their liking, which is definitely preferred over a forced project such as Robot Wars or some ridiculous role playing game with clients, servers, and bots. With the freedom to choose a project comes the desire to code the project. Gail follows up with the teams throughout the semester, giving feedback and ensuring that the students pick up on the material, and I\'ve been more enthusiastic about this class than I had been with others within the CompSci department. Don\'t be afraid of her first class when she tries to scare you off; you\'ll learn a lot, you\'ll learn how to document the software-development process, and if you work at your project, you\'ll walk out of the class knowing a great deal.\nWorkload:\nTeam project with three iterations, as well as a take home midterm and take home final, both about the project\'s development and concepts discussed in class (and mentioned in the book)','3.200000033','3.600000039','best, great, gail'),('WCOMS4231','Stein, Clifford','You know how you imagined it would be supercool to actually learn algorithms from the S of CLRS? Well, its better than what you imagined.\nIf you want to learn algorithms from scratch, or just brush up the basics and then step into the more advanced Dynamic Programming / Graph algorithms, this is the class for you. Prof. Stein is extremely approachable, and very patient with the stupidest of questions. He will not take any Math background for granted. First few lectures can be boring if you know Big-Oh but he is really wonderful at motivating most of the \"magic\" behind the algorithms. Most of the assignments are difficult and you really want to get started as soon as they are out.\nMidterm was not too bad, if you had solved the assignments on your own and the final was downright easy.\nOverall, an extremely enjoyable class. Highly recommended.\nWorkload:\nHeavy: 7 assignments + 1 take home midterm + final','4.899999946','6.599999934','supercool, stupidest, enjoyable'),('WCOMS4231','Yannakakis, Mihalis','I took the class CSOR 4231 with Prof Yanakakis. Unless you are really stupid, do NOT take this class under this Professor. Granted, he has great credentials and has won a Knuth prize or two for his research. But at the end of the day, teaching a course is not the same as doing research and not everyone can do both well.\nInstead of making the class interesting and explaining the background behind how algorithms should be designed and how they came to be, he just puts the algorithm on the board and makes a poor attempt at explaining it. Watch one lecture given by Stein on CVN and you will be inspired .. and sit for one lecture with this guy, and you will forget the little you knew before the class. His homeworks concentrate more on proving correctness than on designing algorithms and mapping problems to standard algorithms. It is a pity that a researcher of his caliber, does not have the ability or the inclination to make this class interesting. Believe me, you would be better off watching lectures on MIT OCW or stein\'s on CVN. You have been warned.\nWorkload:\nThe workload is high and you would have to devote about 10-15 hours a week for this course. There are 6 homeworks, a mid-term and a final.','-1.099999979','4.100000024','great, poor, inspired'),('WCOMS4231','Stein, Clifford','Prof Stein is a good prof w.r.t.knowledge but his academic policy is not foolproof or rather I can say has a lot of loopholes in it . On one hand he does not prefer people referring to the sources on the internet whereas on the other hand his TAs give full credit to those who discuss the sums . So copying verbatim under the name of discussion is prevalent but if someone wants to access wikipedia or any other internet source then it is not allowed . Also the policy of picking up individuals for violating the academic policy seems to be random as many copy cats do escape . Also both the professors of algorithms do not show the same honesty while following this highly controversial and confusing academic honesty policy\nWorkload:\nheavy with 7 assignments , midterm , final','-2.900000036','4.300000012','violating'),('WCOMS4231','Monteleoni, Claire','I guess professor does not have experience in teaching. She is not able to properly deliver the lecture, she herself is confused most of the time. Its a wastage of time attending her lecture.\nIts better to study by yourself from book as her lectures does not contain anything new.\nWhen you ask her some doubt, you will find that doubt is still doubt.\nMoreover, she is very harsh to the students, in short not at all student friendly. She even does not listen to the student\'s problems. Her grading is also very strict. I will suggest not to take this course under her.\n.','-3.999999985','3.999999985','wastage'),('WCOMS4231','Stein, Clifford','I think Professor Stein teaches well. He understands the subject thoroughly as can be seen in his explanations. I haven\'t seen even one instance of a question he couldn\'t answer convincingly. He is helpful in office hours and will walk you through a problem if necessary.\nThe class is in the morning (9 am ) and it\'s possible you will sleep through some classes. But every class is worth going to (take coffee !) . I find Stein\'s explanations in class easier to understand that the book. Many a times I have gone back to my notes because the book seemed to complicate thing a trifle.\nWorkload:\nThe load is fair, bordering on too much (7 homeworks, all lengthy). The (take home) midterm was a breeze if you attended class.','2.000000119','4.800000072',''),('WCOMS4231','Stein, Clifford','I think he\'s a good teacher who can explain things well, but attendance does drop at the end, as people see that a significant part of the course revisits Data Structures. I wanted to add that in Algorithms, he does not care whether the homework is handed in at the beginning or end of class (as opposed to his other class), and that undergrads are curved separately from the grads (the class is 80% graduate students).\nWorkload:\n7 Homeworks, take home midterm, final','0.400000021','0.800000027',''),('WCOMS4701','Creamer, German','AI with Creamer is completely useless. I will admit that he tries very hard to teach the material and he is a genuinely nice person, but that will not dismiss the poor teaching and unfortunate organization of the course. The homework assignments are theory based out of the textbook, which is supposed to be the bible of artificial intelligence. That part is fine - besides for the part that the HW is pretty useless also.\nThe redeeming quality of this course was the final project - this is a matter of how much work you want to put into it: time in = amount learned. The examinations are also fairly worthless.\nI am sure that this course is easier than Pasik\'s course. If you have any desire to learn anything, suck it up and take it with someone who is worthwhile.\nWorkload:\nDepends on how much you want to learn. Not much work at all - easy to get a B, besides for project. Even easy to get A.','-4.099999994','5.49999997','useless, worthless, nice'),('WCOMS4701','Pasik, Alexander','This was probably the most fascinating course, which is saying a lot given that Pasik is the professor. Learned a lot but only because this is material that I hadn\'t been exposed to in other classes and I could have learned 3 times as much had Pasik not ended class half an hour early (on average) every class and skipped 8 classes for review sessions/midterms. Additionally, it should not have been required to learn LISP which wasted an additional 2 weeks at the beginning where we didn\'t learn any AI. He also cancelled a class at the end because he didn\'t have anything else to teach us. Overall, if you consider that he only used about 2/3 of the allotted class time, we had about 10 lectures on AI for the whole semester. How do courses at CMU, Stanford, MIT and Cornell manage to do fill a whole semester?\nAs stated in other reviews, all of his lectures are taken totally out of the book, except the knowledge representation lectures. In these lectures, rather than covering the interesting material on epistemic logic that the book had, he spent the entire time on algorithms for expert systems which haven\'t really been used since the 90s.\nHe also arbitrarily set his curve to a B-/C+ which would be fine except no other professor in the department does that.\nBasically Artificial Intelligence is an extremely interesting field and the fact that I am still interested in it despite Pasik is a testament to the material. However, if you can avoid Pasik, do so.\nWorkload:\nThe three assignments we had for the course were all Lisp programming and took forever since we barely learned Lisp in the two weeks we covered it. I kept feeling like I knew what I wanted my program to do but I didn\'t know how to make Lisp do what I wanted. It would have been a much better test of whether we were learning AI if he had had us program the algorithms in a language we knew. These assignments also didn\'t cover any theory, which was really the important part of the course.\n4 pretty easy quizzes (except the Lisp one which assumed that you already knew a recursive algorithm for the towers of Hanoi problem) and easy final.','-0.899999991','3.50000006',''),('WCOMS4701','Pasik, Alexander','If tl;dr, just scroll to bottom.\nOf the three CS classes I\'ve taken so far at Columbia, this was hands down the worst of all of them. Prior to enrolling in the class, I read the reviews here on CULPA and figured that the people complaining about Pasik\'s teaching style and glossing over LISP and other concepts were simply whiners. It took me 3 lectures to completely reverse my initial opinion. Let me preface this review by saying that I\'m not disgruntled because I did poorly in the class (even without the extra credit, I would\'ve gotten an A). I\'m bitter about enrolling in this class because it was nothing short of a waste of time and money.\nOver the course of the semester, I\'ve come to realize that Pasik really doesn\'t put in that much effort into teaching. Here\'s why: of the 28 days that the class was scheduled to meet, 8 of them were committed to other activities (6 reviews, 2 exams). Of these review sessions, Pasik shows up to exactly one. While I thought the review session that he conducted was actually the best among all of them (probably because the subsequent reviews were horrific), he prepared no material and basically held an hour-long Q&A section. Moreover, he canceled one additional class, and ended at least 5 classes 20+ minutes early. So all-in-all, instead of using 28 days to teach, he effectively taught for roughly 18. The result of this is that we barely covered any material. A simple google search of Artificial Intelligence syllabi from top institutions like Stanford, CMU, MIT, etc, reveals that we covered about 1/3 of the material they did. And that\'s a generous estimate. I have one word for that: pathetic.\nOne aspect of Pasik\'s teaching that many of my classmates found irritating was the fact that he read directly off of his slides. In the past during my undergrad years, and even this past semester, I\'ve had professors that used PowerPoint slides extensively. Sometimes, they even read off of the slides verbatim just like Pasik. This I have no problem with. What annoyed me the most was the dearth of content in those slides and how cryptic most of them were. This can be especially frustrating when some of the material he presents is not covered in the book, and the only source of reference you have is a figure of a rectangle with a few splotches of color that\'s supposed to represent the effectiveness of parallelism.\nFinally, a feature of Pasik\'s teaching that I found to be ineffective and even counterproductive was his insistence on going over code in class. I think the main problem with this is that code in LISP is not readable. The task of keeping track of what all the different built-in functions in LISP do in addition to the user-defined functions Pasik writes results in students being confused as everything becomes just one huge convoluted mess. I think that the time spent in analyzing LISP code would be better spent if the algorithms were presented in pseudo-code (mostly in ENGLISH) rather than actual code. Since the course is comprised of mostly grad students, converting pseudo-code to LISP code should not be hard once the students actually understand what the program is supposed to do.\nIs Pasik a nice guy? I wouldn\'t know since he has no office hours and is only transiently available before and after class. I stopped emailing him questions shortly after term started since his responses are one-liners and don\'t really answer your more complicated questions. Maybe it\'s because he\'s involved in many other activities that doesn\'t give him time prepare and do the material justice. I get it, professors are busy people. But there\'s a line between being a busy person and simply not giving a damn.\nBottom line: if your main objective is to get an easy A, this course is the one for you. If you want to actually learn something, take a different class.\nWorkload:\n3 Assignments - they take you about a weekend each.\n2 midterms - pretty straightforward if you understand the concepts\n1 final - very straightforward.','-6.600000061','14.30000017','worst, best, ineffective'),('WCOMS4701','Pasik, Alexander','What\'s not to like about Pasik? He\'s a good teacher and a friendly guy. He\'s super patient and all kinds of approachable. If there\'s ever anything you don\'t understand he\'s more than happy to explain it to you. Unfortunately his office hours are practically non-existent, but he\'s always around for about half an hour before class, and for as long as you need after.\nThe course was taught in LISP, but if you\'re not familiar with this language, don\'t worry. He usually spends some time at the beginning of the semester explaining the basics, and none of the assignments require any really advanced level knowledge of LISP. If you get stuck, you can almost always find what you need with a little Googling.\nHis lectures are interesting and if you show up consistently and take thorough notes, you may not even need the textbook. Be warned, you will hear lots of stories about him and his family\'s zany adventures, but he\'s a good story teller and there\'s always an AI related moral in the end.\nAs another person pointed out, there is a lot of discussion about the philosophy of AI, but if you look up, you\'ll see that the name of this class is not Artificial Intelligence Programming, it\'s just Artificial Intelligence.  The history and theory of AI are relevant to the course, even if they\'re not all that relevant to the grade. There will be some readings on this and probably one question on one test somewhere. If you decide to skip it all together it won\'t kill you, but it is interesting and might even help you out a little on the homeworks.\nThe assignments are deceptively complex, but they\'re not very difficult once you figure out what you\'re supposed to be doing. Give yourself some time. You\'re not going to bang them out in one night, but you can get them done over the weekend if you don\'t have much else to do.\nThe tests are sort of cumulative. It\'s usually around 3/4 new material and 1/4 old material. Expect a coding question, usually just a variation of something from the homework. He expects you to know all the algorithms by name so be sure you\'ve go that down. Pasik will tell you himself that if you do the homework early you\'ll be pretty well prepared for the test and this is definitely true.\nWorkload:\nA few fairly short readings on AI history and philosophy\n4 programming assignments. Each can take some time because of the complexity of the assignment\n2 midterms, mostly centered around the material in the assignments\n1 final, which is just a slightly longer version of the midterms','4.100000016','8.399999954','super'),('WCOMS4701','Pasik, Alexander','Prof Pasik has a very good presentation style, but unfortunately the AI material, he covers, lacks body. He uses slides, not more than 10-12, and you would have guessed that only some introductory and intermediate concepts are covered. He spends too much time on the philosophical aspect of AI; important it may be, but I would imagine that one lecture would have been more than enough to convey the message.\nProgramming assignments are to be done in LISP. And if one has good enough experience in programming, LISP shouldn\'t be too hard to adapt to. Good thing about LISP is you don\'t have to learn it all in order to get started. I did enjoy programming in LISP and assignments were engaging but not too difficult.\nWorkload:\n4 Assignments\n2 Midterms and 1 Final Exam','0.999999993','3.000000022',''),('WCOMS4701','Pasik, Alexander','I 100% agree with the reviewer from April 15, 2010, and the later ones.\nI really want to emphasize how insufferable the homework assignments are. The assignment descriptions sound straightforward and manageable, at first. It is when you start to work on it that you realize you know WHAT the homework means (that is all the lectures are good for), but not HOW to implement it. Most of the time will be spent figuring out how the program should work, even in a conceptual way, in order to achieve the algorithm that Pasik wants.\nThis is made harder because (a) You are using Lisp for probably the first time, a language that is not used anywhere outside academia and will never be useful to you again. No other language you have learned or lab you have taken in CS at Columbia will prepare you for understanding Lisp except the concept of recursion (b) You will not learn, during lectures, the Lisp you need to do the homework. After the first couple lectures, Pasik will not continue to teach Lisp and consider everyone a \"Lisp expert\" (c) You will spend hours reading Lisp primers before you actually work on the program. For this reason (and the fact that you have 3 other CS classes to worry about), the assignments will most likely lead to several all-nighters. Pasik has a 1-point-per hour deduction late policy, which is the most ridiculous policy I\'ve ever come across in a CS class. If a student must resort to submit late, do you really think it will be by a couple hours? For a class like this, 25% deduction per day is much more reasonable.\nThe lectures are brief (usually they take Pasik 30 min to get through), with a focus on definitions instead of Lisp-based, example-driven concepts. Typically, a lecture will have one or two high-level examples (i.e. a diagram or graph), and one or two, if at all, slides of lisp code that do not relate to the homework in any way and will not be useful for exams.\nAs for the exams, I really didn\'t mind them. They are straightforward. However, each question is usually 1 point out of 10 points, so four points off already puts you at 60. Pasik will not tell you what questions will be on the exam. The best method is to read the slides carefully and focus on definitions. Also, there will be a lisp question on each exam that relates to the homework (i.e. a snippet of code from your hw).\nWorkload:\n4 programming assignments\n2 midterms (each 10 pts), 1 final (25 pts)','-0.900000013','9.999999918','best'),('WCOMS4701','Pasik, Alexander','He\'s an entertaining and friendly guy. Class is always interesting, and he incorporates more philosophical aspects of AI into the class, besides just focusing on algorithms. There were four programming assignments, the first one was extremely easy, as it was just to teach you LISP. The other four assignments did take some time, but they weren\'t break-your-back difficult. The tests were all very reasonable and short. If you read the textbook and went to class, you couldn\'t help but score well.\nHonestly I\'m surprised at some of the reviews here.\nFirst and foremost, some people seemed to say that he was poor at answering questions. If anything, I\'d say the exact opposite! He would always take time to address questions, and would even work them out on the board if he didn\'t have the answer on the top of his head. He was in *no way* dismissive of questions, and actually was looking for questions from the class more often than we had them.\nI can understand that some people might dislike his teaching style if they don\'t want to engage with him, but really, if you pay attention, you learn a lot and are entertained at the same time.\nAnd by the way, as some people have mentioned, he really does like LISP and recursion.\nOverall, I definitely would recommend him, and I think he is deserving of a silver nugget. I think the best thing about him (and this course) is that he inspires interest, because you are exposed to so many new topics.\nWorkload:\nThree exams, four programming assignments, and textbook readings. That\'s it. The last assignments are interesting in their own right, but aren\'t massive undertakings.','3.59999992','8.999999866','best, dismissive, dislike'),('WCOMS4701','Stolfo, Salvatore','This class was an incredible disappointment. Stolfo managed to make interesting material difficult to learn through his insufferable lecture style and frustrating programming assignments. He rants and pontificates, only occasionally delivering actual content. He seems to teach this class to have a captive audience for his jokes, which alternate between offensive and inane. Many are posted on his website, reflecting his general unprofessionalism. I found Stolfo so loathsome that I couldn\'t bring myself to go to lecture for the last month. When I tried to watch the lectures online (they were all posted because the class is offered to CVN students) I couldn\'t watch for more than 20 minutes. He started one class sulking because the 15 people who still attended class were not being responsive enough to a series of vague/inane questions. He tries to put on a dramatic and inspiring performance (like Gulati perhaps) but since he utterly lacks charisma the result is grating. For example, he asked the class on numerous occasions, \"do you remember when you first touched a stove and learned what hot means? do you remember? do you?\" He would keep this up until someone pretended like he or she had a memory of this exact experience. To most, this would seem like a rhetorical question but he wouldn\'t stop until he received confirmation that this very same scenario had happened to each of us.\nThe midterm and final were almost entirely composed of trick questions rather than straightforward questions about material that we had actually learned. I think they were supposed to be easy but I didn\'t understand what they were asking. Since I got around the mean grade on each, it seems like most of the class was similarly bewildered.\nStolfo\'s approach to teaching Lisp was to reminisce about the early days of computer science when it was just an elite group and make us fix buggy code. While the programming assignments were ultimately the only worthwhile part of the class, I think they could have been less frustrating while still teaching the same important lessons. After being exposed to Lisp for 50+ hours, I felt like I had learned how to conquer it and work around its structure rather than actually feeling comfortable. While Stolfo\'s introduction to the language was certainly inadequate, Lisp is basically just a frustrating language.\nIf you can tolerate these jokes (http://www.cs.columbia.edu/~sal/notes/y13.html) or find them amusing then take the class with Stolfo. Otherwise, avoid.\nWorkload:\n4 programming assignments (3 in Lisp which take forever if you\'re unfamiliar with the language - I completely disagree with the 6 hour estimate below, 1 in any language), in-class midterm & final composed of random questions that you cannot possibly prepare for','-7.500000045','11.00000001','incredible'),('WCOMS4701','Stolfo, Salvatore','I tried very, very hard to like this class.\nHere\'s my dilemma: when Stolfo teaches this course properly, it\'s a blast. He\'s an engaging, funny lecturer, the material is interesting, and the homework is a genuine pleasure to code.\nMost of the time, though, he doesn\'t teach it properly. Stolfo seems to have gotten it into his head that AI ought to be conducted like a Socratic seminar; as a consequence, you will spend most of your time in this class in awkward silence people do their best to avoid making eye contact. To make matters worse, he has a particularly nasty tendency towards extreme vagueness, so his questions tend to be things like \"so what is it about this problem?\" or even \"what was the thing that you learned during the first half of the course?\". That may fly CC, but in a computer science class (and particularly one requiring an above-average level of formal rigor) it\'s hard to imagine a less effective teaching style.\nThe real problem here is that because nobody answers his questions, the lectures creep ahead very slowly, and class falls further and further behind schedule while trying to get through basic material. Then, he realizes how far behind we\'ve fallen and skips ahead over all the tricky stuff. As a result, we ended up spending a week and a half on BFS and a day on alpha-beta pruning, and two weeks on symbolic logic followed by fifteen minutes about Bayesian inference.\nThat same vagueness also seems to manifest itself on just about every exam question, which might explain why the average on both midterm and final was below a 60% (and mind you, this is a class made up of half MS and PhD students).\nWhat\'s really maddening is that on the handful of days he says \"Fuck it, I\'m just going to lecture today\" the class is great. If he could be somehow persuaded to do this all the time I would have no hesitation at all in recommending this class; as things are right now, my feelings are mixed.\nOther random thoughts:\nThe TAs were some of the best I\'ve ever had -- friendly, approachable, and (with the exception of one disastrous mistake that made the midterm quite literally 25 times harder) very knowledgeable.\nI came into this class with the rather unique advantage of already knowing Lisp. Regardless of what the syllabus may say, they will teach you no Lisp at all, but you will be expected to know it. If you, like 90% of the class, have never seen it before, you might be well-served by picking up a copy of SICP to read over winter break.\nMake a real effort for the gameplay tournament. Five or ten points is nothing to scoff at when everybody fails the midterm (and it\'s fun).\ntl;dr. The short answer is that I don\'t see any good reason not to take this class over Pasik\'s, and if Stolfo cleans up his act for next year it may even wind up being your favorite.\nWorkload:\nExtremely reasonable. Four projects, none of which should take more than six hours to code (and three of which ended up at less than 100 lines). Exams are impossible to prepare for.','-0.400000051','9.599999979','best, best, blast'),('WCOMS4701','Pasik, Alexander','Pasik is without a doubt one of the worst professors I have had at Columbia. Though his lectures are entertaining, they gloss over the course material and provide little to no insight into the concepts, test material, or homework assignments. He always ends class early, for such reasons as \"I\'m going salsa dancing!\" When asked a question in class, he often doesn\'t know the answer and responds with some bs, or says he\'ll answer it next week with an example. Subsumption, for example, is not hard and something that he should be able to define and provide an example for on the spot, but he can\'t. His lectures have clearly not been updated in several years, and it shows. It seems like there are typos from the 90\'s that would take 2 seconds to fix, but doesn\'t bother to do anything to fix them.\nAll your homework is in LISP and Pasik barely covers LISP in class. Your knowledge of this language comes completely from independent study, and the homeworks are very time consuming. You would think that he could at least provide some sample LISP programs or god forbid tutorials that he quickly googled, but no, he leaves that up to you. As for the actual homeworks themselves, that are so vague and non-descriptive that you\'ll spend half the time trying to figure out what you have to do. Days or even hours before the due dates, TA\'s will post requirements on courseworks of things that you must include in the homework. He does not provide solutions to the homework, so you\'re screwed in that sense. He reuses the homeworks every single year, without changing them at all. This turns out to be bad because he could make the homework prompt more descriptive than 3 sentences. Be prepared to spend 40+ hours for each of the 3 homework assignments, and start them way early (you do have plenty of time). He probably has never read his own culpa reviews, and doesn\'t realize that he needs to REALLY update his lectures, homeworks, and tests.\nHis tests are ridiculous. No amount of studying can prepare you for them. It\'s not because you don\'t know the material, it\'s because you have to predict the answer that he\'s looking to hear. Even if you\'re answer is correct, as the TA agreed with me on several occasions, he could not award points because it was not identical to Pasik\'s horrible solutions. If you know the material and feel prepared, you can still do poorly because you did not mention something in your answer that was not asked for in the question. You will lose points for not writing a novel for each answer.\nPasik does not hold office hours and does not care about any of his students. Don\'t bother sending him emails or trying to get help from him.\nWorkload:\n3 programming assignments, very vague and very time-consuming.\n2 midterms, 1 final.','-9.400000088','13.10000009','worst, horrible, poorly'),('WCOMS4701','Pasik, Alexander','Prof Pasik is basically an entertainer rather than a good teacher . His gestures and mannerisms of teaching create humour but at the same time it dilutes the seriousness of the subject . The paper pattern is in no way connected to the teaching in the class. He leaves class about half an hour early in each lecture ; the time duration I thought he could have utilised better by giving more insight about lisp which was alien language to most of the students if not all. Once he even conducted a survey which was his daughters\' high school assignment - again a total waste of time . Assignments are not discussed in depth . Avoids answering doubts with cheeky replies . Overall not a good source of knowledge.\nWorkload:\nArtificial Intelligence theory is ok , but coding the assignments in lisp gives a tough time','-1.599999964','4.400000036','waste'),('WCOMS4701','Pasik, Alexander','I don\'t know why Pasik has a silver nugget because there is absolutely nothing good about his teaching. It is very clear that he has experience in the field and he is a friendly and intelligent man, but the fact remains: he reads off slides word for word, cannot answer the majority of questions we ask on the spot, and does not care whether or not we learn the material in the slightest.\nWhen we ask questions in class, we get one of the following: \"well... that\'s not important to our discussion right now\", \"uh... I don\'t know off the top of my head... but I\'ll look it up and get back to you next class\" (he never did), \" uh, well... that\'s a good question! We\'ll get back to that later...\" (of course he never does).\nAll of the homework assignments are purely LISP programming projects, and when asked one day in class how one writes comments in LISP, he did not know! He had to look it up online while we sat there staring at him and waiting! I cannot believe that he would require us to write massively complex programs in a language that (1) is not taught in the class and (2) he doesn\'t even remember the syntax for something so basic!\nHe does not hold office hours, so the only time you can ask him a question is before or after class, but he employs the same techniques he uses in class to brush off your questions (and you couldn\'t even go to the TAs for help since they had heavy accents and also had difficulty expressing themselves in English)! Even worse, he didn\'t even come to class on the last day which was supposed to be our final exam review session, but instead had those same TAs run it. We were not notified of this change until one or two days before the class itself. The TAs did an awful job, just pulling up his PowerPoints and letting us stare at the slides which corresponded to our questions for a few minutes (I\'m not kidding - this is exactly what they did).\nWorkload:\nThree homework assignments: LISP coding projects. You had better be comfortable with LISP going into this class, because he doesn\'t bother to teach it at all. I found the final project impossible even though I started three weeks before the due date!\nTwo midterms, one final: (haven\'t taken the final yet, but I expect it is very similar to the midterms) difficult no matter how hard or long you study your lecture notes, his slides, and the book.','-3.299999997','7.799999952','worse, awful'),('WCOMS4701','Pasik, Alexander','The lectures were definitely entertaining, but I can\'t say I actually learned anything from them. The professor is definitely skilled and experiences, but almost to a point of not caring about our individual class. The professor does not have office hours, and even if you try to schedule a meeting he will simple tell you to stay after class - this is not very conducive for going over material.\nAlso, the teacher did not show up for the last day of class and instead had the TAs teach a review session. We were not informed of this change until the weekend before the last day of class. Since the teacher doesnt have office hours, we should have known that the second to last class (two weeks before the final) would be the last time we see him. Moreover, the final review was worthless - see notes on the TAs below.\nFinally (though I am about to comment on the TAS individually), I have never been more frustrated with a set of TAS. Despite spending a significant amount of time trying to better understand the assignments in office hours, the tas would ask questions like \"Are you sure there is an exam next week?\" The TAs spoke so little english that we were reduced to playing pictionary.\nWorkload:\nThe assignments were IMPOSSIBLE. I started at least a month early on every assignment and still ended up pulling all nighters the week before it was due. We never went over how to do them in class (and never really learned lisp for that matter)! We should have had more small assignments that were less frustrating and allowed us to better grasp both AI and LISP.\nMoreover, the exams were IMPOSSIBLE. First, it would be nice to have some room to write rather than having to cram it onto one page. Next, I felt like I studied everything (and more) that could possibly be on the exams yet still did poorly. It wasnt like I left the exams wishing I had studied a particular concept more - rather the questions were so tricky there was no way you would ever understand what was being asked. After spending weeks studying for these it definitely does not give you a chance to show off what you know.','-2','5.700000048','worthless'),('WCOMS4701','Pasik, Alexander','Entertaining and fun, cares about the material and seems genuinely excited to teach people.\nReally, really likes Lisp and Recursion.\nDoesn\'t use a textbook for data structures. My only complaint is that given the time (one full semester) he could have gone into a bit more detail about various, more exotic, data structures. But what he does cover, he does very well.\nSo I recommend him.\nWorkload:\n6 assignments, Midterm and Final in 3137. 4 Assignments, Midterm and Final in 4701.','2.999999896','4.199999943','excited, exotic, fun'),('WCOMS4701','McKeown, Kathleen','A very good class and professor. Taking Artificial Intelligence with Professor Mckeown convinced me to pursue AI and computer science further. Very highly recommended.\nWorkload:\n1 midterm, 1 final (both reasonable), and a number of programming assignments that you can spend as much time on as you want to.','1.899999954','1.899999954',''),('WCOMS4701','McKeown, Kathleen','I took this course in the Spring of 2004 and found it challenging and useful. The course covered the requisite material thoroughly, and offered intriguing (and sometimes quite difficult) programming assignments. Other reviewers complain about the focus on \'boring algorithmic parts\' and lack of attention to philosophical implications. This is both ironic and inaccurate on a number of counts. First, the early part of the course was dedicated to a thorough consideration of the difference between human-like and rational behavior; in addition, a number of readings were posted over the term that addressed just these issues. Second, this course is offered in a computer science department; the capacity of computer scientists to have impact on scientific or philosophical problems is founded in the algorithmic details. Glossing over this material would cheat serious students who are willing to do the work. I enjoyed the course and still discuss and apply the material I learned.\nWorkload:\nHeavy, but consistent with other upper-level courses required for a Ph.D. in computer science.','0.799999937','4.800000057','challenging'),('WCOMS4701','Pasik, Alexander','Definitely agree with the first poster, though for a different class.\nHe\'s one of the best professors I\'ve had at Columbia, and has given me a great passion for AI. His lectures are very interesting; even though it was 9am I always went to almost every class (that\'s very unusual for me); and though I often brought other work to do, I never got any done. Except for the day or two when he\'d go over the homework or test, he had my rapt attention every moment of class.\nFor AI in specific, he not only focused on the computer science of it, but also asked students to read a book called \"The Mind\'s I\", and set aside a few days to talk about the more philosophical (and very intriguing) side of AI.\nHe is a hard teacher though, and it\'s a hard class. Below the mean all get C\'s theoretically. However, he does offer enough extra credit to shift the curve up to the high B\'s if you choose to do it. He never accepts late work, but even I (who chronically turns everything in late) made every deadline.\nWorkload:\nAI is hard stuff. The 3.5 projects all required a huge amount of work. The third took more time than any other CS project I\'ve done. The tests aren\'t bad though, and if you go to class you don\'t have to study much. He also offers 5% (of the class) extra credit on each major project.','0.59999992','3.800000027','best, great'),('WCOMS4701','Stolfo, Salvatore','Prof. Stolfo knows the subject well, but couldn\'t deliver it well and control himself. He would beat the same dead horse over and over again until he realizes that he is too far behind and would start rushing through important topics (and as a result, miss important details). He would also ask questions in the final exam from topics that were not covered in the class just because PhD students were taking the final as their comp exams.\nWorkload:\nHeavy. It takes a lot of time to figure out how LISP works and the assignments were not easy.','-1.399999991','1.399999991',''),('WCOMS4701','McKeown, Kathleen','Prof McKeown is a nice lady. Let\'s say that first.\nShe\'s a pretty lousy professor, though. It\'s hard to tell whether she\'s just bored with the material, or doesn\'t know how to make it interesting, or just doesn\'t care. In any event, her classes consist of a series of slides that are pretty much straight from the textbook, and a lecture delivered in monotone. She seems actively disinterested in any of the interesting intellectual, scientific, or philosophical implications of the material, and instead grinds through the most boring algorithmic parts, yet without enough detail or mathematical sophistication to make it worthwhile.\nAvoid if possible.\nWorkload:\nFair. A few projects that can will take as much work as you give them.','-2.600000001','3.800000004','lousy, nice'),('WCOMS4701','McKeown, Kathleen','A very nice professor who cares enough to learn everyones name in the relatively large class.\nBut I don\'t think she was born to teach. She is very well prepared in that she has everything on powerpoint, but she\'s not so great at answering questions that aren\'t in the powerpoint plan. She\'s also rather bad at coming up with good test questions, asking students to go through every step of an algorithm that is easy for computers, but painfully tedius for humans, and making that worth almost half the midterm. (And giving a full blue book for it).\nThe subject is fascinating, and if no one else is teaching it, I still highly recommend taking it. Kathleen Mckeown is a great professor if you want a friend and a nice office hours buddy, is knowledgeable and cares, but just isn\'t a born teacher.\nWorkload:\n3 or 4 programming assignments, 1 very large one. midterm, final. Most of your time will be spent on the programming, but at least I found that to be the best part. You make some pretty damn cool stuff.','2.300000012','3.900000036','great, great, nice'),('WCOMS4701','Kender, John','this class was awful! class was rough since there\'s SO much to write, there are no electronic notes available and although professor kender tells an anecdote about writing and speaking clearly during lecture, he quickly started writing incredibly small on the board. the homeworks are killers and the midterm was really hard. LISP is touted as the language of choice for AI, but having it thrown at us in a couple of weeks was just not helpful. i can recognize LISP code, but i can\'t tell what it means. apparently professor kender is trying to get a LISP course organized that you can take before AI which would probably fix this huge problem.\nWorkload:\n5 very very difficult programming assignments (first four homeworks are about half theory half programming, thankfully), after the first 2 in LISP you can program in any language you want, one in class midterm and a final','-2.699999981','3.600000016','awful'),('WCOMS4701','Stolfo, Salvatore','He is definitely one of the better professors in the CS dept. He has a good sense of humor (a lot of jokes about his mother-in-law), and he\'s wonderfully friendly. His tests are mad hard, and but his programming projects are okay. You\'ll probably get lost in some of his lectures, but glancing through the text should clarify a lot of things that he talks about in class. He tries to get the students to get involved during class, asking questions and trying to match faces with names. Overall, his class is worth taking!\nWorkload:\n4 programming projects (3 in LISP, 1 in whatever language you choose), 1 midterm, 1 final','2.100000009','2.500000015','wonderfully'),('WCOMS4701','Stolfo, Salvatore','Prof. Stolfo is a wonderful and knowledgeable teacher, although his wry teaching style can be off-putting at times. He also has a pretty good sense of humor for a CS prof - he ended the first lecture with the comment \"Intelligence is like pornography; you know it when you see it.\" It helps that he co-created the course, so he not only knows the material inside and out but he is also passionate about it. On top of that, he is incredibly friendly and easy to talk to. He is also the only professor I\'ve had who gives you buggy code on purpose (this can be good or bad depending on what kind of CS student you are).\nWorkload:\n4 programming projects, including 3 in LISP (take the 1-point course first if they still offer it) and an intelligent checkers program in the language of your choice. Moderately difficult midterm and final.','3.099999934','3.899999946','wonderful'),('WCOMS4701','Stolfo, Salvatore','I have to put in my two cents here, because the only review on this guy is very misleading. Everyone I spoke to that took the AI class with this guy, hated life. He acts like he has better things to be doing that teachign the class, and at one point he said \"Life is not fair, tough\"\nHe started off great but his quality just went downhil very fast as the semester went on.','-2.099999964','2.099999964','great, misleading, hated'),('WCOMS4701','Stolfo, Salvatore','Stolfo is probably one of the best professors in the CS department. His lectures are entertaining, informative, and funny. He enjoys teaching and loves giving amusing assignments. He occassionally makes fun of students in class, but is also willing to allow his students to poke fun at him. The workload is medium, and the professor is very easy to talk with.','4.199999988','4.199999988','loves, best, enjoys'),('WCOMS4737','Belhumeur, Peter','Biometrics boils down to 1) [Image Processing] feature extraction that gathers information (face shape) from raw data such as images (male/female jpgs) and 2) [Machine Learning] An algorithm that takes info from 1) and classifies the raw data (im1.jpg = male etc.)\nI\'m not going to recommend this course for the following reasons:\n1) The meat of the theory can be described in the rest of the review text to a cs junior. I do not believe a 3 credit course with all those lecture hours should be this shallow.\n2) This course doesn\'t teach you any engineering skills. There is no critique on programming style and you\'re expected to learn MATLAB (3 hrs) on your own. The code that you write, including the final project, are toy programs averaging 80 lines of code. The algorithm itself is only 10-20 lines of API calls, the rest is I/O.\n3) No theory behind Image processing is covered, basic API calls are provided in the skeleton code for the assignment. PCA and Fisher analysis is discussed but this is 3 lectures at most.\n4) DO NOT take this course for Machine Learning. Bayes\' theorem (which bag did the red ball come from?) and a baby algorithm (intimidatingly called \"K-nearest-neighbors) are all the tools you learn. SVMs are discussed for culture.\nWorkload:\n6 programming assignments + 1 project. Project is very involved and great opportunity to do good work.','-1.199999966','4.20000004',''),('WCOMS4205','Gross, Jonathan','An interesting class. Covers proofs for lots of very interesting combinatorial methods but only tests their applications, so the class is totally doable for someone without crazy math chops. Gross tells you that he\'ll teach you to Amaze your Friends with your combinatorial abilities, and he speaks the truth: A lot of the pattern finding and summing is very clever, especially to the ~math illiterate that I am, because, especially towards the end of the class, some of the methods seemed like voodoo.\nLectures are useful for the tone of Gross\'s voice, but generally come straight out of the lecture notes. The fact that he wrote the book means that lectures really don\'t provide a different perspective on the material, and the pace of the class requires students to have read-ahead to keep up. I attended lecture but, to be honest, it was only because I think gross\'s side-note anecdotes were amusing. For the most part, the class requires a lot of self-teaching (in my experience).\nWorkload:\ncheck the homepage for more up-to-date workload (http://www1.cs.columbia.edu/~cs4205/) 6 problem sets and 3 non-cumulative (except when self-referential) exams in ~decreasing difficulty.','0.599999972','2.600000031','amaze'),('WCOMS4205','Gross, Jonathan','Prof. Gross teaches 3 sequential courses - Discrete Math, Graph Theory, and Combinatorial Theory - and teaches them all in the same fashion. It helps to go to class, but since a complete lecture notes booklet is available and covers everything from the beginning to the end of the semester, you could potentially learn the material yourself. His tests are open book, but are by no means easy - they are often referred to as \"the learning experience.\" Overall, he\'s a great teacher, and makes the courses bearable even for a math-illiterate like myself.\nWorkload:\nNo homework. Open-book tests. Lectures conducted according to a lecture-notes booklet.','1.600000001','1.600000001','great'),('WCOMS4119','Aho, Alfred','God, poor Aho. This class had an enrollment of about 9 and a daily attendance of about 3. He makes a diligent and sincere effort to teach well, but tends to get derailed (particularly with the constant stream of irrelevant questions that this class seemed to be all about). The lectures are dull, but he\'s a nice guy and knows everything... it just doesn\'t work out somehow.\nWorkload:\nVery light, although this could vary in the future -- 3 PowerPoint presentations and a ten page technical document (half of it is screenshots and console output).','0.100000001','2.900000073','poor, nice'),('WCOMS4733','Allen, Peter','I had Prof. Allen\'s class right after Prof. Rocco Servedio\'s class. The contrast could not have been clearer -- while Rocco is a clear and competent lecturer who is quick on his feet and always able to answer questions, Allen is a bumbling, incompetent waste of time. He was never once able to answer any questions posed to him in a way that suggested he understood either the question or even the material. His lectures were disorganized, rambling, and unintuitive. He is far and away the worst professor I have ever had at Columbia Computer Science (and perhaps tied for worst ever at Columbia).\nWorkload:\nNot too bad. A number of time consuming programming assignments, but they\'re fun.','-2.899999961','3.299999967','worst, worst, incompetent'),('WCOMS4733','Allen, Peter','First off, I took Data Structures with the guy too. Everyone who wrote a bad review of this guy is rather stupid. Swing interfaces are key parts of every assignment involving Java after Data Structures. Furthermore, copying code to create the data structures is fine - it\'s a matter of using them - why do you think the class is considered a difficult one for many? Because they don\'t know how to copy properly?\nBut I digress. Robotics is Allen\'s specialty, and he clearly shows he knows what he\'s talking about. The class has some rather cool aspects about it, including the use of a robot simulator. You actually apply concepts from linear algebra to something. Furthermore, it gives a solid background to what kinds of projects are going on in robotics. Some of it is basic at first, but it gets better as it progresses.\nWorkload:\nThe workload is fair and requires a bit of time, but most written assignments can be done in a night. Programming assignments take a bit longer, but they\'re pretty cool after finishing them, unlike many CS classes that offer useless programming assignments.','0.899999999','4.299999945','cool, stupid'),('WCOMS4160','Grinspun, Eitan','Professor Grinspun is old school. His classes will punch you in the face and make you learn out of self defense. He\'s a very good teacher. This class is definitely the closest I\'ve had to \"drinking from a firehose\" style learning.\nThere\'s not really a whole lot else to be said The guest lectures were all great and relevant. Almost half the course was guest lectures, partly because we sort of ran out of things to cover partway through.\nStart the ray tracer early.\nWorkload:\nIntense. Weekly programming assignments that take about as long as the bi-weekly ones I get in other classes. I\'m astounded by the sheer amount of things I had to learn how to do. He doesn\'t do extensions, save for a general ten-points-off-for-hour-late policy.','2.70000004','3.300000064','great'),('WCOMS4160','Grinspun, Eitan','The premise of Computer Graphics class is to understand the fundamentals and principles of graphics. How we perceive the world in perspective; how we understand surfaces, shape transformations, and shadows interacting with light sources; how we manage to get millions of triangles described in a text file to be displayed nicely as Nemo in 3D model; how we render stunning images from a merely text file; they are all in one class. I cannot believe I have accomplished so much in one semester, and this class is simply one of the best class at Columbia that exceeds tuition fee that I pay for. In this class you will be exposed to pretty much everything in graphics pipeline. The awesome part is that you gotta have to sit down and implement real graphics program from scratch. It is a great class to let you see how technology and art can strengthen each other. And who wouldn\'t like a class that he/she can enjoy the two at the same time?\nEnough said with the class. Prof. Grinspun himself is also an extraordinary teacher. With his exclusive background in math, you will blow your mind to let you see how much graphics and math are inter-connected. In addition, because he is an excellent teacher who explains things from the perspective of someone who knows little about the subject, you can\'t go wrong with the materials. His humor and energetic teaching style will also motivates you to engage in the class, even if it is two hour class straight at night. There were multiple guest lectures, which feature people from the real industry, like NVIDIA for example, to talk about the technologies that people are engaging out there. After you have taken the class, you are sufficiently well-rounded in graphics.\nThe assignments are heavy. It is pain in the ass; it is self-tortured at times, but the reward can give you a life-time inspiration. My favorite part is that you will have chances to do something creative and get credits for them. By the end of the semester, you have more than flourished programming skills, but also motivation to create digital arts in your own way. Highly recommended class for anyone who\'s interested in graphics.\nWorkload:\nAbout ten assignments. Each one varies in length, but most of them are time-consuming but not impossible. Prepare to have a solid background in C++ and a good sense of math, and you will go a long way without banging your heads several times a week like me.','9.899999909','10.79999994','awesome, excellent, best'),('WCOMS4160','Ramamoorthi, Ravi','Professor Ramamoorthi\'s lectures were generally fairly dry and could often be hard to follow. His accent isn\'t really an issue, but he has a way of failing to frame the question that\'s motivating what he\'s talking about; you get no sense of what he\'s building towards. He also doesn\'t speak very confidently; it\'s hard to tell whether he\'s entertaining a possibility for class discussion or actually saying that this is an accepted practice.\nThe lectures tailed off in quality by the end of the course (as did attendance, precipitously); some of the lectures got into mathematical details well beyond the requirements of the course and well beyond what most people in the class could readily understand.\nAs far as slides go: the slides were a fair basis for looking things up on the internet later, but no better.\nThe course was well organized insofar as the assignments go; the course fell down in other respects. The assigned readings in the main textbook (Computer Graphics by Peter Shirley) often had only a tentative relationship to our lectures, and their pedagogical approach was very, very different; it\'s a good book, but was useless for the class. Other assigned readings included big swaths from the OpenGL red book -- hundreds of pages in all. Fortunately, I think most of us were smart enough to know that one doesn\'t learn a programming API that way. Another example: the materials and lectures we were given on curves weren\'t really sufficient to understand the second assignment; my partner and I had to use online course notes from another university. (Reading up on curves in one of the optional texts would have done the trick too.)\nThe overall impression that I got, really, was that Professor Ramamoorthi viewed teaching the class as a chore, offloaded much of the work in running the class to our TA (actually writing up the assignment specifications, etc.), and didn\'t do a number of small things that would have improved the class greatly.\nWorkload:\nThe workload in the first half of the term was quite manageable -- the first two assignments took some thinking, but didn\'t require lots of code. The next two assignments were a lot more coding intensive. Coding-intensive is pretty typical for graphics courses, though, from what I understand. The assignments were all good learning experiences -- I feel they were the best part of the course.\nWe were asked to work in groups of two on all the assignments, though some people worked on their own by the end because of people dropping the course, etc. Coordinating with a partner could be a bit of a hassle, but certainly wasn\'t as difficult as it is with larger groups.','1.100000009','5.899999991','useless, motivating'),('WCOMS4160','Ramamoorthi, Ravi','Some of you think that only the \"bad students\" wrote bad reviews for Prof.\nRamamoorthi. The fact is, first day of class there were people in the hallway because the class was so overcrowded. By the end of the semester, about ten people showed up to lecture. I guess most of the class consisted of students who were doing badly.','-1.699999988','1.699999988',''),('WCOMS4160','Ramamoorthi, Ravi','Don\'t take this class if you\'re not willing to do work or put the effort in or aren\'t very competent. I found it great, but others may dislike it due to the high level of understanding it requires. the other reviewers basically said everything else, but the accent is not bad, the lectures are online, and if you need any extra help, it\'s available. you\'ll know if you can handle the class after the first homework.\nWorkload:\nVery nicely spaced out programming assignments - don\'t wait till the last minute. the later assignments are less constricting as well. the midterm required a lot of mathematical understanding, but the final was take home and rather straight forward.','-0.099999949','1.700000003','great, dislike'),('WCOMS4160','Ramamoorthi, Ravi','Ravi has an Indian accent, but nothing \"freakish\" or unbearable (nor are there that many international people in the CS faculty anyway, so I don\'t know what the phuck the other reviewer was talking about). I didn\'t do well in this class *at all*, but objectively and honestly I feel that Ravi is definitely one of the better teachers in the CS department. (I\'m sorry, but definitely better than Feiner.) First, he really, really knows his stuff; thus he was never unsure about anything and knew exactly what he was going to talk about. He even had review sessions in which over things he knew we would be confused about. Second, he is responsible. The clarity of his lecture notes reflect the effort and time he spent in preparation, as well as the very well-designed homework assignments. Third, although he is strict about extensions and the like, he is crystal- clear about rules and requirements; you have noone to blame but yourself for not doing well. He also made it clear in the first day of class that Graphics would not be easy. It turned out to be challenging but not that difficult in terms of grading, and fun as well. (Off-topic: don\'t you hate seeing reviews that say \"I got a B and I don\'t know why. He\'s a bad professor\"? I\'ve read a lot on CULPA recently. Those aren\'t really reviews, just bad students blaming their teachers.)\nWorkload:\nOpenGL wasn\'t that hard for me (but I procrastinated a lot) and I imagine it wouldn\'t be hard for other people. It has a pretty steep learning curve but once you get the basics it\'ll be fine. And, again, it\'s really fun (you get to make your own game for god\'s sake; what else can you ask for?). First two homeworks (lines and curves) need you to think hard. Last 2 homeworks need you to work hard. Overall, workload is not bad if you START EARLY. For your own good, *START EARLY*','2.699999943','6.300000042','feiner, challenging, fun'),('WCOMS4160','Ramamoorthi, Ravi','One word: run. Despite Feiner\'s poor reviews I would have much rather had him teach this class than Ravi. Granted, this was his first time, but that doesn\'t excuse his accent, which seems like some freakish combination of every unintellegible voice in the CS dept (and trust me there are many). He supposedly knows a great deal about computer graphics, but you wouldn\'t know it from his lectures. The TA had to constantly remind him that the students in the class might not know as much as he did - need I say more? And don\'t even bother going to office hours. Still, he is a helluva lot more lenient about everything (i.e., extensions) than the TA seemed to be.\nWorkload:\nUnbearable if this isn\'t your only class, unless you happen to know OpenGL going in. Two \"concept\" homeworks, a final video game project in OpenGL, an in-class midterm and a take-home final.','-0.500000015','3.500000075','great, poor'),('WCOMS4160','Ramamoorthi, Ravi','Very competent and very organized. Young, friendly, and approachable. Clear lecturer. The course is fairly difficult, but fun and interesting (and, as it turned out, graded on a generous curve). First two assignments required some mathematical sophisication and stressed understanding more than brute force. Last two assignments required learning OpenGL. That for me was overwhelming in the beginning, but once I learnt the basics (they\'re plenty of sample programs online), it started to be really fun and creative. Overall, I highly recommend this class.\nWorkload:\nWorkload is highly dependent on the student. The final project was a video game; you could go overboard and make something that resembled Quake 3 (which was written in OpenGL). Due to the huge flexibility, if you have no moral difficulty with doing the bare minimum to satisfy the requirements, the overall workload should be slightly below average for an upper-level CS class.','5.5','5.5','fun, fun'),('WCOMS4160','Feiner, Steven','Interesting material but presented in a very confusing manner. Will someone explain to Feiner how to use Visio and Powerpoint so that no other student has to put up with his badly drawn overhead slides, he does also teach User Interface Design. Very confusing and extremly poorly written programming assignments that the majority of students have no idea how to tackle. TAs are swamped with questions. Makes disparaging remarks in class about those who do poorly in midterm.\nWorkload:\n3 programming assignments (poorly written) 1 final project (very difficult and is based on one\'s perfect solution or lack of a solution on third project) midterm and final are both 75 minutes.','-1.199999996','2.20000001','feiner, visio, poorly'),('WCOMS4160','Feiner, Steven','A mediocre lecturer who takes a lot of time to confuse you, instead of doing it quickly like other comp sci profs. At least, that was my impression until I stopped going to class. His lateness policy is a breath of very cool fresh air -- thank god, because the assignments themselves are poorly designed and students are ill-prepared for them. Like in some other comp sci courses (ahem, OS), you get the feeling that the professor and TAs started out with very ambitious assignments that they were going to prepare students for -- until they forgot to do the preparation part. But even that may be being overly generous, because the net result is inexcusable: students have no clue how to approach the programming, and TA office hours (again, so much like OS and other high-level CS classes) turn into unofficial cheating sessions where beleagured TAs have no choice but to disseminate crucial information (that the rest of the class doesn\'t get). I don\'t know if Feiner and his TAs even realize how much potential for learning gets thrown out in the process. And while there may be worse professors in the department, that doesn\'t make Feiner good. The bottom line? Steer clear.\nWorkload:\nAbout 5 large programming assignments (large in frustration and time-consumption, not in excessive educational value). Midterm and final that (are we used to this yet?) evaluate primarily whether or not you take tests well, and secondarily whether or not you watched the course videos on fast-forward the night before.','-2.500000015','3.899999991','inexcusable, cool, feiner'),('WCOMS4731','Nayar, Shree','I can see why people like him, but the material is extremely difficult, beware!\nHe makes lectures interesting and funny, but he glosses over important concepts and you never feel like you understand anything until the difficult midterm and final come around. You\'ll have to study your ass off just to pass.\nThe programs are a lot fun. They take some thinking, but overall they\'re well-structured and very useful. The theory questions on homeworks are impossible.\nWhat\'s very unfair about this course though is that you can\'t recover from a single bad grade on anything (hw, midterm, or final). A single mess-up will glare at you on your final grade, not to mention that the curve is very small. The difference between letter grades is very slight, only a few points will be bump you up from a B+ to an A (notice there\'s no A-). But only a few points will drop you down from a B+ to a B-.\nUnfortunately he grades strictly by the numbers, and no amount of asking questions in class, going to office hours, or demonstrating grade improvement throughout the semester will factor into your final grade. He has no problem setting the average to a low grade.\nWorkload:\n5 homeworks (they get easier over time)\n1 midterm (impossible)\n1 final (difficult)','0.199999973','4.800000027','fun'),('WCOMS4731','Nayar, Shree','Professor Shree Nayar is the best professor I met at Columbia. The course is very informative. He gives great lecture with a sense of humor. The TA are very helpful. The assignments are not that hard but yet gives you a sense of how things really work.\nI highly recommend this course to anybody who has interest in vision/graphics. It\'s a must for students in vision/graphics track.\nHighly recommended.\nWorkload:\nNot bad. The assignments are getting easier after the third one. But you need to spend lots of time on the slides to make sure you really understands the materials.\nFinal and midterms are well organized.','6.599999905','6.599999905','best, great'),('WCOMS4731','Nayar, Shree','Professor Nayar is tied for my favorite professor. The main reason I believe he is so good is because he conveys material in an extremely concise, understandable and well-spoken manner and really knows the subject inside-\nout. He is also very approachable in person and makes an effort to know students on some basic level.\nThe only thing that was a little weird about the vision class was the lack of math -- it was all in the slides but there is essentially no math in the entire class, which is in sharp contrast to the textbook. In addition, the first homework is pretty ridiculous in many ways and shouldn\'t be considered as a measure of the class\' overall worth.\nProgramming assignments are engaging, and exams are very fair. Prof. Nayar makes use of the entire spectrum of scores on exams, and I feel gives proper questions to let those who understand subjects thoroughly to stand out. The one complaint about them is that he does not even give a format for the exam, let alone sample questions -- this was very nerve-wracking for me personally but it ended up OK in the end.\nWorkload:\nThe workload for the class is VERY front-heavy, so just get down and dirty early to enjoy the freedom from work at the end of the semester. It can definitely be a more difficult workload, but not too bad.','4.099999964','4.49999997',''),('WCOMS4731','Nayar, Shree','Prof Nayar is a natural. He is clear and cogent and drives all the relevant points home. Be sure to hang on to every word he says, because its generally very deep. If possible, make notes on top of the slides he gives, they make it easier to understand them when you study for the exam. This is a no-nonsense course, only relevant stuff is taught. Therefore, read the slides very thoroughly. Its not much to read, compared to the Horn book which is quiet abstruse. The class is a great learning experience. Particularly because of the simplicity that Prof Nayar brings to it. If you ever have anything remotely close to Vision take this class. If you don\'t, take it to experience what a great teacher is like.\nWorkload:\n5 assignments. If the first freaks you out, hang in there, things just get easier. Overall assignments are easy. The slide handouts are all you need to prepare for the exams, and yes, some presence of mind.','3.799999997','5.000000045','great, great'),('WCOMS4731','Nayar, Shree','I loved this course. Professor Nayar is an excellent lecturer. He provides the class with handouts containing almost every slide he uses (yes, he uses slides on a projector, which is usually a bad sign, but he pulls it off well)... over 400 pages per student across the term. This minimizes how much you have to take down in terms of notes, and allows you to spend more of the lecture making sure you understand, rather than copying down diagrams.\nI have to agree with the previous review: Professor Nayar\'s digressions are always interesting, and regardless of whether they help understand the material, they help understand the motivations, or how vision works in humans.\nIt\'s not an easy class, but if you come to lecture all the time and pay attention, you shouldn\'t have trouble with the homeworks...\nthe midterm and final may be a different matter though. However, the professor and TAs are very helpful in office hours.\nWorkload:\nThe homeworks aren\'t so bad... 5 or 6 of them, and I found that the programming actually got easier as the term went on (after the third homework). However, the midterm and final were... insane, I thought. The best study advice I can give is: If you think there\'s no way it\'ll be asked, memorize it.','2.200000003','3.800000027','excellent, loved'),('WCOMS4731','Nayar, Shree','Excellent course taught by an excellent professor! The course revolves around the idea of teaching a computer to extract information from visual images, such as the position of an object, the position of edges, shape/depth of a scene from multiple images. Some of it will make you rethink the many things we as humans take for granted, and Shree likes to insert pertinent biological/philosophical/tech-biz tidbits that encourage an appreciation for the material beyond a purely CS perspective. The underlying theory could potentially get very mathematical, but Shree avoids that and focuses instead on the general ideas and principles. In sum, the subject material is interesting, challenging at times but rarely impossible. As a teacher, Shree is one of the best out there. He is entertaining, funny, and very dedicated to making sure we learn. He is also a very effective lecturer with excellent presentation. So, although he is quite a busy man (a lot of conferences to attend) and had the TAs teach a couple of classes, I feel that we learnt more in his classes than usual. All in all, a great experience and highly recommended.\nWorkload:\n5 HW assignments, each of which involves both writting exercises and 3-5 programs. Programs can be challenging, but again there\'s nothing impossible. Shree and the TAs are very helpful. If you keep up with the class and don\'t procrastinate, you will be fine.','5.199999899','5.799999893','excellent, excellent, excellent'),('WCOMS4203','Gross, Jonathan','Quick note: This class is most definitely a mathematics course. There are basically no concrete applications of the material covered and certainly no programming involved.\nProf. Gross is arguably the most idiosyncratic professor you\'ll ever meet. And that\'s definitely a good thing. His lifelong love for topology and graph theory (and their intersection) is clearly evident in his lectures, in which he wanders off into reminiscing about his early mathematical career and some tidbits from math history and algebraic topology. This \"sidetalk,\" as he calls it, makes the class more interesting and is, as a result, an integral part of the course. Integral.\nGross\'s lecturing differs from other practitioners of the overhead-projector style because the projector doubles as a slideshow of ever-evolving course notes and a whiteboard in which he goes through examples with the class. This is probably because he has walking problems (he comes into class wearing sneakers and holding a cane) and the fact that Graph Theory is a CVN course. I wasn\'t really able to appreciate his usage of the projector in Discrete Math because it didn\'t seem necessary (small examples, mostly numerical manipulation), but once we hit graph enumeration, it became clear why Gross preferred the projector: it\'s basically impossible to fully draw examples otherwise.\nThe course is by no means an easy course like the pre-req Discrete Math. While the graph theory section of Discrete Math was limited to basically one type of problem (\"find a Kuratowski subgraph\"), this course requires much greater ingenuity. The homework assignments\' problems range from trivial input-numbers-into-formula questions to somewhat difficult proofs, and the tests are filled with mostly the latter. While the homework sometimes feels like a drawing exercise, the tests are filled with original and clever problems.\nI felt that the breadth of the material covered in this course was especially exciting, though keep in mind that this makes the course go at a very fast pace. But just keep up with Gross, because it\'s totally worth it.\nWorkload:\nSix assignments dropping the lowest. Three open-book exams of equal weight, but no final.','4.000000052','8.000000112','love, exciting'),('WCOMS4203','Chudnovsky, Maria','I was terrified of Maria after reading the two reviews about her on CULPA. In my experience, she is nothing like that. She is not only an amazing mathematician, but a charismatic, compassionate, and funny person. I was scared to take the class because I was the youngest student in the class, and she was very kind and helped me work through issues that were probably rudimentary. She probably realized that I wanted to work to do well in the course, and that is why she supported me.\nIf you get a chance to take a class with her, I would highly recommend that you do so. She is currently one of the most illustrious individuals in her field, and can elucidate the beauty hidden within graph theory.\nWorkload:\nApproximately one homework assignment per week. These start off easy, but get progressively difficult--not impossible though. 4-5 problems, all proofs (I think we had maybe 2 problems all semester that were just applying an algorithm, but the rest were all proofs). The grade is 50% homework assignments and 50% final take-home exam (cumulative, 7 problems).','1.99999997','4.400000006','amazing, beauty'),('WCOMS4203','Gross, Jonathan','Jonathon Gross is a funny guy... he has random moments that will make you laugh, at least the first time he tells the joke (he will point out that he retells jokes... he will even tell you multiple times that he always retells jokes... this man is brilliant but his memory is not what it used to be).\nIf you\'re paying attention and you get what\'s going on, you\'ll be fine. If you\'re a math major, you\'ll be fine. However, if you don\'t, you\'ll fall back quickly. He goes through the first few chapters quickly, since most everyone has seen that kind of stuff. And then he goes at a slower pace for everything else... but it\'s still very fast. And if you stop paying attention for a little bit, you\'ll find yourself wondering what he\'s talking about, why he\'s saying that point x cannot be mapped onto point y and what the hell a cellular imbedding is. But, he teaches straight out of the book, which is good and bad (bad cause it\'s boring, but good cause you never have to take notes).\nFinal note: this class doesn\'t get into any algorithms, i.e. you won\'t be able to write any sort of computer program using graphs after taking this class. It lays the groundworks for you to learn this kind of stuff on your own, but that\'s it.\nWorkload:\n7 homeworks, with 1 dropped; 2 midterms, 1 final. Final grade = .25*(hw+mid1+mid2+final). The homeworks aren\'t that bad, just ~10 questions each, with some being straightforward and others requiring you to look at the problem and get an \'a ha\' moment two days later. So, not that hard, but don\'t put it off until the day it\'s due. Although, you get 5 total late days to use on homeworks. He provides practice midterms/finals--DO THESE before the test, otherwise you could be taken by surprise (although he changes the focus sometimes, e.g. we had a basic network flow on our midterms which weren\'t on the sample ones). Overall, not that bad.','-0.200000025','5.000000082','brilliant'),('WCOMS4203','Gross, Jonathan','Gross is an American hero. Wandering into class every day to give a one-hour lecture, straight from his (excellent) textbook, peppered with clever jokes. I don\'t know how our Computer Science department managed to hire him, it must be before they started hiring the least qualified people they could find.\nI agree with the reviews below -- if you don\'t pay attention at the beginning of class, you will die. Otherwise, it\'s pretty straightforward... but the language gets technical very very quickly, and you\'ll find yourself flipping into the text every third word if you weren\'t paying attention.\nHighly recommended!\nWorkload:\nFair -- something like... seven homeworks, all of which are time-consuming but doable. Exams are open book and open notes, and tend to be pretty easy if you\'ve been paying at least decent attention.','0.499999918','3.499999993','excellent'),('WCOMS4203','Gross, Jonathan','This class was one of the best I\'ve ever taken. The lectures were always fun, as Dr. Gross has a great teaching methodology and quirky sense of humor. Class generally consisted of working through the pre-distributed course notes (the majority of the time) and solving several problems (the last 10-15 minutes). He also threw in historical notes and occasionally a crazy story or two about some of the more famous graph theorists/algebraic topologists (many of whom he has worked with directly). The course notes basically re-packaged the material from the book (excellent, by the way, and co-authored by Gross himself) into a lecture-friendly format. My advice would be to read the relevant chapters in the book before class.\nThe six problem sets were generally difficult and time-consuming, but they will drill the material into your head. Perhaps more importantly, the problems will teach you how to think like a computer scientist. Some of the topics in graph theory have few real-world applications, but they train you how to attack and solve complex problems in mathematically rigourous ways (which is much more important than any application). In any case, Dr. Gross and the TAs (Josh Reich and Lawrence Hon) held plenty of office hours and were always very helpful. The tests were difficult, but he said they were designed to have mean of about 60 and were curved accordingly. Also, the tests were open book/note/whatever.\nMy only caveat is that graph theory is a somewhat fragmented subject with its own peculiar dialect. Dr. Gross has an amazing command of the material (and the dialect), so, while his explanations are always excellent, you must undertstand his language or it\'ll sound like gibberish. Don\'t slack off in the first few weeks; if you master the early material, you\'ll be in good shape when the more advanced subjects come in.\nOverall, I highly recommend this class.\nWorkload:\nSix problem sets, usually of six questions, of which two were \"gimmies\", two were of average difficulty, and two required significant insight/intelligence/work. Two midterms (above average difficulty); non-cum final (slightly easier than midterms). All exams are open book/notes.','6.099999964','7.700000003','excellent, amazing, excellent'),('WCOMS4203','Reich, Joshua (TA)','Josh is one the best TAs of all time. He has a superhuman command of the material, holds tons of office hours, and has a real passion for teaching. Unlike the majority of TAs, who simple don\'t care about you or the class, Josh wants you to learn the subject, and he will go to great lengths to see that you do. At the same time, if you are really stumped by a particular proof or problem (on which you can literally spend *hours* and get nowhere), he will take pity on you and walk you through the answer, so you can move on with your life/problem set.','1.300000034','1.500000037','best, great'),('WCOMS4001','Shortliffe, Edward','(Note: my opinion is from the perspective of a CS major, not a premed / BME / BINF student.)\nThis course is a valid CS technical elective, but it\'s about as \"technical\" as Music Hum. The only use of a computer for this course is to type the weekly homework assignments, which are all essay questions. The course introduces you the various applications of IT to medicine, especially the hospital environment. Topics include electronic patient record systems, biomedical imaging, electronic order form, and disease classification standards. Each topic is covered by a different professor from Columbia\'s uptown campus; Shortliffe himself handles 5 lectures or so.\nThe material is quite interesting in a hands-on way--you get to see how the CS stuff you learn gets applied. As such, it often involves brief, simplifying revisits the traditional CS classes, e.g. Database and NLP and Computability. On the other hand, it also involves a lot of medical jargon unknown to CS students, which make up half the class. Although Shortliffe said that the course does not assume any prior exposure to medicine, the lecturers (again, med school profs) tend to forget that. But perhaps this is only fair, since the medicine people tend to find the CS stuff hard to grasp.\nThe class also touches upon social and political issues like privacy issues and Medicare, as well as the theory and history behind Biomedical Informatics as a distinct academic field. Overall, a palatable salad of things and a nice escape from programming.\nWorkload:\nWeekly written HWs, about 2/3 pages each, check or no check. A comprehensive OPEN BOOK written final. Not terribly difficult, but the CS student may find giving opinions (as opposed to right/wrong answers) and the whole medical nomenclature vague and unfamiliar. Also, the BINF graduate students take the class very seriously, thereby screwing up the curve. You need to work towards a good grade, but this class is suitable if you like writing, if you like to see some real-life applications of your CS knowledge, or if you don\'t care about your grades (this is the only CS class in which you can b.s. your way to a pass).','2.800000064','4.600000106','nice'),('WCOMS4236','Servedio, Rocco','DEFINITELY the BEST professor I ever had at Columbia. At the same time, he was definitely the HARDEST professor I ever had at Columbia. I took computational complexity last semester and it was the hardest class I had taken. However, because he was such a great professor, I decided to take computational learning theory, and now i can say that that is the hardest class I\'ve ever taken. However, if you\'re not afraid to face the challenge, you will find that he is an excellent teacher, and you will definitely learn a lot. I definitely don\'t consider myself a very motivated learner, but I think the hard work was worth it for these classes.\nWorkload:\nThe styles of the problem sets were very similar in both classes (even though they pertain to very different subject matter). In either class, you will have biweekly problem sets which will each probably take you several days to complete. They consist of about 6 problems, and they are definitely not easy. Your homeworks are to be typed up in LaTeX, and just to give you a general idea, mine averaged something like 7 pages each. Computational complexity had 7 problem sets and a take home final which was basically just another problem set weighted heavier. Computational learning theory had 5 problem sets and a final project, which is yours to come up with.','4.199999958','4.199999958','best, excellent, great'),('WCOMS4236','Servedio, Rocco','BY FAR the best professor I have had at Columbia. His lectures are very ogranized and he really makes an attempt to explain everything. He is a sincerely nice guy and actually cares whether or not his students understand the material. Some of the stuff covered in this course is really complex, but he is able to break it down to make it more understandable. He likes when students ask questions in class and he really tries to make sure he answers them sufficiently. He tries to get to know the names of all his students. His office hours are really helpful...they were always packed when I took this class. In a nutshell...this guy is awesome.\nWorkload:\nPretty crazy. 6 problem sets. They were all pretty hard but the last one was insane. Take home final which was relatively easy.','4.600000031','4.600000031','awesome, best, nice'),('WCOMS4236','Tsantilas, Athanasios','Pretty good course, considering you enjoy this material. His lectures are pretty good and material is presented in an interesting way. Some of the homework problems are pretty difficult, but doable. Grading is pretty good too. The only complaint is don\'t expect too much help outside the classroom. He pretty much ignores questions sent to him and doesn\'t seem to care too much outside the classroom.\nWorkload:\nproblem set every 2 weeks, midterm, final.','3.599999964','4.800000012',''),('WCOMS4252','Servedio, Rocco','A really fun class. As other reviewers have already pointed out, Prof. Servedio gives the clearest, best-organized lectures in the department---he made a large body of complicated theory totally intelligible.\nThe format of the class is nice: no exams, just a few problem sets and a final project. His argument is that the insight necessary to solve most of the problems in this class doesn\'t come right away even if you have a solid understanding of the material, so a test isn\'t a fair evaluation. This was certainly my experience---I felt like I had a better grasp of the theory than most of the class (this is judging by the pset averages: as so often seems to happen in this department, the undergrads inevitably outperform the grad students) and I would regularly spend hours staring at the homework assignments without making any progress.\nProf. Servedio was also extremely available outside of class, and was extremely helpful in suggesting references and proof techniques for my final project.\nSome advice: as soon as every problem set comes out, take an hour or so to just think about the problems without any expectation of solving them. Your brain has this marvelous ability to process subconsciously, and you\'ll find that if you return to the pset in a few days you\'ve already made a great deal of progress without reading this.\nIn short, if you\'re in either the theory track or the AI track, this is a fun, low-stress (but not low-workload!) class that will do wonders for your development as as a computer scientist.\nWorkload:\nNot too much on paper, but be prepared to spend a loooong time on problem sets and invest a decent amount of time in your (12-ish page) final project.','4.299999885','6.699999936','marvelous, great, nice'),('WCOMS4252','Servedio, Rocco','Prof. Servedio\'s very good, gifted even, at explaining section a.b.c through to x.y.z of the textbook. His lectures, notes, and problem sets are high quality, better than those found elsewhere on course websites at CMU or UT Austin. So you will learn something or even a lot but is the right thing and is it worth taking for credit? No.\nDO NOT think that taking his learning theory course is of help in machine learning or data mining courses. I did well on the latter without needing or being able to use ANY of what I learnt here.\nHis style is lemma, proof, lemma, proof and a large fraction of the time is spent on proof minutae at the cost of developing re-usable big picture ideas or connections to topics in machine learning. This fatal flaw in his presentation also results in a poor breadth of topics covered.\nOnce I asked Prof. Jebara a question and he replied \"That comes from the PAC model\" or such. Imagine your frustration at spending a 20 hr/week semester learning the PAC model in this course but not being able to relate it or apply your knowledge. Do not think that you can get help at that point because the standard response is \"take Prof. Servedio\'s course\".\nIt\'s my belief that he\'s on a personal crusade against grade inflation and tries to actively deflate your grade:\n1) The solutions to the assignments are deliberately written poorly. You\'ll soon give up on trying to learn where you went wrong and may miss key \"tricks\" or key conceptual points in solving problems in general. This is quite devious because a lot of important course material is left to the assignments to develop and it\'s hard to improve your problem solving ability on future assignments. The only reason I can think of why anyone would do this is to prevent copying/selling of materials. The course staff should consider having a 30 minute recitation to go over the solutions if they are paranoid (or you should ask during office hours).\n2) There is no feedback on average/median/max/min and marks distribution for any assignment. Make SURE you specifically ask for this to judge your progress and calibrate your effort. It\'s easy to get blindsided and find out that there are 10 students who have scored near perfect on every assignment or 70% of the class has the same average.\n3) He takes the view proofs are either completely right or wrong, the latter gets you a 0 with unpredictable partial credit. Nothing infuriates you like a 0 on something you spent 6 hours crafting because you missed a minor detail. It feels like a penalty on attempting to solve the problem. Expect this to happen a lot and do not underestimate the effect on your motivation.\n4) The grading system is ill-conditioned (e.g. 84-86 = A, 79.5-83.99 = A-,..) therefore I feel that your grade precariously hangs on his impression of you.\nBased on the above I would have serious doubts about taking another one of Prof. Servedio\'s courses for credit. Definitely do not take his learning theory course if you\'re not a Phd student in theory. If you\'re aiming to become one I suggest you take a computational complexity course or algorithms/optimization/math courses as this course will not help you in the future.\nWorkload:\nBased on self audit, varies from 18 to 22 hrs a week spent on 5 Problem sets = 70% of grade. 40+ hrs on a 10 page Final Project = 30% of grade is a survey of literature related to a topic (given on website and can get help from him regarding sources). Final project is tough because a lot of startup time is required to translate the notation and learn higher math that is frequently assumed. Topic selection is very crucial for success.','-5.22E-08','10.50000016','perfect, infuriates, fatal'),('WCOMS4252','Servedio, Rocco','Rocco Servedio is absolutely the best professor in the computer science department. He exhibits a level of competence and clarity that is a refreshing change from the general level of instruction at the Columbia CS department. He makes a complicated subject seem crystal clear, and the class never (amazingly), ever is boring -- The 75 minutes are over before you know it. Even the problemsets are a joy to complete -- and they are difficult.\nIf you can, absolutely, positively, definitely, without question take a course with this man.\nWorkload:\nBiweekly problem sets (that you should expect to devote many hours to) and a final project (Paper and presentation). No exams.','1.499999978','2.700000025','best, amazingly'),('WCOMS4236','Servedio, Rocco','DEFINITELY the BEST professor I ever had at Columbia. At the same time, he was definitely the HARDEST professor I ever had at Columbia. I took computational complexity last semester and it was the hardest class I had taken. However, because he was such a great professor, I decided to take computational learning theory, and now i can say that that is the hardest class I\'ve ever taken. However, if you\'re not afraid to face the challenge, you will find that he is an excellent teacher, and you will definitely learn a lot. I definitely don\'t consider myself a very motivated learner, but I think the hard work was worth it for these classes.\nWorkload:\nThe styles of the problem sets were very similar in both classes (even though they pertain to very different subject matter). In either class, you will have biweekly problem sets which will each probably take you several days to complete. They consist of about 6 problems, and they are definitely not easy. Your homeworks are to be typed up in LaTeX, and just to give you a general idea, mine averaged something like 7 pages each. Computational complexity had 7 problem sets and a take home final which was basically just another problem set weighted heavier. Computational learning theory had 5 problem sets and a final project, which is yours to come up with.','4.199999958','4.199999958','best, excellent, great'),('WCOMS4252','Servedio, Rocco','Truly, one of the VERY BEST professors I\'ve had at Columbia (I\'m a CS senior)--the whole school, not just the department. Both super intelligent and very capable of transmitting his knowledge to students (I heard he won a lot of accolades for teaching back at Harvard.) His lectures are very well-organized, and he recaps key concepts every time to ensure students follow. Rocco is also a very nice and approachable guy, always encouraging and answering questions in or out of class.\nThe subject material is very, very interesting. It is also very abstract and may be difficult for those who are not well-versed in CS theory and math. All the HW questions are proofs.\nHis problem sets are challenging and take a lot of time. But I think it is worth it. If you care about learning (he certainly cares about teaching) and are willing to work hard and think a lot, you will definitely enjoy this class.\nWorkload:\n6 difficult biweekly problem sets (I\'m rather weak in math/theory, and each HW takes me a good few days of on-and-off thinking and writing plus TA help. Bottomline: don\'t start the night before.) Also a final implementation project.','6.399999917','6.399999917','best, challenging, super'),('WCOMS4261','Malkin, Tal','A pretty good class. Prof. Malkin makes a point of offering both conceptual and formal treatments of the material, which in principle is nice (as just about every result in crypto is deeply counterintuitive); in practice, I found her lemma-proof-theorem teaching very clear, but the high-level explanations so vague as to be practically useless. Part of the issue was that a large portion of the class didn\'t really have the mathematical maturity necessary for this course, and she would get bogged down answering basic questions and then have to rush through material. She got better at this (i.e. stopped answering stupid questions) as the semester went on, but it remained frustrating throughout.\nHomework assignments were well-designed. Fernando (the TA) was a real stickler for rigor, and I definitely learned to be more careful about writing up proofs by the end of the semester. Midterm (in class) and final (take home) were both trivial; I don\'t know what the final average was, but due to the aforementioned mathematical maturity problem midterm scores were shockingly low.\nAs a side note, this can be a great class even if you\'re not specifically interested in security. I was in learning theory at the same time, and my final project for that class relied on a bunch of cryptographic hardness assumptions---this is about a lot more than secret codes.\nWorkload:\nLight. A problem set once every couple of weeks that usually took me 2-3 hours (including typesetting). Don\'t cut corners on your proofs.','-0.500000037','5.300000034','great, nice, stupid'),('WCOMS4261','Malkin, Tal','If you don\'t your remember probablity and other math from Algorithms then don\'t bother taking this class because you\'ll get killed. In other words, don\'t ignore the prerequisties for the class because the Prof. will assume that you\'re comfortable with all the concepts that she listed on the class website. Her lectures are not that good and neither is her handwriting. Fortunately, she makes everybody participate in this thing where in each lecture a student is chosen to take notes for the class. The student is then responsible for converting the notes into LaTeX or PDF and share it with the rest of the class. There are 6 homeworks and one final exam. The homeworks are pretty long so start early. They\'ll require you to do some mathematical proofs, encryption scheme design, and other theoretical stuff. Take this class only if you\'re really interested in Cryptography.\nWorkload:\n6 hard homeworks, one final exam','0.700000018','3.500000015',''),('WCOMS4111','Gravano, Luis','Professor Gravano is definitely one of the best professors I\'ve had. His lectures are clear, precise, and occasionally humorous. He\'s very receptive to questions in class and often responds to questions both via e-mail and the discussion board, which is rare in my experience.\nHe uses slides (available online) for much of the introductory portion of the course, but often switches to the blackboard to work out particular examples. The latter half of the course was taught almost entirely on the blackboard.\nCorresponding book sections are listed for each lecture, but going to class or having a friend to take notes for you is important, as he sometimes he covers more or less material than is presented in the corresponding book chapters. The textbook (Ramakrishnan + Gehrke, 3e) is quite good, despite the many reviews you\'ll find online saying otherwise.\nWhile you will get a project mentor for your two projects, in reality there will be very little interaction with the TAs unless you seek it.\nWorkload:\n4 equally-weighted homework assignments (15%)\n1 large project + demo (15%)\n1 small project (5%)\n1 midterm (25%)\n1 final (40%)\nThe homeworks are light and occasionally add to the concepts covered in class. Projects are done in groups of two. The first project has multiple phases and takes place over a large span of time. The second project is short.\nThe majority of the class obtains perfect or near-perfect marks on the homeworks and projects. The exams will be the differentiating factor.','2.099999934','4.49999997','best'),('WCOMS4111','Biliris, Alexandros','Yes, his command over English is not the best. Yes, he does take digs at what students say if he doesn\'t understand them. But overall I wouldn\'t describe Biliris and this class as awful. His lectures are 2.5 hour long rambles, but not without comical interludes. His jokes are often funny, and he gives a ten minute break in the middle of class, which often extended to fifteen. Having said that, you can manage even without ever going to class, so apart from the few jokes there\'s very little value addition by his lectures.\nThe class material itself is interesting. It c, ould have been presented better (He reuses slides from several years ago, and doesn\'t even change the semester in the footer), but he has his limitations in teaching ability, and so you just need to make do with it. The four homework assignments are fairly easily. The projects can take time, but if your partner isn\'t completely lost, you can divide up the work and finish it over the course of a night. The exams are both fair, but of course, there\'s thinking involved, so it\'s easy to panic if things aren\'t going your way.\nIf you\'re not a CS major, I\'d recommend to buy the book. His lecture slides are essentially a summary of the book, but there are some concepts that aren\'t very clearly explained in his slides. If you were sleeping in class (or absent, like I was), the slides will be of very little help in such instances.\nI can\'t say whether Biliris genuinely cares about this class or not, but he definitely gives the impression that he cares about the students. In our first class, he announced that we could call him up at any time before 11PMexcept if we were going through a breakup, in which case he said feel free to call me even after.\nIn summary: his lectures are pointless. But he\'s a nice chap. His material is interesting. The workload: not too bad.\nWorkload:\nFour homework assignments - the first couple take 3-4 hours maybe. The third and fourth are shorter.\nTwo projects - done in pairs.\nOne midterm and one final - both fair.\nThree grace days for assignment submissions and three for projects make life much better.','0.299999997','7.300000101','best, awful, pointless'),('WCOMS4111','Biliris, Alexandros','Absolutely awful. His lectures are boring as shit and he doesn\'t actually realize that a 2.5 hour class can be taught in more than 8 powerpoint slides (literally). For some reason, he\'s obsessed with Barbados too and won\'t stop talking about it.\nBut now onto the real stuff:\nDon\'t bother going to class. Read his lectures that he posts online (takes about 30 min) and save yourself the other 2 hours. I can\'t stress enough how useless his lectures were. It\'s basically like taking a class online, you just have to show up for the midterm and final. The material is actually extremely useful and somewhat interesting.\nLuckily though, the material is easy and there\'s not much of it. There\'s a grand total of 10 short lectures (only 9 of them are tested on), compared to other classes that have about 25 a semester. The average won\'t be that high because you\'re with a bunch of IEOR majors and grad students that don\'t know how to program. The 4 homeworks can be tricky at times, but honestly not too bad.\nThe group projects are relatively easy and straightforward. You just have to demonstrate that your projects contain every concept that was taught in class, regardless of whether or not your Database schema will benefit with it (i.e. Aggregation is great in theory, but NOBODY puts it into practice in their database. it makes things painfully redundant and difficult. but since we learned it in class, you\'ll lose a substantial amount of points if you don\'t have aggregation in your database). Don\'t bother making your project look pretty or have much functionality. As long as you demonstrate the concepts that were in class, you\'ll get full credit. The median on project 2 was 49/50, if that says anything to you.\nYou have a total of 6 late days, 3 for the individual homeworks, in total, and 3 for the projects, in total. So clutch.\nMidterm and final are straightforward. If you know relational algebra, SQL, and the concepts, you\'ll do fine. And let me remind you, DON\'T GO TO HIS LECTURES.\nWorkload:\n4 homeworks\n2 group projects\n1 midterm\n1 final\n(all reasonable)','0.100000024','12.10000001','awful, great, useless'),('WCOMS4111','Biliris, Alexandros','Where to begin...\n1) This class was useless. Biliris is a mediocre lecturer and an incompetent teacher (or he just wasn\'t trying). His lectures were a complete waste of time. He would crap on and on about some simple concept in the most unintelligible way for an hour at a clip. I can honestly say that I did not learn anything substantial from this class. By the sixth week half of the students did not show up or left at the break. By the fourteenth week it was more like 80%. The material was presented with no context and no depth. I could have taught this class better than he did, and I do not have near the amount of database and teaching experience as he does.\n2) I ended up doing all of the group work by myself because my partner was so lost. I cannot blame him considering the lectures were essentially black holes. If I had not had database experience prior to this course I would have probably been as lost as my partner, who had none.\n3) A bit of the material was out of date. This happens in CS classes often, but it was particularly bad in this class. I think the textbook we were using was from 2003.\n4) We were forced to use Oracle for our projects, which was a nightmare. Oracle is one of the most bloated and hard to learn database systems around. Why we would use Oracle and not MySQL (very popular, modern, and easy to use) is beyond me.\n5) Biliris does not understand English well enough to teach a course. He can hold a conversation, but he cannot explain complex ideas. He did not understand questions asked by students and he often hid this by making fun of them.\n6) The grading in this class was ridiculous. Often points were taken off if we did not answer a question exactly how the TAs thought we should have, despite those requirements not being specified in the assignment description. Each homework and test problem was graded by a different TA, which meant you had to contact many TAs if you had questions about more than one problem. This was incredibly inconvenient.\n7) My assigned TA had worse English skill than Biliris, which made him useless to me.\nWorkload:\nThere were two projects. The first is pretty substantial and took some time, but was by no means difficult. The second could have been done in a few hours if Biliris actually ever mentioned PL/SQL during the lectures.\nThere were four homework assignments. Some were a bit challenging, but all were mostly irrelevant when it comes to actually learning something useful about databases.\nA midterm and a final. I have yet to take the final. The midterm was not hard, but the questions were as irrelevant as the homework problems.','-13.09999987','13.49999987','incompetent, worse, waste'),('WCOMS4111','Gravano, Luis','Professor Gravano is a phenomenal instructor. He presents the material so clearly that at times you\'ll be bored to death because everything seems so simple! Don\'t be fooled, though -- this is only because he teaches so well (I made the mistake of being lulled into a state of overconfidence and skipped out on a few lectures, and I\'m paying for it now just before the final!).\nGravano clearly knows his stuff and can answer any question you might have - if you ever have a doubt, don\'t hesitate to ask him a question because after he\'s through explaining, you\'ll wonder how you were *ever* confused.\nWorkload:\nTwo group projects (two teammates) - quite time-consuming, but definitely help you learn the material\nFour homework assignments - tough but fair and good for learning the material (which is useful because these are good indications of exam questions!)\nA midterm and a final - if you attend lectures and review all of the concepts before taking them, you\'ll be fine. I\'ve heard the curve is great, too.','1.399999976','2.399999976','phenomenal'),('WCOMS4111','Gravano, Luis','Professor Gravano is tied for my favorite computer science professor. He generally follows quality texts in his lectures and easily outperforms them in terms of the ease with which the material is presented. His homeworks and exams are reasonably challenging but also completely fair -- don\'t worry if you get a 60% on an exam because it will come out in the curve.\nFurthermore, he always knows what he\'s talking about (more than some professors) as a result of an expansive knowledge of all aspects of databases thus far. Now that I have gotten to know him better, it seems this stems from a more passionate interest in the subject than I\'ve seen with others in their respective fields and it leads to a genuine desire to help students really master the material.\nI would definitely recommend taking the 6111 course if 4111 was at all interesting.\nWorkload:\nReasonable workload, but group projects are easily do-\nable on one\'s own. Homeworks can be tricky and are a fair extension of concepts in class. Exams are generally pretty difficult, but it shows in the curve.','4.599999964','4.599999964','ease, challenging'),('WCOMS4111','Gravano, Luis','Prof. Gravano is great as a person, and puts much effort on teaching, but for reasons I can\'t even try to understand, he also puts great effort in making even the most basic concepts ungraspable and obscure - obscure in the sense that they appear like irrelevant details that won\'t help you one bit in getting through the course, let alone a job interview.\nThe first half of the course dealt with DB design and SQL coding, and was relatively easy,\nthanks in great part to the self-explanatory, standard flow charts used for DB design and to the equally obvius SQL code. The second half deals with DB I/O cost analysis, and was difficult enough for Prof. Gravano to turn into - take your pick - Derridean post-modern literary theory or Martian rocket science. Even in the project assignments the most obvious concepts were mangled into research paper theory filler - my project team mate, who sailed through the course, kept wondering why on earth the guy would go to such lenghts to turn the clear and easy into the hermetic and impossible.\nAgain, I never had any doubt that Prof. Gravano was putting more than enough effort on the class, considering that as a top scientist on the field he had a busy enough schedule, but the obscurity of his explanations made lectures a tough going, until by the second half he was making jokes about everyone falling asleep. The blank looks he was getting by then contrasted with the sincere interest everyone had on the course material before the midterm, when his challenges and questions started such debates, he had to stop and ask people to quiet down.\nThis is one of the few courses in which the difficult textbook proves more useful than the overflowing PP slides or the teacher\'s talk. The TA I was assigned for the project appeared to get kicks out of taking points for the most trivial mistakes, but then again, it is difficult to blame the teacher for such things - in fact he was the one who had to ask her to take it easy with the grading.\nWorkload:\nThe hw\'s were doable, the projects only passably difficult, but the tests were horribly difficult - unless you have a good memory, when rote memorization of concepts will make it possible for you to float through.','-1.000000007','4.000000082','great, great, great'),('WCOMS4111','Gravano, Luis','My opinion: the course is not hard, the prof is good.\nCourse covers all the basic db stuff. Most of the material is from the textbook. If you don\'t know programming you\'ll have a tough time so make sure you have the prereqs. The first project is a standard web/db app (what most db classes make you do). The second one is a number-cruncher type deal, it sounds kind of complex, but really is easy once you figure out the concepts.\nGravano is approachable and easy. Great in office hours, explained the 2nd project very clearly, I had no trouble running right into the lab and finishing it up. He also responds promptly to email. All in all, a kind soul like the other review said, tries to help you out as much as possible.\nWorkload:\n5 homeworks, 2 projects, midterm, final','4.700000018','5.100000024','great'),('WCOMS4111','Gravano, Luis','Here\'s the bottom line on the prof and the class. The class is more than a standard db offering in terms of workload: you got to do two projects, a web based db app and another theory-type number cruncher (most db classes make you do that one big app as a term project). There\'s also homeworks, mostly easy, with an occasional twist. If you go to class, do the projects/homework and score above avg in the exams, you\'re guaranteed a B+. One caution sign I\'d post is: don\'t ignore the prereqs. You *need* to know how to code, and you *need* to know some data structure stuff. Don\'t screw around on this one, or you\'ll run into trouble in the projects. Gravano is basically a good guy. He does his best to help you out (even tho he appears touchy in class when cellphones ring, laptops ping etc, and you got to get used to the self-deprecating humor bit.) He\'s cool in office hours and email too (he gave several important hints on the second project ... this was a *huge* help after I spent like a whole weekend going blind on the numbers.) Overall, low stress class and he\'s a decent guy.\nWorkload:\n2 projects, 5 homeworks, midterm, final','5.000000075','5.200000077','best, cool'),('WCOMS4111','Ross, Ken','Professor Ross has a cool Australian accent. That\'s pretty much what kept me going to the classes, though he does teach mostly out of the book. Either you go to the lectures and understand the material, or you read the book. You can take your pick. Also, the first half of the semester covers the more interesting stuff, while the second half can get way over your head. Make sure not to slack off mid-semester. You\'re probably better slacking off for the first month or so.\nWorkload:\n2 projects to be done with partners (with various parts due every two weeks), midterm, final','1.400000021','1.800000027','cool'),('WCOMS4111','Biliris, Alexandros','This was his first semester, and it showed. He just presented the lecture slides that came with the book, and read them outloud. Going to class was simply useless, if you had some other time to read it yourself. The first part of the class is easy and straighforward. There\'s a big project in 3-stages to build your own database application (duh). The second part of the course reminded me of the good old days at Unger\'s comp org. However, even though Biliris is as boring and mistake-prone as Unger, he is really a cool guy. He even uses the break to go out and smoke. The second project had nothing to do with database. It could have been given to anyone who had taken statistics and data structures. Everything is graded by the TA.\nWorkload:\n5 problem sets taken mostly from the book, 2 programming projects in Java or C++ in groups of two, a midterm, and a NON-cumulative final. Don\'t be surprised to find something in the homework that was never mentioned in class. If you ask him in class, he will explain it, but he expects you to just read the book. In that sense, this class reminded me a lot of comp org; the book was almost as thick, but the details were just as disgusting. His tests are short and to the point. Even the final was only an hour and a half with 4-5 questions.','0.400000013','3.800000019','cool, useless'),('WCOMS4111','Gravano, Luis','Really nice Prof. Really good in office hours if you need a concept explained further. Interesting first project, second project in C++ is boring, takes it right out of textbook. The material is reasonably mixed with real world examples and theory. Grading is fair, although midterm and final are overly weighted towards theory.\nWorkload:\n5 homeworks 1 group project in Java 1 individual project in C++, midterm, final','1.899999976','3.299999952','nice'),('WCOMS4111','Gravano, Luis','One of the kindest souls in the Comp Sci dept. There aren\'t that many profs that post on the web board as often as he does. His lectures may not be the greatest (in fact, you could do most of the learning by using the textbook and the lecture notes he posts online), but his homeworks and tests are pretty well designed. Has a tendancy to delay assigning homeworks until he has covered the material in class.\nWorkload:\n5-6 homeworks with 3 grace days, 1-2 projects (in groups of 2), midterm, final.','0.599999994','1.400000006','greatest'),('WCOMS4111','Ross, Ken','The information is useful, but the class is boring. Professor Ross tends to give way too much homework much of which isn\'t necessary for understanding the material.','-1','1',''),('WCOMS4281','Papageorgiou, Anargyros','This is for the quantum computing class - take it with Papageorgiou if possible at all. He\'s a phenomenal teacher - clear, helpful, and it shows that he really cares about your learning experience. He starts off every lecture with a review of past lecture, and he\'ll go through plenty of examples in class to make sure you really understand the underlying theories and principles.\nThe class itself is no joke. You\'ll have to know your linear algebra (he\'ll do a quick review but you still need to have some background). Quantum computing comes down to matrix operators acting on vector qubits, so linear algebra is essential. Papageorgiou sometimes gets a little carried away and covers a large amount of material in a single lecture - make sure you go over your notes after to really understand it.\nAs a result of his clarity and superb teaching, the average of the class was crazy high. So you really can\'t afford to mess up since the curve will hurt you a lot if you do. But since it\'s taught by Papageorgiou, you really shouldn\'t have any difficulties. Go to class. Do your homework. If you have questions, ask him in class or go to his office hour (he\'s very very approachable, I occasionally dropped in his office not during OH and he was glad to help).\nWorkload:\n5 homeworks - mostly straightforward with a maybe a few less straightforward proof questions. Each homework has a programming component, which is very doable and it\'s cool to see how you can simulate a quantum algorithm on a classical computer.\nThere is one quiz before the midterm and before the final, whose grade gets factored into the midterm and final grades. He does this to make sure everyone is on track.\nMidterm and final were very straightforward and open-book and open-notes. He\'ll do plenty of review problems before the exam and even gave out at least 2 questions on the exam (without revealing the solutions). So if you go home and worked it out, you pretty much have already earned 50% on the exam before you even started it.','3.899999931','5.099999979','superb, phenomenal'),('WCOMS4771','Jebara, Tony','Most of the reviewers from spring 2011 class have got it right about the lecture style of prof Jebara. He simply can\'t teach. I think the prerequisites are enough to prepare you for the math covered in the material; you will have the opportunity to explore more of differentials applied to matrices, lagrangian and bayesian probability.\nFor me it was pain attending lectures as I could hardly follow him. I guess his lectures were hampered by the size of the class. He would always seem to be in a hurry to cover as much material as he could without really caring whether students understand any of it or not. Like many others, I had to rely on online lectures from Stanford to build a proper understanding of many concepts covered in the class. What a shame!\nAssignments do well in helping you get the feel of the concepts but are not substantial enough to endow confidence to tackle hard problems. Mid-term was a disaster. Final exam was good, I thought.\nWorkload:\nFive assignments, a midterm and a final exam. Assignments have programming (in matlab) and non-programming (math) problems. Most of the problems in assignments test basic knowledge, therefore doable in couple of hours. Some (in most cases non-programming problems) are extremely difficult and you would spend days pondering and not get an answer.','0.399999969','5.300000019','opportunity'),('WCOMS4771','Jebara, Tony','The topics were extremely interesting. All of the readings were fun and understandable. Unfortunately, the class was enormous with about 200 people and the lectures took a hit. The instructor had no clue where most of the class was, and questions were rare. The lecture slides and lectures assumed reading ahead of time, and half of the class seemed to be behind. I got an A+ and I didn\'t do anything special other than read ahead in the book. The class doesn\'t lost as prerequisites but should MATLAB, optimization (Lagrangians, subgradient and gradient methods, etc.), graduate probability ( measure spaces, Bayes, and conditional/causal reasoning, etc.), lots and lots of linear algebra, and differential equations. It felt like he was trying to fit an entire career of ML into one semester.\nSome I sat next to in class were from basketweaving departments like OR or Business. This is definitely a math or statistics class.\nWorkload:\nFive very challenging homeworks. They would have taken much longer, but the answers were all online from previous years.','1.600000016','4.600000076','fun'),('WCOMS4771','Jebara, Tony','Warning: this class should be an applied math course. I attended lecture frequently but learned nearly nothing, and the slides were incomprehensible. He assumed a level of math that was not reflected in the prerequisites whatsoever, but at the same time, he oversimplified some things to the point of being confusing: he explained what an integral was but then, a few lectures later, used Lagrange multipliers without a single word of explanation. The homeworks were nigh impossible, and the midterm was about tangential mathematical properties of the equations that we based algorithms off of. This course is by far the worst grade I\'ve gotten at Columbia, despite the effort I put in.\nWorkload:\nFive homeworks that take around 6 to 10 hours each.','-3.399999939','3.599999942','worst, incomprehensible'),('WCOMS4771','Jebara, Tony','This is a very difficult course made much worse by the fact that he simply can\'t teach. From what I understand he is very good in his field, but that does not translate into the classroom.\nThe lectures are confusing and the slides are difficult to understand. He spends slide after slide on the easiest parts and then glosses over the more difficult concepts because they\'re \"obvious\". I and a lot of other students in the class didn\'t bother to use our notes and materials from his lectures to prepare, instead using the freely available materials for the Stanford machine learning course. It\'s absurd how much better they are.\nJebara isn\'t very approachable. If you look at his personal web page he has about ten different places where he says he\'s busy and can\'t be bothered. The TA\'s are hit and miss - there are one or two that are good and will actually try to help, but the rest aren\'t that great. I\'m pretty sure one of them never actually held office hours. He just sent out an email that he was canceling every week.\nAlso, there was a really strange incident that stuck out at me: on one of the homeworks one of the TA\'s announced they thought there was a lot of cheating going on, as they got a lot of almost identical submissions (something like 40 out of 130ish students), and their response to this was to take a few points off the grade of any student with one of those suspicious homeworks who asked for a regrade. It just falls in with the fact that, as a general rule, the professor and TA\'s for this class just can\'t be bothered.\nWorkload:\n5 deceptively difficult homework assignments - they seem simple, but you have to look up a lot of math\n1 unholy difficult midterm - I thought I was pretty prepared, but there were a lot of hard concepts combined, along with the requirement of doing a lot of big matrix operations we\'d been doing in matlab by hand. Not fun. For one 20 point question, I got 0 points and a frownie face as the only explanation.\n1 final that I\'m fairly sure will be a crime against humanity','-7.100000001','7.100000001','great, worse, cheating'),('WCOMS4771','Jebara, Tony','One of my least favorite classes at Columbia. I am sure the professor is a genius in his field, but it was not well executed or translated to undergrads. The lectures were dry at best - the class was not engaged. The lectures were very repetitive - you realy only needed to go to every other class as he spend the first half reviewing and the second half teaching (though I did go to every class). The slides were confusing with too much information crammed into them.\nThe teacher was not very approachable - I went to his office hours but he was unable to explain the proof in question to me.\nMuch of the course was over my head, in part because the prerequisites did not prepare me. Iw as not alone in this, but the course was not taught with this in mind.\nThe TA\'s were horrendous at best. The did NOT understand teh material. I would usually start the homework the day it was assigned - if I went to office hours then I was told I was working too early and they were not yet expected to understand the homework. I was also very annoyed when, after a homework had been live for a week (and I had completed it) it was changed.\nWorkload:\nExams were impossible - no idea where he got the concepts from\n6 decently straightforward homeworks','-6.100000046','7.100000061','best, best, horrendous'),('WCOMS4771','Jebara, Tony','There\'s a lot of debate on the background required to take/enjoy this course. Let me give you mine: Linear algebra (important, forgot), Gradients/Hessian (slightly important, forgot), diff/integ of exp, log, poly (important, very good), Probability (most important, Very good), Statistics (not needed, forgot), Optimization (slightly important, none), MATLAB (most important, none). Do not let people intimidate you, you can still do very well in this course by honest effort. Besides Prof. Jebara is a very good and considerate teacher who buffers his lectures with essential background material.\nI\'m puzzled with the other reviewer\'s comments regarding the material with respect to Ng et al. The combination of topics such as SVMs, VC Dim, graphical models and Back propagation is rare. Digging deeper, 6.867 at MIT is very similar in scope.\nHis slides are a work of art! Beautifully thought out with rich visual cues.\nTAs were brilliant (Pier Francesco Palamara and David Bondatti). Patient, welcoming and knew the material inside out.\nWorkload:\nVery well designed assignments. These involve translating/extending the equations in class to new distributions and settings and implementing them in MATLAB for a non-trivial data set. I feel very happy doing them because I know I will know EM, Junction Tree etc. inside out rather than wrestling some artificially hard time drain. Exams are challenging but fun! Make sure to get plenty of sleep and work out the practice exams WITHOUT referring to your notes.','6.099999979','7.100000009','beautifully, brilliant'),('WCOMS4771','Jebara, Tony','Nice guy, a horrible professor. The main problem is that he tries to fit way too much information into slides and is so boring that you stop caring about the course. He also interlaces examples while introducing examples, which may seem like a good idea, but Prof. Jebara introduces them at such bad times that you don\'t learn anything.\nAlso, the homework is embarrassingly easy and you don\'t learn anything, so by the time exams roll around, you don\'t have a clue what happened in the class.\nBefore people spout off bullshit about how machine learning is hard, try to find a lecture about ML by Andrew Ng (Stanford), Michael Jordan (Berkeley), or Tommi Jaakkola (MIT), or for a different flavor Carlos Guestrin (CMU). All the classes they teach cover more material, but the students are able to understand more material and understand it better.\nWorkload:\nTwo bad exams, 6 joke homeworks','-3.200000033','3.200000033','horrible, nice, bullshit'),('WCOMS4771','Jebara, Tony','My opinion is opposite to that of the other two reviews. While I do not rate him as the best guy in the department, he is not as bad as the other two reviews suggest. Machine Learning is a specialized field, unlike other core cs courses, it is interdisciplinary. It does need a good background in Linear Algebra, Calculus and a bit of statistics. WIth the right background, if the course is taken, the course is really enjoyable. Some of his slides are really good (again if you have the right background needed). Compared to Machine Learning home works given at other schools by other professors, his home works really make you understand what you implement. Overall I would give an A- for his course. I would like to stress that you need right background and interest to appreciate his classes','4.899999999','5.300000004','best, enjoyable'),('WCOMS4771','Jebara, Tony','One of the worst professors at Columbia. Not a mean guy, by any means, probably a genius in his field, yet not a very effective lecturer. Be sure to know your linear algebra and calculus cold because this is what this course is all about. If you\'re a statistics major, all the better, the course will be a breeze for you. All the rest, keep out.\nWorkload:\nNot too bad, if you understand the material.','-0.5','2.100000024','worst, breeze'),('WCOMS4771','Jebara, Tony','Allegedly Columbia\'s resident machine learning guru, Jebara is an extremely mediocre professor. The lecture slides were unhelpful at best, and he basically just reads off of them during lecture with some supplementary doodling on the blackboard. Still, he\'s a nice guy who will be happy to explain stuff in office hours, but I found the books to be the most helpful, especially for the homeworks. As for the course, be ready for A LOT of stat and linear algebra before you get to the good stuff.\nWorkload:\nFour cookbook homework assignments using MATLAB (start early), a moderately difficult midterm, a virtually impossible final, and an open-ended project/paper.','-0.199999988','2.99999994','best, allegedly, unhelpful'),('WCOMS4705','Collins, Michael','Knowledgeable? Yes. Approachable? Yes. Nice? Absolutely. A good instructor? Hell no.\nProf. Collins definitely knows his stuff. However, he has troubles conveying it to his students. Admittedly, I\'m not very good at prob/stats, and this course is full of probability. However, it is not a sign of a good professor when you\'re really excited to be there on day one but feel utter despair on your way out. My friend and I went to almost every single lecture but felt behind everyday.\nAlso, there were three assignments the entire term. Usually this would be a good thing. However, because you did not understand what was going on in lectures, we at least needed some kind of practice for the midterms (called quizzes because he\'s British or something). Alas, no assignment was released before the second midterm, and it absolutely pooped on us.\nHopefully, this cluttered and unorganized class will get better as Collins gets more and more experience teaching. However, if you can, try to take it with Prof. Hirschberg or someone who can actually make you understand.\nWorkload:\n3 HWs (5 were expected in the beginning)\n2 Midterms\n1 Final','-0.599999972','7.600000024','excited, nice'),('WCOMS4705','Collins, Michael','You know you\'re taking a class on a different level when you\'re doing homework and whenever you Google for help, your own damn professor\'s slides and research papers are the top (and sometimes only) results.\nYou know from that that Michael Collins is obviously a brilliant man and has made a huge impact on NLP research, but he\'s also a great lecturer and professor. He explains topics thoroughly and thoughtfully and takes time during class to answer all questions. He\'ll give printouts of slides to you as well as post them online. (The slides themselves are really only meant to supplement his lecture though芒鈧€漷here are some classes where the slides are a good substitute for in-class notes; this is not the case here.) For some of the bigger topics (part of speech tagging, machine translation, etc.) he\'ll also type up his own notes that cover the subject pretty well. Overall an approachable and friendly guy.\nAs for the course itself, like a previous reviewer said, Collins definitely brings some rigor to a class that is generally within Julia Hirschberg\'s realm of teaching. The class felt like applied machine learning at times, and you were at an advantage if you\'ve taken some sort of ML before, and a strong foundation in statistics is important to really understand what\'s going on. The average on some assignments and quizzes were really low (a third of the class got less than 50% on the second quiz), but the class is curved. The tests were a mix of applying basic knowledge on a topic and adapting algorithms learned in class to some unique situation. The analytical part of the homeworks were generally in a similar spirit. Grading was a bit harsh at first but seemed to let up towards the end.\nIf you know 1) your stats and/or 2) have taken some ML before and 3) want to learn NLP from one of the top people in the field, there\'s no question you should take this class. If you just want to do #3, it\'ll take you a little more effort, but you\'ll probably muddle your way through like the rest of us. If none of these sound interesting, there are better classes out there for you, friend.\nWorkload:\n2 quizzes, 1 final.\n3 homeworks, seemingly released at the TAs\' whims. All had analytical parts, first 2 had programming. On par with what you\'d expect from this style of course.\nProgramming wasn\'t necessarily difficult, but sometimes it\'s hard to debug when you\'re working with a decent-sized corpus and your entire program takes minutes, if not hours, to run. If you ask, the TAs should release how long each program should take to run (generally < 5min), but everything\'s language-dependent anyway so that\'s only slightly useful.','6.799999952','7.399999961','brilliant, great'),('WCOMS4705','Hirschberg, Julia','This is not the class I thought I signed up for, but now that I\'m done with it I think it was worth taking.\nIt\'s insufficiently clear from the course directory that NLP (at least with Prof. Hirschberg) is entirely a survey course: you learn very little that you can sit down and implement, and a lot about broad categories of problems in computational linguistics and the general approaches that has been used to solve them. There are a handful of algorithms I\'ll hang on to---two months after the midterm I\'m fairly confident I could write a Brill tagger or a CYK parser---but realistically, I\'ll never need to, and most of the material is not that specific. This class is not so much about learning to do NLP as it is about learning to understand what\'s already been done.\nProf. Hirschberg herself is very sweet---helpful and accessible outside of class. She also has a very soothing voice. This turned out to be a bit of a problem: I came every day, but to my great shame would start to doze off around the 45-minute mark almost half the time. I would love for her to read me bedtime stories, but the bottomless slide decks and repetitive nature of the material mean that the lectures are unstimulating to the point of peril.\nIf you\'re at all interested in NLP I\'d certainly recommend that you take this class; if you\'re just trying to fill the AI track requirements you\'ll learn more impressive things in graphics.\nWorkload:\n2 programming assignments that require potentially infinite time---you\'re evaluated on a blind test corpus so you have no idea how you\'ll do. No \"A for effort\" here---your score is entirely based on how well you handle the test corpus relative to the rest of the class.\nOne (fairly lengthy) written assignment.\n1 midterm, 1 (non-cumulative!) final.','2.399999961','4.199999973','brill, great, love'),('WCOMS4705','McKeown, Kathleen','She did a good job of covering the material and explaining what she expected for the midterms. About what you\'d expect for this level class. There was a curve.\nhttp://www1.cs.columbia.edu/~kathy/NLP/\nWorkload:\n3 projects (in perl or java), 1 homework and 2 standard exams.','1.300000019','1.500000022',''),('WCOMS4705','Hirschberg, Julia','Man, I must not have been taking the same class as the other two reviewers. NLP is an interesting topic but somehow it ended up getting reduced to baby talk, with endless probing of the uninterested students for examples to incredibly simple questions. She\'s a nice person and all, but this felt like a big waste of time.\nWorkload:\nThree long programming assignments, two pretty easy exams (a lot of memorizing terms).','-1.49999994','2.099999964','uninterested, nice, waste'),('WCOMS4705','Hirschberg, Julia','An excellent professor, not a bad class. Professor Hirschberg is engaging, friendly, and interesting, incredibly well prepared for class, and impressively knowledgeable about her field.\nYou should expect the class to tend towards your humanities side, if you are used to the standard comp. sci class. Exams consist of essays rather than calculations, and at least half the class is devoted to the study of natural language itself, often seperate from computation. There are very few algorithms to learn, material is approached on a \"higher level\" that avoids technical knowledge.\nGoing to class is not strictly required, since there are beautiful lecture notes for each class, as well as chapters and sections in the book posted for each lecture. Missing class however would be a mistake, as she is an engaging lecturer.\nWorkload:\nThree homework assignments that require only a relatively minimal amount of programming (repeated use of regular expressions, mainly), but are interesting. One was organized as a competition. Two exams that were fair, with term definition and essay sections.','2.400000013','3.600000031','impressively, excellent, beautiful'),('WCOMS4705','Hirschberg, Julia','Julia is, in a word, amazing. She is a really sweet, nice lady who is also extremely knowledgeable about her field and seems to really LOVE teaching. Her melodic speaking voice makes her sound like she\'s talking down to the class, but don\'t be fooled; once you get used to her you realize that she truly respects her students. The classes are a mix of lecture and discussion, but tend toward discussion most of the time. Julia really encourages the class to get involved (there is a class participation grade), and usually there are many great insights into the material. She will learn your name, and you are always welcome to chat with her after class or in office hours. If you are at all interested in NLP, or you think you might be, do not miss this class.\nWorkload:\nAssigned readings (textbook and papers - definitely NOT optional, but the book is quite good), 3 homework assignments (VERY INVOLVED, so start early), and a closed-book midterm and final.','4.099999964','4.099999964','amazing, great, love'),('WCOMS4180','Cook, Debbie','Avoid this like the plague. Three-hour lectures are spent reading man pages (in roughly the tone of voice that you\'d expect a man page to be read). Long, unguided homework assignments are spent mostly figuring out the details of Java libraries rather than doing actual work. Then they\'re graded seemingly at random... a friend got 25 points off for a non-preferred commenting style!\nA giant waste of time, and damn hard to sit through.\nWorkload:\nThree long homeworks, two exams (one was tough, one wasn\'t).','-2.100000061','3.000000097','waste'),('WCOMS4180','Keromytis, Angelos','In defense of a wonderful professor: Prof. Keromytis is bright, extremely knowledgeable, prepared for class, funny (not dull), and cares about his students. My friends and I found him to be very approachable (not snotty or blatantly rude) and eager to help, though often it made sense to first go to the TA. His assignments covered some applied security technologies (SSL, RSA/AES encryption, SOCKS, DH key exchange, etc.) but not necessarily every single theoretical model discussed in class. C was the language of choice with two minor exceptions for Java. I rate this class 5/5.\nWorkload:\n5 assignments - %50, midterm - %20 and final - %30. The midterm and final were of average difficulty. Some assignments were very difficult and time consuming and others were of average difficulty (no easy ones).','0.799999982','2.99999997','snotty, wonderful, rude'),('WCOMS4180','Keromytis, Angelos','The lectures are straight from the book - the prof reads right off the pages. This *sucks* big time coz the assignments are harder and you get *no idea* from the lectures. (Example. You need to do this RSA encryption project. You get the math background from a book somewhere. But to actually *implement* it using those hideous Java BigNums or the grungy GnuMP libs is a whole other story - try computing an inverse mod using GnuMP...)\nYou get little-to-no-help from the prof for debugging etc. The exams are not particularly hard, basically regurg the stuff you saw in class. Overall, if you did the programming then you got something, otherwise don\'t take this class. Ok, maybe the prof really knows his stuff, but he sure doesn\'t know how to deliver it. Overall, potential to be a great class, but sucky prof. rating is ** out of five stars.\nWorkload:\n5 *hard* programming homeworks, midterm, final.','-2.400000021','3.800000042','great, sucks, sucky'),('WCOMS4180','Keromytis, Angelos','Like the other review says...Keromytis definitely know his security stuff...however, in his teaching approach, he assumes students know just about as much as he does. His lectures are interesting, however they do not correspond to the programming assignments at all. The assignments are a lot of work, and he just dumps it on you with no help whatsoever. He is somewhat snobby, and not at all approachable...but if you love security, and think you can handle programming it, than the class is for you.\nWorkload:\n5 homeworks, 50% of grade (includes programming & theory) midterm (not too hard, 25%), final 25%','-0.799999975','3.999999978','love'),('WCOMS4180','Schulzrinne, Henning','Another reminder that this is a research university, not a teaching center. Schulzrinne means well, and he is into his work, but lectures are no more than powerpoint versions (no joke) of the mediocre book, and the material is poorly organized, poorly presented, and unfairly tested. The assignments are unrealistic, support from the book is nonexistant, and a lot of students realized too late in the course that this was one they should have dropped. On the other hand, the subject is a fascinating one, and the few assignments that students are able to finish are cool things to be able to tell people you did. Just be forwarned: it\'s a cool subject, but you\'re on your own to explore it, and there is no helpful book to fall back on.\nWorkload:\nSeveral medium-sized programming projects (some are very hard), monthly problem sets, Midterm, Final.','-2.399999976','4','cool, cool, poorly'),('WCOMS4118','Nieh, Jason','Your experience in this class will depend almost entirely on your team. If you come in with people you know and trust to be competent, you will be at a monumental advantage. If you sort into a random group, well... godspeed to you, brave soldier!\nThe professor\'s lectures were of extremely high quality, though the recordings are not. TAs were top-notch. The two books were, respectively, completely useless and extremely useful. You will be given problems from the extremely useless book, but should instead spend your time reading the book on kernel development for the homeworks.\n(45%) 6 homework assignments, lowest is dropped\n(15%) Grading on your reviews of peers\' work\n(15%) Midterm\n(25%) Final\n(00%) Extra Credit\nNote: there were programming problems on the two exams.\nWorkload:\nIndividual contribution will vary between 15% and 70% of each homework assignment, subject to group dynamics.\nAverages tend to be quite low on homeworks and exams. If you score between 50 to 60% on the assignments and exams, you\'re probably in the middle on the pack.','-0.79999996','3.799999945','useless, useless'),('WCOMS4118','Nieh, Jason','Too much workload that equivalent to, or even more than the rest three courses I take this semester. Besides the endless projects, you need to review others\' homework which also takes up much time. The grading sheet is really harsh, you never know what parts will be deducted points according to the grading sheet. The homework instructions are ill-organized sometimes, you were not clearly told what were expected to do in order not to lose points.\nWorkload:\nSix projects, the first two are easier(compare with the latter ones), but the rest are hard. The last one conflicts with other finals, other projects and has earlier deadline. No grace days.\nMidtem+final. Some parts are at the corner of the textbook. By the way, the textbook is pretty useless for the 6 projects.\nAnyway, if you enjoy challenges and have plenty of time and mentally strong, this course is designed for you.','-1.99999997','1.99999997',''),('WCOMS4118','Nieh, Jason','Real men take Operating Systems. And, of course, hard as nails women too.\nThis is by far the hardest class I\'ve ever taken. The workload is about 30-40 hours per week on project weeks, almost none on off weeks. And there are like two off weeks.\nThe course itself, as in the things you get examined on, is actually relatively simple. There are two components: a concepts component, which you can get entirely from reading the textbook, and a practice component, which consists of endless hours of reading through C source code, followed by more hours of implementing your design, followed by a frantic 24 hour code marathon once you finally figure out what you were supposed to be doing from the start.\nSome prerequisites: Firstly, you need to know C really, really well. I mean like, you need to be able to write memory-safe in C in your sleep. You will be taught thread and interrupt safety in the course itself.\nMore importantly, you need to be able to read C code. There is no manual for the Linux kernel. It\'s C all the way down (well no, it turns into assembly at some point...) I mean, yeah there are some documentation notes, but the real deal is the code. If you can\'t figure out what a method is doing in one glance, you\'re going to have to brush up on your sight reading.\nOh and also, the projects are based around modifying the Android Linux kernel. I mean, how cool is that!\nWorkload:\nOh sweet Jesus. Like I said before, the workload is crushing. On the bright side, though, you will be working as a team, so you can always opt to cling like a remora to your teammate\'s work. If laziness is not your thing, you\'d better get the lead out, because this class will make the rest of your classes look wimpy.','2.70000001','5.100000061','cool'),('WCOMS4118','Yang, Junfeng','OS is an essential course and you could learn a lot about kernel programming.\nHowever, personally speaking, Prof. Yang\'s classroom delivery is the worst that I\'ve ever seen at Columbia. The first several classes, it turned out to have 50-70 attendance. Then, this number continued to drop and after Spring Break, we\'ve only had 10 people or so in the classroom. It seems people prefer reading textbook. A lot of errors in his slides. He\'s a nice person tho.\nSome TAs in this course are really bad, in contrast, some are really good. I agree with the previous review. One TA had a serious attitude problem and he looked down upon on the students. And it seems that there\'s few communication and discussions among the TAs, so that they have different criteria when grading. A lot of grading errors. It\'s totally unprofessional.\nWorkload:\n6 tough HWs through out the semester. 1 can be dropped.','-2.899999902','6.499999985','worst, unprofessional, nice'),('WCOMS4118','Yang, Junfeng','This is not a \"mad hard\" course, but a few bad policies unnecessarily make it more painful.\nDespite repeated pleas Prof. Yang did not post the slides before lecture, his reasoning being that this would force everyone to take notes. This voodoo pedagogy ended up discouraging me from taking notes. Please take a look at this:\nKimberley A. Babb, Craig Ross, The timing of online lecture slide availability and its effect on attendance, participation, and exam performance, Computers & Education.\nHis slides are pretty incomprehensible/garbled in most places and too verbose in others. Prof. Yang is pretty earnest, so it may be a matter of N-iterations.\nThe TAs for this course were not the best. They\'re perfectly OK with the grading but their mannerisms, politeness and preparedness leave a lot to be desired. Also getting the TAs to grade parts of the exam is ridiculous.\nSpring break gives you a breather, so if at all possible take OS in the spring. Prof. Yang will have asides on topics like Files Systems, Concurrency, Testing etc. whereas Prof. Nieh (Fall) talks about other OSes like Android. Other than that the two offerings are almost the same.\nThe Linux kernel is written with *excellent* C programming practices. Some of the constructs are delightfully concise yet ridiculously extensible and performance tuned. Doing the first assignment to its completion will get your C programming up to scratch.\nWorkload:\nI scoff at suggestions that it\'s too heavy. It\'s entirely reasonable given the ambitious scope of this course and if you understand what you\'re doing. Make sure you pick partners who like OS and are not just trying to get it over with.','-0.699999973','6.5','delightfully, best, excellent'),('WCOMS4118','Yang, Junfeng','Operating systems is a mad hard course. The assignment take forever. If you don\'t need to take OS you should avoid it altogether. Its a very painful course, having left me sitting in that smelly CS lounge staring in front of ugly terminals displaying kernel bug and panic messages on warm spring weekends while everyone else plays with frisbees or what ever the youth plays with these days. However the skills learned from this class could come in handy; it helped me net a sweet job so the pain was worth it for me.\nThe theory behind the class isn\'t too bad but the assignments involve changing the actual linux kernel to do new things. The kernel is very confusing and has many program practices which would normally be considered bad, such as extensive use of macros, but is justified for efficiency. There are a ton of underscores everywhere which annoys me (I prefer the Java capping style but oh well). Also since its the kernel debugging is a lot harder. Make sure you thoroughly understand C before this course.\nWorkload:\n6 super heavy assignments (1 dropped), tough midterm and final','-1.200000003','4.000000075',''),('WCOMS4118','Nieh, Jason','This course is the best CS course I have ever taken.\nI entered the course with very little C experience and with hardly any Linux experience - let alone any kernel programming experience. After taking this course I did a project for the professor next semester and I now feel confident to take on large kernel intensive projects.\nFurther, even if you\'re not going to be an operating systems developer, taking this course will make you understand all those details, which are unavoidably important, but always seem vague without having real OS experience - such as memory management, device drivers, threads and processes and more. I have taken another OS course before this at another institution, and I have to say that a course like this should be mandatory for all CS students.\nJason is an excellent teacher, who is very approachable and answers any question with insight and dedication, so take this course with him if you have the chance.\nOnly criticism is that I think there should be a homework related to writing a driver/module instead of for instance changing the scheduler, as it is more relevant for most of the kernel work to be done by the majority of people. Also, the classes do seem a little slow at times, but I guess that\'s more of personal preference.\nWorkload:\nRegarding the workload, yes, it is VERY tough. The homeworks will kill you, and if you have little C and linux experience it will be even worse. As another reviewer wrote: do some C programming practice before starting this course! Also, pick a good teammate and plan the entire semester for homeworks (including which homework to possibly skip) from the beginning. The midterm and final are not over the top difficult, but will require knowledge of what you are doing. (The questions are relevant though and not to test-like).\nDon\'t let the workload scare you off, but don\'t take this course together with other core-courses - you will suffocate :)','2.899999842','5.699999943','dedication, best, excellent'),('WCOMS4118','Nieh, Jason','This is by far the most demanding and rewarding class I have taken as a CS grad student at Columbia. The famous 6 Linux kernel homeworks were just as time-consuming as could be expected. However the Prof and the TA:s were very helpful and there is a good discussion board belonging to the class. It was possible to skip one homework without a grade penalty. The first two assignments were not that difficult but 3-6 was very challenging.\nThe exams were in general pretty straight-forward if you had attended the lectures during the semester. The lectures however were rather slow and somewhat obstructed by irrelevant questions. The level of the lectures were much lower than what was required to finish the homeworks.\nThe best advice I can give for this class is to preferrably get familiar with C and Linux as much as possible before starting the class. No previous kernel programming experience is necessary but not having to spend time with syntax problems is very nice.\nBut anyone interested in low-level programming should definately take this class.\nWorkload:\nThe assignments took us on average up to 40 hours each.\n\nIn addition there is some reading to do and lectures to go to. The exams does not require a lot of studying though.','5.299999945','6.499999993','best, nice, challenging'),('WCOMS4118','Nieh, Jason','Hardest CS class you\'ll take at Columbia, hands down. Also, the class you\'ll learn the most from. Work hard in this class and you will be rewarded. Work not so hard and, well, you\'ll know the theory fairly well, but that\'s about it. This class requires a highly intimate knowledge of C--if you don\'t know it very well, then either skip the class or be prepared to read the K&R book thoroughly.\nThe course covers the internals of the Linux kernel and we worked specifically with 2.6.11. Nieh covers mostly theory in class, and there is one text which goes over theory in more detail, and one which is a god-awful dry textbook (more like a manual, actually). The assigned readings aren\'t that long, and you will definitely need to do them--otherwise you will have no idea what the hell is going on. That being said, his lectures compliment the readings very nicely. Nieh was one of my better profs in terms of not \"teaching out of the book.\" However--Nieh is the person you go to if you don\'t understand theory. If you need help with the homework, skip him and go to the TAs directly (he has little involvement in the homeworks).\nFor each homework, you write a patch to the kernel that does something. After you submit, you have to meet with the TA for ~30 minutes to demo it, and they will also run their own test program on it. Be careful as they are NOT AT ALL forgiving if anything goes wrong--if you can\'t get it to work (even for a stupid error like you submitted the wrong file), you lose practically all points. Also, each HW has a written portion (~10 questions, usually 50% of the grade).\nHWs:\n1. Basic stuff, write a small shell, etc.\n2. syscall logger: not that hard, just an introduction to syscalls/the virtual machines you\'ll be using\n3. waitqueues/locking/threading stuff: you don\'t have to write that much code, just be careful what exactly you write.\n4. implemented a new scheduler type. most of the class just skipped this HW entirely, i recommend you give it a shot, but, don\'t bother if you can\'t get it.\n5. memory tracker: write a syscall that can track what chunks of memory you\'re using. requires you to go low-level with page tables, etc. tough but doable.\n6. process tree filesystem: make a filesystem that reflects the processes on a system. it\'s a lot easier than it sounds; he gives some examples of other pseudo filesystems in class.\nWorkload:\n6 homeworks, 1 midterm, 1 final. Best 5 out of 6 homeworks used. Be careful - each homework could be considered a workload you would put into a project for another class. The midterm and final were both standard: he has a review session for each where he goes over old ones. The exams you take will be different, so you can\'t just study the old ones and be fine, but they\'re aren\'t THAT tricky.','3.300000146','9.700000152','nicely, stupid'),('WCOMS4118','Nahum, Erich','Operating Systems is typically taught by Jason Nieh. This past semester it was taught by Prof. Nahum.\nOverall, Nahum is an interesting lecturer who tries to engage the class as often as possible during lectures. He is very approachable and very helpful as well, if you are in a bind (say if the pressures of the world make you and the rest of the class need a hw extension).\nGoing by the number of assignments (and what Prof. Nahum said at the beginning of the semester) the class is a bit less hardcore than when Nieh last taught it, but all the important bits are still intact and you still learn a lot.\nIf Nahum teaches OS again I would definitely recommend it, as he is a pretty solid teacher.\nWorkload:\n4-5 Assignments with Programming and Written Component, Midterm, Final','3.799999997','3.799999997',''),('WCOMS4118','Nieh, Jason','This class was the class I have learned the most from, and has also been the class from which I have gained the most marketable skills I have and have at least indirectly landed me job offers.\nSometimes professor Nieh presents material in a suboptimal order, but he is very good at explaining low-level system concepts and hardware interactions as well as higher-level algorithms. Exams are definitely fair, but homeworks can be ridiculously difficult in some cases, but others are a good amount of work and are very educational.\nHe is also very approachable in person and will help with concepts outside of class and welcomes feedback as well.\nWorkload:\nThe largest workload of all the classes I have taken in the CS department (databases, vision, PLT, adv. databases, AI, etc.) -- 5-6 projects that involve directly altering the linux kernel, 2 exams, each project is a group project with an individual part with problems mainly from the text.','3.300000012','3.300000012',''),('WCOMS4118','Schulzrinne, Henning','Pure hell. Though Shulzrinne is a very competent lecturer, who fills the powerpoint-driven class with his vast array of knowledge and with up-to-date news (he even brought up newegg.com on the screen to be sure of the size vs. price of hard disks today) the course itself is probably the most intense you will EVER see in this department.\nBe prepared for a very new kind of programming; you won\'t be writing anything from scratch (save perhaps the first project where you write the unix Shell). Instead you will have to understand lots of cryptic code and obscure structs in the kernel in order to piece together half of an understanding of what is going on before you can actually make changes. The development cycle, far from being the simple \'javac blah.java; java blah\' will instead be tweaking small sections, recompiling the kernel, and rebooting, which can take the bulk of your time. The three TAs, however, were very available and ready to help out.\nWorkload:\nExtreme. Five group programming assignments which involve VERY confusing hours of attempting to make sense of vast reams of code in the kernel and then finally inserting a few strategic lines in just the right place to make it work. You will spend many hours figuring out how to track down bugs causing mysterious kernel panics that crash the machine. In addition, there are six written (individual) homeworks that are also quite heavy. Altogether there are 11 assignments, launched close together, and no time to breathe. Homework 50%. One midterm (20%) and one final (30%).','1.099999972','3.699999996',''),('WCOMS4118','Keromytis, Angelos','There\'s a CULPA review of Dan Rubenstein in which the reviewer compares him to a sushi chef who just hands you a dead fish and then criticizes your cooking skills. Keromytis is much worse than that. He\'s more like a swimming teacher who throws you into a huge pool of acid, then just randomly rambles on about the Summer Olympics. In his lectures, he was always talking about new concepts without introducing them first. Example: one day he was talking about page faults, as if everyone knew what a page fault was. But he had never talked about page faults or pages in class before. I raised my hand and asked \"What\'s a page fault?\" He said, \"Oh, that\'s right, I haven\'t talked about pages yet. I meant to say \'TLB miss\', not \'page fault\' \". OK, fair enough. But then, a few minutes later, he used the term \"page fault\" again. He STILL hadn\'t introduced the concept of pages. You need to be aware of what you\'re saying... Don\'t assume we know these things, we don\'t all have like 8 million PhD degrees in CS like you. It\'s a CLASS. We\'re there to LEARN. That means most of us didn\'t know anything about this crap at the beginning of the semester.\nKeromytis is one of the many professors at Columbia whose teaching skills were NOT taken into consideration at all when Columbia decided to hire him. If Columbia decided jobs based on teaching skills, Angelos would be fired tomorrow. Basically, he got hired mainly because he\'s good at acquiring money for the university through research grants. Learn how to run a class. Oh, wait, I guess you never will learn that.. Columbia has tons of professors who were hired like this. All the most selective colleges in America (the \"top-tier\" colleges) do. It\'s a serious problem with the American academic world today. Before I started attending Columbia, I heard that the Ivy League colleges were the \"best\" colleges, and I used to believe it. But now, more and more, I\'m finding that idea hard to swallow.\nWorkload:\nRidiculous. The homeworks basically consist of making changes to the Linux kernel, which is really hard if you\'ve never done it before. It\'s a whole different ballgame than normal programming. And Angelos never took any time in class to give advice about how to do it.','-2.800000027','10.60000007','best, worse'),('WCOMS4118','Keromytis, Angelos','I liked Angelos. He seems intimidating at first (if you judge him by his mugshot on the columbia site), but he\'s really very friendly and takes time to explain things again if you didn\'t catch it the first time, and seems to enjoy teaching this class.\nConsider this class CS bootcamp, though. If you\'re not completely comfortable with C and the linux kernel, the assignments will kick your ass. They took up all my free time, essentially, but somehow I enjoyed it.\nI found the midterm to be much easier than I expected, but the final test was pretty brutal.\nAll in all, I would highly recommend taking this course and this professor.\nWorkload:\nHeavy. You\'re suicidal if you\'re thinking of taking this class with Algorithms.','3.5','4.5',''),('WCOMS4118','Keromytis, Angelos','Erm... some people formed a cult of personality around this guy, but I found him to be kind of lousy as an instructor and had a tough time maintaining any interest. A lot of questions would be answered in the form of a long, irrelevant story, which was annoying, and the exams were sort of harsh.\nGuest lecture from the VMWare guys was pretty cool. I did eventually warm to this class as the term went on, and doing some kernel hacking will make you feel warm inside, so... Plus it\'s not like you get a choice, really.\nWorkload:\n5 and a half homeworks, each of which you get about two weeks for (hell, you could just do them at the beginning of the term). Time-consuming if you don\'t know what you\'re doing (I didn\'t) -- if you already know a little about the kernel, I suspect it\'s a very light load. Short exams.','-0.499999993','3.500000067','lousy, cool'),('WCOMS4118','Kamra, Abhinav','I took OS with Professor Kamra over the summer. The course was 12 weeks instead of 15, so I was expecting it to be a little less rigorous. But I didn\'t expect the professor to show such little commitment to the class. Around the second or third week, he posed the following question to us: \"Does any mind if we don\'t have class on Thursday, and just have class one day a week?\" No one responded, and this was viewed as consent to literally cut the amount of scheduled class time in half. (I\'m not sure how ethical this was, but I didn\'t want to be the one to complain, and most people just seemed to be in there for the credit.) He claimed we\'d cover the same material, but I\'m doubtful. I was going to put a complaint about this in my official class review, but it appears we were never given any forms.\nAs far as lecturing style, he\'s pretty straightforward and open to student questions, but it\'s difficult to discern any passion for the subject matter in his delivery. He doesn\'t go into much more detail than the slides, and I ended up getting most of what I learned from the book.\nHe told us there\'d be four quizzes but the first only came about halfway through the term, the second came a couple weeks before the final, and the final two simply didn\'t come. These quizzes are very unusual in that they\'re multiple choice, but there is no indication as to how many of the choices are supposed to be circled. And many of the answer selections seem quite borderline, in my opinion. No quizzes or grades of any sort were revealed until the very day of the final exam, which made it very difficult to gauge how much to study.\nI was amazed that this class gets you the same credit as the legendary OS class taught by Professor Nieh during the Fall. If you want an easy A in OS, I\'d recommend taking this class. But if you want to be challenged, or really learn about the linux kernel, take it with someone else, some time other than the summer.\nWorkload:\nThere is no linux kernel hacking. Instead, you build your OS using OSKIT inside VMWARE. Each OS test requires two reboots of the vmware, so this can be tedious. That said, I really enjoyed this project. There were also two earlier projects, one of which was to implement dining philosophers using a) threads/semaphores b) processes/pipes. These assignments were very instructive. But there\'s no need to really do a good job of it, because your grade is determined completely by a two minute demo in which you show him the program running, and explain to him how your code works (professor showed up an hour late to said demo). He never even asked to see certain parts of the assignment that I knew some people didn\'t have working. The final OS demo was equally cursory. When I complained to him anonymously about his grading method, he claimed his method was more effective than having him and/or the TA go over the code themselves, and that if I had a problem with how mine was graded individually, I should talk to him about that specifically. It was hard to have a problem with \"how mine was graded\" though considering that we were never even told our grades on them.','-0.300000004','8.400000118','amazed'),('WCOMS4118','Nieh, Jason','Professor Nieh is generally an amiable person. He provided us with Halloween candy during the midterm and held a pizza party/review session for the last day of class. His teaching style of writing bulleted lists and making diagrams on the blackboard is mildly helpful -- at least it\'s not Powerpoint. The material was actually really interesting, and concretely brought together things I had learned in other CS classes. Unfortunately, all of this pales in comparison to the torture of the homeworks: endless hours of staring at a computer trying to understand somebody else\'s LInux code that is hardly discussed in class. The material taught in class was how an operating system works. Ability to do the homeworks was in NO way a function of how well you understood this material. Take this class if you don\'t care about your grade or have no social life.\nWorkload:\n6 disgusting group homeworks, midterm and final.','-0.199999988','4.200000107',''),('WCOMS4118','Nieh, Jason','If you\'re going to look for a job in I.T. after graduating with whatever degree you\'re working towards, this class is a must. The fact that Linux is used as a case study throughout this course is *immensely* useful, if only that OS courses at other universities are taught with merely pedagogical operating systems such as Minix or Nachos. That said, the programming part of the homeworks was arduous and time-consuming (yet rewarding once you gradually grokked a solution, which ended up being less than 50 lines of code for most of the assignments). An able CS undergrad would spend anywhere between 10 to 20 hours a week on the homeworks (written + programming parts combined). Nieh\'s lectures are very straightforward, and they are very much worth attending. The class is all about *detail* -- for those in systems, there is mounds of it to drum into your head, and this class gives you good practice. The worst part of the class is not the homework, but the morons that you can be potentially be paired up with for doing the programming assignments. Your partner may contribute nothing, yet s/he can get all of the credit for your hard work. Luckily, you get to submit reviews of your partners and they swap around the programming partners based on those reviews after the first two assignments.\nWorkload:\n6 homework assignments. Each assignment has a written component and a programming component. The worst homework grade is dropped (i.e. your worst written score and your worst programming score is dropped, so if you did badly in the written part in homework #3 and the programming part of homework #5, those scores are dropped.) Midterm was easier than the final.','3.100000054','5.300000012','worst, morons'),('WCOMS4118','Nieh, Jason','Ok, here\'s a simple test to determine how you\'d do in Nieh\'s OS class. Rate yourself on a scale of (1=low to 10=high) on each of the following: C/UNIX programming; low-level debugging (i.e. pointers, memory traces, locking/serialization); Linux kernel. Now take the average. If greater than 25, you\'ll do ok. If greater than 15, expect to spend at least 10 hours a week in the CLIC lab. If less than 15 then **don\'t bother**. For real. If you are not an expert (or at least very very good) in C and UNIX, then *don\'t bother*. Now about the class itself. It runs at 200 miles per hour. If you can\'t keep up with the homework, then you are basically screwed. The programming part is **all Linux kernel hacking** and it is *not* covered in class. Don\'t expect the TA\'s to debug your problems and don\'t expect the prof to give much help except conceptual stuff. Of course, if you have munched Linux kernel code already, then this course will be a breeze. BTW, the cheating policy is outrageous (if the TA suspects you in the least, you are screwed.) Like the other review said, trust the prof/staff less than they trust you and you\'ll be fine. Prof is okay at office hours, but doesn\'t have time to give you detailed explanations and stuff -- either you go *very well prepared* or get thrown out in less than 5 mins. But if you can keep up with it, you\'ll get something out of it.\nWorkload:\n6 homeworks (theory + heavy duty Linux kernel hacking) with lowest hw grade dropped, midterm, final. No extra credit.','-1.399999999','6.600000061','cheating, breeze'),('WCOMS4118','Nieh, Jason','In my opinion, Prof Nieh lives in the unrealistic world where a day has 48 hours or more for a student. The work load is way too much and his lectures are absolutely useless when it comes to doing the programming assignments. He might be an intelligent guy but anybody can handle an operating systems course by repeating what is in the text book. I dont understand how this course has become so popular over the years. The regrading procedure is bureacratic crap and it makes life more miserable for the students who dont have the time to write down lengthy explanation as to why they require a regrading, as they are otherwise busy trying to complete the programming assignments. I believe there are easier more effective ways to learn Linux than trying to cramp it all in 2 and half months. I would never recommend this course to anyone.\nWorkload:\n5 best out of the 6 programming assignments, midterm and final','-2.699999996','3.300000019','useless, miserable, unrealistic'),('WCOMS4118','Nieh, Jason','Great teacher, definitely one of the best lecturers in Columbia CS department. This is a rough class, but any class that involes with operating systems is rough, there\'s no way out. Hacking the linux kernel will be the most frustrating thing you\'\'ll have ever done... but you\'ll get a lot out from this class, in terms of programming skills and systems knowledge in general. This class will also definitely help you to get a job if you are interested in doing IT as a lot of big firms are now hacking the linux kernel for their own benefit.\nOne warning: WATCH OUT FOR CHEATING FOR THIS CLASS, this class is notorious for cheating and THEY\'LL CATCH YOU!!!\nBut this is definitely a fruitful class, definitely one of the best CS classes i took at Columbia\nWorkload:\n6 Homework Assignments (Written and Programming)- The lowest grade assignment will be dropped.\nMidterm and Final','1.49999994','5.400000036','best, best, great'),('WCOMS4118','Sidorsky, David','First and last impression of Sidorsky: the man is exceptionally brilliant and very well read. It is not often that your professor has the ability to lecture and provide the insight that can only be provided given that they were present during the time frame of what they were teaching. His lectures got repetitive as he took a long time to get through material bc he was constantly reviewing and rehashing. His eyesight is less than stellar as he will ask for questions and miss the raised hand that is in the front row. He definately knows his material well and delivers it well. as the last reviewer stated, show up to class, some part of the grade is attendance and exams are entirely lecture note based.\nWorkload:\n1 midterm, 1 final. lenient grader, everyone basically makes a B or higher.','1.099999972','3.099999957','brilliant'),('WCOMS4118','Nieh, Jason','Prof. Nieh is a good professor. His lectures, although boring at times, are informative. My main quibble with this professor is the manner in which he interacts with his students. He has a real disdain for them. Be careful not to get on his bad side, or you will be subject to some of the most twisted, Gestapo-esque student-teacher interactions you have ever witnessed. Trust him less than he trusts you and you will do fine in the course.\nWorkload:\nCraziness. 5 out of 6 assignments, midterm and a final.','0.400000073','3.200000025',''),('WCOMS4118','Keromytis, Angelos','Professor Keromytis has excellent background in BSD security research. That is well and good, and I\'m certain he could simply make a class to teach everyone about the work he has done and the publications he has somehow managed to get his name scribbled on. However, he isn\'t really an Operating Systems professor. That is to say that he speaks from the book, and like other CS classes, you never have to show up and can read the material on your own if you so desire. Just work on the project and present it well at the demo and you\'ll land yourself an A. Also, he\'s really not such a people person. Interactions with students and the professor ranged from mild politeness to blatant rudeness, both in person and via email.\nWorkload:\nMidterm, final, 3-4 homework assignments, huge project (45% of grade)','0.500000052','3.300000004','excellent, rudeness'),('WCOMS4118','Nieh, Jason','A good lecturer who, unfortunately, seems to hold students in genuine contempt; it irritates him that we tend to insist on quality of education. No complaints on the lectures, and problem sets are ok, since they\'re book-based; it\'s the programming assignments that ruin the class. They\'re a true mass-nightmare, since students are given literally no preparation for them, and lectures have nothing to do with them. Honestly, with no way to learn how to do the project on your own, can he really be surprised that so many of his students cheat? The plus side is that if you work your ass off (and I mean work your *ass* off) and pay close attention, OS I will teach you two semesters worth of Linux and Unix OS mechanics. Unfortunately, if you have to take OS, there is really no other choice than Nieh. Either hold your breath and scrap together a B, or split up with your boyfriend/girlfriend and move into the lab... just be glad that not all teachers care so little about coddling you as Nieh does. Hopefully, you\'ll actually learn something in the process, as he knows the material inside-out. And if Linux is old Hat for you, you might possible find yourself enjoying the class. But not likely -- Nieh, like so many other cs profs, confuses a ridiculous \'sink-or-swim\' approach for academic rigor. He should wake up and face teaching like an adult; you should avoid him.','-1.600000039','4.40000011','contempt'),('WCOMS4444','Ross, Ken','As you can read on CULPA and the SEAS Oracle, students who have taken this course generally have lots of positive things to say about it, most of which are absolutely true.\nHowever, because the course places such a huge emphasis on collaboration and the interchange of ideas, what you get out of it varies greatly with the competence and creativity of your fellow classmates. For some reason, Prof. Ross seems convinced that the course \"self-selects\" smart people, that those enrolled in it are naturally highly critical/creative thinkers. This may have been true for past offerings of this course, but I did not find it to be the case when I took it.\nOut of 22 students, maybe 8 regularly produced creative, original ideas and could competently implement them. Most of the others were pretty average, while a few people were just plain dumb, lazy, or both. This may sound harsh, but when you find yourself teamed up with one or (gasp) two of these people and have to think through an inventive problem solution, code it, and write the final report all by yourself, you *will* feel your urge to kill rising. Also bear in mind that all members of a group receive the same grade, and there is no formal peer review process.\nI still recommend this course; it has several important merits that others have mentioned, and what you learn in it will stay relevant long after you forget the intricate details of distributed transactions or lambda calculus. If you put in the work, you will walk away content unless, like me, you don\'t suffer fools gladly. If you don\'t put in the work, you will still do relatively well at the expense of those who do.\nWorkload:\nUp to you. You are, of course, encouraged to put in an equitable amount of work, but there do not seem to be any serious repercussions for those who do not.','1.699999988','5.299999967','intricate'),('WCOMS4444','Ross, Ken','This is a spectacular class!\nIt\'s officially limited to 30, and there\'s a chance you\'ll have to compete somewhat for a spot in the class, but that\'s rare - my class had 23 or so people at the beginning, and ended up at 21 for the bulk of the term.\nUnlike most CS classes, Programming & Problem Solving is a discussion-based class. There are four projects across the term (each covering about 3 weeks). There are 5 discussion classes per problem (in which the class demos their latest solutions and discusses their approaches), and one class where each group presents their report.\nGroups are randomly determined, but you can request to work with particular students (but you can only work with each person on ONE project). The groundwork for the problem-solving has been done for you - the TA provides the class with a simulator program and the interface for your code to use, so you can dive in and typically write a simple/naive solution to the problem in twenty minutes or so, leaving you most of the project time to create and implement more complex solutions - there is almost no setup work.\nThe class works on full disclosure and full sharing - you can take any code you find online and use it, as long as you say you did, and you can rip off your classmates as much as you want, as long as you credit them for what you ripped off.\nOne of the great things about this class is that it brings you into a group of some of the best minds currently studying at the school. It will have you thinking differently about all sorts of problems. The other great thing about the class is how I always left the discussions wanting to work on the project - unlike most classes where the assignments are fairly arbitrary, you have a great deal of leeway in the deliverable, and typically you have something you want to try.\nI would recomend this class to anybody who feels comfortable with a discussion-\noriented problem-solving case study.\nAlso, I would reccomend Professor Ross\' databases course - he is an excellent professor.\nWorkload:\nIt really varies by both your group and how much work you want to put into the class. However, the more you put in, the more you get out. And you\'ll probably find you want to work more for this class than your other classes.','2.799999982','6.699999928','best, excellent, great'),('WCOMS4115','Edwards, Stephen','A word on Edwards. He would spend a good deal of time telling jokes that apparently he found funny. Humor can be a great teaching tool, but this isn\'t the Laugh Factory, it\'s a university. The topics covered in this course are difficult, and having to listen to the professor joke his way through his lectures is irritating and frustrating. As for his metaphors, I have heard people tripping out on drugs make more sense.\nIf you have no experience with functional programming do not take this course. Read up on lambda calculus and OCaml (which he has a huge hard-on for) before you even entertain the idea of taking this course with Edwards.\nWorkload:\nHuge project. Not too difficult midterm and final. A few individual programming assignments that if you do not know about functional programming you will not be able to do.','-0.499999978','3.500000022','great'),('WCOMS4115','Edwards, Stephen','I found Prof. Edward\'s sense of humor painfully annoying and his teaching rather scatter-brained. The topics he covers are all pretty interesting, though, and since the only other option for this class is Aho, I\'d definitely go with Edwards.\nBy far the most educational part of the class was the project in which we had to create and implement a programming language in OCaml. However, learning OCaml was a bitch and made my team yearn at times for Aho\'s section (you get to use Java). Also, Edwards didn\'t really ground us in the theory well enough for us to create our own compiler until about 3/4 of the way in to the semester, which made the end of the semester hellish.\nWorkload:\n1 large team programming project, 3 problem sets (4-8 questions), midterm, final','1.100000024','3.100000024',''),('WCOMS4115','Misra, Vishal','Overall a good class. Good programming assignments, some of the written hw questions can be vague. Class lectures were alright but were unfortunately scheduled to start at 9:10AM, so I missed most of them.\nExams were not problematic if you knew your stuff, which you would if you could do the homework.\nOn a side note, I was able to use this class to get quite a nice bit of experience doing multithreaded programming. That was pretty nice.\nWorkload:\n2-3 Programming Assignments (Time Consuming), 4-5 Written HW (easy enough), midterm, final','3.600000009','4.000000015','nice, nice'),('WCOMS4115','Aho, Alfred','In all, Professor Aho was a pretty interesting teacher who went over quite a bit of useful material in an ultimately fulfilling class. He is friendly and always willing to talk, and is very approachable during office hours. I would recommend him for CS4115.\nWorkload:\nTwo assignments, 1 Final Project, 1 Midterm, 1 Final. The Midterm was deadly, everything else was fine.','2.199999988','2.199999988',''),('WCOMS4115','Edwards, Stephen','I personally like his interesting sense of humor, but some find it annoying. As a transfer student, I feel he gave the other side of programming languages than my other class which was more theory-based -- one down side is that he doesn\'t know that much about the lambda calculus, which seems to be a big hole in somebody teaching programming languages.\nIn terms of teaching the material, lectures can be a bit scattered but always have great information. His homeworks and exams are more than fair as they are straight out of the lectures. If you are in his class, attending the lectures will make you do well in the class.\nWorkload:\nThe workload was overall about the same as some other programming classes like Networks with prof. Misra, but is definitely less work than OS','2.600000001','2.600000001','great'),('WCOMS4115','Edwards, Stephen','I don\'t know what to make of Edwards. I like the guy, and I\'m *pretty* sure he\'s a good professor. But I can\'t prove it.\nEdwards knows everything about language design; he\'s funny and relatively friendly. He keeps the lectures interesting, sort of -- but by the end of the term nobody went to class. For one thing, ONE annoying kid managed to ruin the whole term by asking ridiculously irrelevant questions every five seconds, and Edwards never really tried to shut him up. So the lectures kind of went to shit from that point on.\nBut! PLT is super-intense and is probably the first (well, maybe OS) 4000-level course that actually kicks your ass. Personally, I like this. You work in groups and design a language; if you\'re like us, you leave it until reading week and then just live in the CLIC lab for a few days. You can do it, but it\'s a bitch.\nAnyway, you\'re just choosing between Edwards and... what, Aho? for this class, so choose Edwards.\nWorkload:\nTwo homeworks, which tend to mirror the contents of the exam and final almost exactly. Exams are surprisingly hard compared to the rest of the coursework.\nThen you have to implement a programming language... for us, that ran about 30 hours lab time, plus a 40-page report (mostly source code).','0.099999979','4.800000004',''),('WCOMS4115','Aho, Alfred','If you are interested in programming languages or are required to take PLT to graduate, I would strongly encourage that you take this course with a different professor. In the beginning of the semester, you will think that Aho\'s lectures are pretty cool and engaging. Moreover, there is a sense that you are basking in glow of computer science rock-stardom (he is one of the co-authors of the famed \"Dragon Book\" text that you will be using for the class). But, after the first three or four weeks, we were often told to just look in the book to learn about any new concept. In fact, each new idea that was introduced was concluded with the words \"go look in the book.\" He gives affectations to being devoted to his students, and I remember going to office hours several times to ask about topics that weren\'t being elucidated particularly well by the book. Each time, he forgot my name, and at the end of the (short) conversation, his helpful response was -- guess what? -- \"go look in the book.\" This was irresponsible teaching, and he\'s able to get away with it because he is tenured and famed within his field. His teaching style would improve vastly if he could only say \"go look in the book\" in other ways, like \"refer to the book for more details\" or \"the book contains much more information on this topic\" or even \"read the book and it will explain this concept better than I can ever explain to you during this lecture.\" I took this class in Spring 2004, and I\'m sadly still bitter about this class. You will learn much from this course, but learning about compilers from this guy would be no better than, say, go looking in the book and reading about it on your own.\nWorkload:\nNo homeworks (!). There is a midterm (20% of final grade), a final (40%) and a semester-long project (40%). The project consists of a language whitepaper, a language design spec, a working implementation of your language, a presentation on how your language works, plus a final report and code print-out (expect it to be about 100+ pages at least). The final was exactly as long as the midterm (both were given during the regular 75-minute class period, and they had the same number of questions) yet it counts for twice as much. TAs were not helpful, but most likely they were overwhelemed with the sheer number of students. Pick your project partners wisely, as you\'re going to be stuck with them for the *entire* semester.','1.600000009','4.099999987','irresponsible, cool'),('WCOMS4115','Edwards, Stephen','PLT is a very dry subject, especially when taught using reams of slides. However, Prof. Edwards is very funny and made the class very interesting. He has a warped sense of humor and would spice up the lecture notes with hilarious pictures. Here are some of his famous lines: \"hangs like a criminal\", \"a lazy approach gets you out of infinite work\", \"Things are always in the last place you look. Of course they are! You always stop looking once you\'ve found it.\", \"Union is like a structure except its schizophrenic\", \"Symbol table is like a roach motel, you can checkin but you can never leave\", \"computer scientists are smart asses\", \"if thy arc offends thee\", etc. etc.\nOh, to my great delight Prof. Edwards would often preface a topic with \"this would make a great exam question...\". Take heed this advice!\nWorkload:\nHomeworks aren\'t too bad, exams are difficult (study!), and the group project is massive! For the project, get started early, meet weekly at least, use cvs, get the language design right, don\'t bite off more than you can chew! For the exam, make sure you know the basics, know the HW cold, pay attention to good test questions.','1.499999963','3.699999996','hilarious, great, great'),('WCOMS4115','Edwards, Stephen','I\'ll say this for Prof. Edwards: he made PLT way more interesting than it should have been. He is definitely one of the wittier professors in the CS department, so the lectures were engaging. But if you\'re planning on printing out slides before lecture, be warned: there are a lot of them (about 40 per class, on average). Plus, he really integrates his own research into the lectures, as opposed to just plugging it like other profs. Central to PLT is a group project in which you get together with three other people and implement a programming language of your own devising, which is possibly the most challenging and rewarding thing I have done as a CS major.\nWorkload:\nGroup language project, worth 40% of your grade - very manageable if you plan everything out from day one. Also, two throwaway problem sets and a cheet-sheet friendly midterm and final.','3.399999984','3.399999984','integrates, challenging'),('WCOMS4187','Bellovin, Steven','This course is fairly simple, and a good bet if you are trying to improve your GPA.\n4-5 fairly easy, (written + programming) assignments (50%) that will be as simple or as complex as you want them to be; however, putting in extra effort to write an extraordinary program will not fetch you extra credits.\nEasy mid-term (20%) and finals (30%) that contain only open-ended, \"open to interpretation\" questions. There are no right or wrong answers to most of the questions. You are supposed to integrate all your knowledge to answer the questions, but basically the answers are so downright simplistic (and amusing) that they might not strike you at all. That is, if you have a rough idea of what has been taught in the class, and use appropriate terms from the slides and suggested reading materials while answering, and mention that your answer assumes \"so-and-so\", you can hardly get it wrong.\nThe whole course is about applying common sense. I have to say that I didn\'t learn anything spectacular in this course. I goofed up in the midterms because I didn\'t apply \"enough\" common sense, and did very well in everything else. And I got an A- with a 92%, so that should say it all.\nWorkload:\nLow to medium.','-0.700000003','2.700000003',''),('WCOMS4187','Bellovin, Steven','Professor Bellovin is an engaging and well-prepared lecturer. He\'s got a good sense of humor, he can draw you in to the material, and when he does he explains it very clearly. Of course, the material is intrinsically interesting, varied and with a strong focus on real-world security incidents.\nI\'d recommend the course, but there are some caveats. There\'s no single textbook and the readings, while usually interesting, vary greatly in terms of how thoroughly they cover their subjects. On top of that, while lecture notes are posted online, they usually provide only a broad outline of what Bellovin says in class, so it can be hard to find reference material for homeworks or for studying if you missed a class or didn\'t take good notes.\nAlso, Bellovin appears to be something of a big shot in the computer security world outside of academia (eg., helped write Usenet back in the day, won the 2007 NIST / NASA security award). This is kind of cool, but involves him missing a relatively large number of classes to travel to conferences and so on. When he\'s gone, classes are taught by the TA, and at least in our case, the TA was a non-native English speaker and a bad lecturer.\nWorkload:\n4 homeworks, which make up 50% of the grade, plus a midterm and a final. The midterm and the final are relatively easy if you\'ve gone to a reasonable number of the lectures and done a reasonable amount of the reading; the questions are straightforward. Each homework has a written part and a programming part. The homeworks are moderately difficult and time-consuming, about the average for a Columbia comp sci class, but are graded particularly harshly. There is also a tough lateness policy, and no freebies / dropping lowest grade / etc. If the class is curved, it doesn\'t change much.','3.799999975','4.999999978','cool, studying'),('WCOMS4706','Hirschberg, Julia','Awesome. Her and Professor Gross are my favorite professors.\nHer classroom delivery is fantastic. Slides were lacking in content but she more than made up for it.\nIf you attend class you\'ll be perfectly fine. Notes don\'t really convey audible concepts well so it helps to hear them in person. I think you\'d get pretty lost if you didn\'t attend regularly. At least skim through the assigned readings, I found actually reading them to be unnecessary. Just getting the gist of it or reading the abstract is usually ok.\nThe lectures are the theory, the homework is the implementation, which makes it sometimes necessary to visit the TA to find out how to do it.\nWorkload:\nHomework (biweekly) was very, very light, and interesting. The subjects were scattered and sometimes disconnected from the lectures and you may need to go to the TA to figure out exactly what\'s going on in the assignment, but once you do, each takes less than 2 hours.\nWe didn\'t have a midterm, and the final project was 3 3-page scientific papers analyzing various topics in the readings (don\'t worry, you don\'t have to read all of the readings).\nGrading was average.','3.500000022','5.300000049','awesome, fantastic, perfectly'),('WCOMS4995','Arabshian, Knarig','From my course evaluation:\nI am sorry to say, but this course was a waste of time and money. The professor began the semester hiding behind a desk, and it only got worse from there.\nAs more and more people stopped coming, she seemed to lose more and more of her confidence.\nThe midterm was a disaster, much too long and needlessly picky on syntax. Certain things are done best by computers, so what is the point of having them on an exam other than to be able to ascribe a grade at the end?\nFollowing the midterm, the professor basically lectured (read \'read straight from the slides, which were straight out of the book\') directly to the computer, only raising her head to bury it in the textbook or to look at the blackboard. Not to say that she didn\'t respond to questions, but half the class could have disappeared and she wouldn\'t have noticed.\nOverall, the course seemed to be more about teaching things that could be easily tested, rather than understanding concepts in depth.\nThis is not a teacher who should be returning next semester.\nWorkload:\nNot too intense, but a lot of self teaching, as the lectures were largely inadequate.','-3.300000019','5.300000042','best, worse, waste'),('WCOMS4995','Yee, Bernard','Either you love Bernie or you hate him. You\'ll get a lot out of the class if you\'re self-motivated, willing to put in a LOT of work, and have a thick skin. If not, then you probably shouldn\'t take the class. Bernie will rip your game to shreds and show you all the problems with and holes in your design. That said, the class is great for those who are excited about designing and building a game with only a little outside direction. (Keep in mind that it doesn\'t have to be a *video* game. It can be a board game, a card game, or any other kind of game you can design. No coding experience or knowledge required!) I would strongly recommend this class, but not to the faint of heart.\nWorkload:\na lot of written work (which was never graded or returned to us...), a semester long project (your game...)','1.200000003','4.800000057','great, love, excited'),('WCOMS4995','Yee, Bernard','A semi-retired game designer with a cult of personality. Kind of a jerk, but sometimes effective. You\'ll know on the first day whether you want to stay in the class, because it\'s sort of a big arrogant meritocracy. Highs and lows.\nWorkload:\nA lot of written work, most of which isn\'t very productive. Also you have to code a video game from scratch; that takes just an eensy bit of time.','-0.99999997','1.799999982','arrogant'),('WCOMS4995','Schulzrinne, Henning','I agree with the previous reviewer. Stay way clear of this class unless they change the layout of it severly.\nThe lectures were just student presentations of different more or less interesting subjects. It was supposed to be seminar style but since no one had a good VoIP background the presentations (including mine) were naturally shallow and buzz word centric.\nThe labs (30%) were enormously time-consuming and not very rewarding. My group had hands on experience with setting up VoIP servers before, otherwise I would had been completely screwed. The presentations were alright but harshly graded. The projects were rather vague and too wide in scope and in my opinion most of the groups did not produce anything of substantial value.\nEven though this was the class that caused me the most stress and took almost as much time as OS I still got a rather lousy grade compare to other classes. This class gave me almost nothing. I still don\'t know how VoIP works :-)\nWorkload:\nThe labs took way to much time without giving much back. There were no proper instructions and even though the TA was very helpful it still did not work very well.\nI would have thought that we would just play around with VoIP equipment but it was more an exercice in testing 12 different features on say 4 different phones and over UDP and TCP rendering 12x4x4x2 cases to implement and test.','-3.700000048','5.100000024','lousy'),('WCOMS4995','Schulzrinne, Henning','Steer clear of this course. It is supposed to be a research course, but except for the project (40%), everything else is a lot of manual (I\'d prefer the word \'menial\') labor that comes to nothing. Schulzrinne is probably a brilliant professor, but this course is the worst I have ever taken in my whole life, and this course is also the worst mistake I made in Columbia.\nAs it seemed to me, there is nothing worthwhile taught in the class, the TA was not very useful if you went up to him with problems, the labs (3, 30%) were long and monotonous that didn\'t teach you anything about how VoIP really worked, 2 presentations (30%) that is supposed to make you research the topics and give a talk on (but everybody just makes short work of it).\nThe project can be really meaningful if you choose a good topic, but make sure you either do it alone or get a partner who is sincere about the work and is not looking for a free ride. The TA was not very helpful in resolving either technical or interpersonal problems. You might get a mentor in one of the professor\'s PhD students, but remember that you might not get a lot of help unless you put it yourself. Everyone I went to talked in arcane terms that they expected you to know, but you wouldn\'t know anything about them unless you have prior background in that field.\nAnd compared to the fact that it has a 40% weightage, the professor does expect a little more than that. If you do take this course, brace yourself for some boring moments in the semester, and do not take up a project that would require you to write a lot of code from scratch. No one seemed to care that writing original, running source code for a nascent idea wasn\'t trivial (that was what my project was about, and unfortunately I had a partner who thought his job was only to supervise).\nI wouldn\'t recommend this to anyone, but to each his own.\nWorkload:\nAverage to a little high, but only in quantity and not quality.','-5.800000034','6.000000037','worst, worst, brilliant'),('WCOMS4170','Feiner, Steven','The class is very well organized but the lectures are really boring. The assignments in this course are all based on Flash Builder with 3 assignments(2 individual) and a final project. The theory exams are totally theoritical. If you have a really good memory, you can do very well in the exam. Just read everything from the textbook as well as his slides thoroughly, as questions can come from anything: Be it a single line mentioned in the slide or rather a random paragraph from the tetxtbook.\nWorkload:\nEasy course. Not too time demanding!','0.900000013','1.500000037',''),('WCOMS4170','Feiner, Steven','This class is great for someone that is planning to go into UI research. For everyone else, not so much. It should actually be called \"The History of User Interface Analysis and Research.\" Feiner spent many of the lectures describing, in laborious detail, research projects and ideas from 15 to 30 years ago.\nAs the review before mine points out, the tests are sadistic. Unless you have a photographic memory, you are not going to do well. The midterm\'s questions were based on less than 1% of what was covered in the lectures, textbook, and articles he asked us to read. For example, 20% of the test was based on one random paragraph from one of the many articles. Another 20% was based on a topic he spent literally 5 minutes talking about during a lecture. Why is this a bad idea? It rewards students that have better memories or, to a lesser degree, that happen to get lucky because they studied the 1% of material that shows up on the tests. Studying for Feiner\'s tests is essentially a game of roulette, but with much a lesser chance of success.\nOh yeah, and Flash Builder 4 is terrible.\nWorkload:\n2 individual assignments and 2 group projects. Time consuming, but not particularly hard.\nSadistic midterm and final.','-1.700000033','5.300000057','terrible, great, feiner'),('WCOMS4170','Feiner, Steven','I would not say that Prof. Feiner has a harmonious relationship with teaching, but it\'s hard to be more specific than that. He is careful to be organized and to cover material on schedule; yet he obviously hasn\'t edited the material he teaches in years - it\'s old and mostly irrelevant, although the final 3 weeks of class finally had some traction. He tries to be a good guy (I guess) by telling you how to prepare for exams and then says \"do all the [voluminous, outdated] reading and review your class notes,\" as though that\'s helpful -- and then asks a couple of questions on the exams that are calculated to punish all but those who memorized the course material. 40% of the midterm, for example, was based on a topic covered by 3 pages in the text and a couple of his slides -- all of which seems faintly sadistic. The individual HW\'s were interesting; there could have been more of them. The team projects, as always, were an aggravating waste of time. I think that if, as a start, Feiner updated 60% of his course material and learned how to relax, both his and his students\' attitudes would improve.\nWorkload:\nNot bad unless you consider reading hundreds of pages of 20-30 year old ACM articles a waste of time.','-0.799999952','4','feiner, feiner, relax'),('WCOMS4170','Feiner, Steven','A word of caution. Feiner seems to have a predanatural power to remember faces. His class will bore you to tears, so few people show up. However he still knows who people are, and for those that are on this floor a lot (CEPSR 6), this is a big problem. I mean either that or scowling glares are the norm in his lab.\nPS: The material covered is common sense. Any basic design class (in any field) will teach you everything this class does (and then some). The biggest problem with way this class is presented is that there are 200 billion different rules and guidelines, which all together sound like superstitious drivel. The field has few (important) pricinples, all of which are presented in the first week. The rest is a waste of time.\nWorkload:\na few nights worth of coding. Really, really unpleasant coding.','-0.699999921','3.699999996','drivel, feiner, waste'),('WCOMS4170','Feiner, Steven','I mostly agree with what\'s been said by earlier reviewers, but wanted to point out some ways in which the class was different in the fall of \'03 compared to earlier years:\nProfessor Feiner makes extensive use of powerpoint nowadays, as well as videos, some overhead slides, etc. The powerpoint slides aren\'t especially comprehensible in isolation, though; when reviewing for the midterm, have the notes in one window and google open in another to look up terms that aren\'t explained directly on the slides.\nApart from that, I don\'t feel like I really learned the vocabulary and concerns of interface designers working in industry; the class focused more on academic UI research, past and present. I plan to redress this by doing a fair amount of independent reading this term.\nWorkload:\nI found the programming workload for the course to be staggering. Part of this can be attributed to the lack of written problem sets or assignments that were strictly design assignments; for all four we had to handle design _and_ implementation. The first three assignments built on each other (though the final project was unrelated), but assignments 2 and 3 both required significant reworkings of and extensions to what came before. I don\'t think that an advanced undergraduate course should require its students to produce more than 2000 original lines of code or so, and I wrote much, much more than that.','1.400000036','2.200000048','feiner'),('WCOMS4170','Feiner, Steven','Since you really have to take Feiner if you want to ever take UID, you need to just ignore his poor ability as an instructor; just use this opportunity to read a lot of textbook material and research papers in this field. It is a field that is completely ignored in ALL other classes, and it is quite important. Unlike most courses in the department it actually practical and applicable to anything you\'ll ever program. I do agree with all previous (bad) reviews. However, the problem with the allegedly harsh grading of the homework is that most of the grade is not based on functionality. Your program may follow all specs, but still get a C. It is the USER INTERFACE that gets you most of the credit. And you can only start thinking of user interface AFTER you completed all specs, which is usually around 5am the night before it is due. And that is truely a big problem with this class. But as you know from the previous reviews, you get some penalty-free late days to use on any combination of the first 3 (!!!)assignments. Another major problem is that there is a lot of reading, and it is all asked about in the midterm and final. As a rule of thumb, if there is a formula of some sort in any of the papers, it will appear eventually on a test. You will probably have to state it and explain it. Nothing too fancy, but you do need to memorize a bunch of them like it\'s a high-school history test. Not the end of the world, though.\nIt is true, this class feels more like a Humanities class that a regular CS class. You have to read a lot papers, and there are never problem sets (only programming projects with minor explanations of \"why did you choose the interface that you did\"). It is, though, not the hardest class you have taken or will take in the department, and it opens a window to a very neglected (and again, practical) area of compters. Lets face it, in the real world, your boss/client is much more likely to care about the interface of your program. And like in this class, they are going to take the functionality as a given.\nWorkload:\nNever in groups . 3 programming assignments, a final programming projet + a demo (ALL graded for user iterface rather than for functionality), a midterm, and a comprehensive final. Also, A LOT of reading. While the book can be somewhat skimmed, you do need to know the major concepts of every chapter. As a rule of thumb, after reading every chapter ask yourself 5 feasible questions he can ask. It\'s pretty obvious. There is no way around reading all research papers, and don\'t fool yourself you will have enough time to read even a quarter of them during finals. However, like in every class like this, nobody has time to do all the reading and there\'s a curve. The midterm and final consist only of essay questions. The trick is that if you understand the general theory (mostly from the book) and use \"the UID language,\" you can totally b/s and get some partial credit on occasion. Finer travels a lot, so there are many occasions that there is a gust lecture, some of them really cool.','1.500000015','7.300000086','allegedly, ignored, feiner'),('WCOMS4170','Feiner, Steven','I will admit that his lecturing style is pretty bad. But he does make time for his students in office hours, and looks like he genuinly wants to talk to you. You meet with him once, and he will remember your name. So that is one good part of this professor that shoudl be remembered. Workload in the class is not that bad.','0.999999955','2.200000003',''),('WCOMS4170','Feiner, Steven','Never in my life have I seen a professor hold so much contempt and disdain for his students. Feiner\'s lectures are flat out boring and . He has you read one or two of around 25 long research papers, and then just stands in a corner and writes sloppily on an overhead projector while discussing it. He is impossible to approach, because he seems to believe that students (and their questions) are below him. The three homework assignments here were not hard (about 15 hours each, roughly), but the final project was tough only because of the demo. Doing a demo with Feiner is basically him apathetically saying \"mm hm\" every two seconds to your explanation, and then bringing up every bad aspect of your program to you that he can find in the 5 minute span and grilling you on it. Tests are tough, too. Feiner holds you responsible for those research papers on his tests, which are entirely essay form. The bottom line: unless you enjoy reading insane amounts of research papers, steer clear of Feiner.\nWorkload:\nThree homework projects (not hard), one final project with demo (hard only because of Feiner\'s demo practices), midterm and final, based on an unbelievable amount of REQUIRED reading','-3.400000006','4.00000003','feiner, feiner, sloppily'),('WCOMS4170','Feiner, Steven','Why does this Prof. even bother to teach, it\'s so obvious that he hates it and has contempt for students. There is too much reading for the class, as in addition to the textbook (not bad) he assigns copious amounts of PHD disertations that are total BS. The subject is interesting, but he berates his TAs and they then grade the projects harshly.\nWorkload:\n3 2 week programming assignment, 1 3 week final programming projcet, midterm,final','-2.099999979','2.099999979','contempt'),('WCOMS4170','Feiner, Steven','User Interfaces contains useful, if somewhat obvious, material. He basically follows the book without adding a huge amount. He has a fair lateness policy, but seems unable to deviate from it when student\'s circumstances require it (i.e. sickness).','0.699999973','1.499999985',''),('WCSEE4119','Yemini, Yechiam','Nice guy, ABSOLUTELY THE WORST PROFESSOR I\'VE HAD AT COLUMBIA.\nLectures are extremely dry. He talks in a slow mumble that is impossible to hear. Youmust constantly ask him to speak up where he usually replies \"I\'ll try but I have a soft voice.\"\nExams are ok if you can manage to get something out of his lectures.\nOk here\'s the biggie, HOMEWORK ASSIGNMENTS ARE CRYPTIC\nWritten homework assignments usually contain material that he sneaks in his lectures in the last 5 minutes. His assignments are unclear and leave you dumbfounded as to what you are supposed to produce, usually a very lengthy Q/A on his website follows with frustrated students probing explanations as to what the assignment actually means.\nProgramming assignments are impossible unless you are not taking any other classes and have done extensive network programming before. Yechiam Yemini does not go so far as to talk about programming in class. EVER. Unless you\'ve already done it you don\'t have a shot at the programming assignments, which are just as cryptic as the written assignments. Also be ready to drop some cash on a CLIC account if you don\'t have one, all assignments are submitted via virtual machines on CLIC. Deadlines are also very short, usually about 10 days for extremely high involvement work\nI really wanted to like this class, the topic is important and the class deserves a better professor. Wait for Dan Rubenstein or someone else to teach it before you take it.\nWriting this review is making me physically upset.\nOther than that, he seems like a really nice guy and I don\'t think he means to cause heartache. The poor sucker just can\'t teach (or talk loudly for that matter) and makes everything harder than it needs to be.\nWorkload:\n3-4 written assignments, 2-3 programming assignment, midterm and final. The exams are fine but the homework makes this class absolutely frustrating\nOh yea I need to clarify. He does not write is own exams (thankfully). The midterm he gave was a Rubenstein test. Yemini admitted to it and Rubenstein\'s name was on the test.','-5.400000013','6.999999993','worst, nice, nice'),('WCSEE4119','Rubenstein, Daniel','Rubenstein definitely takes these reviews seriously, and has improved dramatically. Don\'t worry about his old, negative culpa reviews, because the he is nothing like that. He is one of the best professors I have had at Columbia in CS. After having taken both Fundamentals and Networks with him, I highly recommend him.\nHis lectures are spread between writing on the board and going over lecture slides that the textbook made. Both are pretty good, but when he writes on the board, he can go really fast. If you don\'t want to fall behind in class when he\'s writing on the board, don\'t copy everything down (though I did, and I often got lost). Listen though and ask questions. The textbook might serve as a good resource. I referred to it several times, but you could probably get away with just using Wikipedia. There\'s no assigned reading but he does cover nearly everything in the textbook (and more).\nHomeworks are reasonable. The first two programs are the hardest, but after that they just get easier (and even easier still). Do yourself a favor and do them in Java, trying to do the noble thing and programming in C just won\'t cut it. The first program will take 40+ hours in C, or 10 hours in Java. Your choice. You have plenty of time for the programs. The separate theory homeworks are assigned with only 1 week to do them (sometimes concurrently with the programs), so if you don\'t start early they can be tough.\nHis tests and theory problems work the same way. You learn the basic concepts in the class. Then you\'re asked questions that rearrange problems to something you\'ve never seen before and are something that was covered in class. The only way you can do well is if you have a strong understanding of the material (obviously).\nHe is a fair/generous grader and a nice guy if you go to his office hours. Listen, ask questions in class, start the programs relatively early (and do them in Java!), know the concepts and you\'ll do fine. Usually the class has a low average too.\nDo take this course even if it\'s not required for your track. Unlike some CS classes, the material is actually interesting and relevant to so many things. No abstract theoretical stuff that you can\'t relate to anything. All in all, an excellent course and excellent professor.\nWorkload:\n4 programs (they get easier as the semester progresses)\n4 theory assignments (some easier than others)\n1 midterm (too long)\n1 final (reasonable, though tricky)','5.59999992','11.20000002','best, excellent, excellent'),('WCSEE4119','Zussman, Gil','Prof Zussman is a very smart professor with a lot of background in Networking. His lectures are very well planned (granted the slides are from the publisher). The lectures are good if you are at all interesting in networking and general informative.\nThe lectures are planned so well that any student asking a more advanced question or trying to correct the professor is faced with a sharp reply from the professor.\nThe book does a good job of giving a implementation and high level view of networking, but that is not enough for this course. Gil likes to bring his research of statistics into the classroom and sometimes supplements the book for his slides he created while at MIT. They are full of statistics and other advanced topics which are asked on most of the homeworks.\nThe statistics which are briefly discussed in class are a large portion of the homework and exams.\nThe programming assignments were time consuming, but pretty simple if you have used threads and sockets before. You can use C or JAVA.\nWorkload:\nAssignments: 6-7 written homework assignments\n2 mid-sized programming assignments\nMid Term : 75 min. during class hours, calculator and one sided letter paper with notes allowed.\nFinal: Dec. 21, 9AM, 180 minutes, calculator and one sided letter paper with notes allowed, comprehensive.\nMethod of Evaluation\nAssignments 30%\nMidterm 25%\nFinal 45%','4.600000069','4.600000069',''),('WCSEE4119','Rubenstein, Daniel','Prof. Rubenstein is really nice person. He tries to make everything clear to you and put lot of emphasis on concepts. He prefers to write everything on board rather than using slides. His way of teaching may or may not be preferred by students. Its depend on students. Like many students including me were comfortable with board. Prof. Dan tries hard to make you fundamental clear and theoretically sound. If you attend his lecture regularly, understanding concepts of CN will not be problem for you.\nThe only thing that was that not much time was spent on practical and programming. You yourself has to learn socket programming. If you are doing it first time then it may take some time.\nOverall a very good class. You will really learn a lot especially if you are new or little knowledge about Networks.\nWorkload:\nWorkload is average. 4 Programming assignment and 4 written + one midterm and one final. Midterm and finals together make 70% of grade. So do them properly!','4.599999972','5.399999984','nice'),('WCSEE4119','Rubenstein, Daniel','Professor Rubenstein tries to do a good job, but in the end his attempt at teaching networking is not very good. There are a few ways he can improve this class.\nFirst of all, he teaches the class from a very theoretical point of view. Considering this course is described as an 芒鈧揑ntroduction to computer networks,芒鈧?he needs to focus less on the theory. The theory he teaches is excessive to the point that it芒鈧劉s hard for me to follow how the theory relates to networking in real life. I don芒鈧劉t have a problem with theory, but first I芒鈧劉d like to learn something practical so that I know how to apply the theory.\nProf. Rubenstein clearly states that he does not follow the book. I understand that many professors do not follow the book because they need to present material that relates more closely to the course. Unfortunately, in this situation, it芒鈧劉s a big mistake. Based on the course description, the material in the book is better than what Prof. Rubenstein teaches.\nCompared to other classes, Prof. Rubenstein also puts a lot of weight on the mid-term and final. Based on the amount of effort I芒鈧劉ve had to put in to the homework and programming assignments, I think the assignments should be a larger factor in the overall grade. He barely teaches anything in class on how to do the programming assignments. This leaves students with a lot of work although it only counts for a small portion of the grade.\nI would芒鈧劉ve liked to learn about networking in this class, but unfortunately it looks like all I芒鈧劉ve learned is strange theory that I have no idea how to apply to real life. I think Prof. Rubenstein could do a decent job teaching the course if he would just read the course description one more time and realize that he doesn芒鈧劉t need to teach anything other than what芒鈧劉s presented in the textbook. Save the theory for a different class, don芒鈧劉t give it to us in the introduction to networks class.','-2.000000022','6.600000106',''),('WCSEE4119','Baset, Salman','Network Lab sucks, but it doesn\'t totally suck. Baset\'s lectures are beyond worthless (he\'s barely audible and doesn\'t cover relevant material), and the labs are EXTREMELY frustrating and repetitive. But you do learn some actual skills... I\'m legitimately smarter for having taken this class.\nBut it ate up my time and gave me an ulcer from doing endless, monotonous network tasks. It\'s sort of like being a real-life network person. Ow, my stomach.\nYou can do a final project instead of taking a final exam, which isn\'t a bad idea, although the projects are really poorly stated and vague, and we found his expectations had changed a lot from the terse description he\'d given us. Still, it was tolerable.\nWorkload:\nTen labs, with quick prelabs and LONG group reports (a lot of ours were 60+ pages; although a lot was debug output, it was still a ton of writing; even trading them off, they ate up lots of time. A few brief homework assignments thrown in now and then.','0.200000033','4.800000057','sucks, worthless, poorly'),('WCSEE4119','Misra, Vishal','Like swimming through Jello. Bad lectures, good programming assignments, bad written homeworks, unbelievable exams.\nIt\'s not that the exams were hard. They were open book. But even if you knew ALL the material, you couldn\'t really do well on the exams. Or the written homeworks. I don\'t think anyone knew the right answers, because the questions were vague and were graded vaguely to boot.\nWorkload:\nFair: Three reasonable-difficulty programming assignments, five short written assignments, open book exams.','-1.400000028','2.600000031',''),('WCSEE4119','Rubenstein, Daniel','First of all, Rubenstein is a little insecure. At least that\'s the first impression he gave to me, and I write this knowing full well that he\'s going to read this review. In the introductory lecture, he spent a full five minutes explaining why the reviews of him that were posted on CULPA are unfair.\nWhile I\'ve heard professors respond to CULPA reviews before, I\'ve never seen anyone get so defensive about one.\nIt leaves you with the impression that he feels like he\'s got something to prove, which is unfortunate since he\'s not a bad teacher.\nUnfortunately, for all the time he spent preparing his defense of his CULPA reviews, he never really seemed to spend enough time preparing to teach the course. The fact that he doesn\'t like any of the books out there isn\'t by itself a problem, but he needs to understand that there are people who like to be able to use books as a reference, to supplement lectures. The fact that he didn\'t decide whether to teach the course top down or bottom up until the second lecture meant that he couldn\'t recommend a book that covers the material in the same order that he would. This meant that those of us who tried to use the book he suggested to help with the early material were stuck with references to things that wouldn\'t be covered until the end of the course. How difficult would it have been for him to take the time to make that decision just a few days earlier so that he could suggest a book that could complement his lectures?\nLikewise, despite requests from several students, he never produced any kind of schedule for the course. No one had any way of knowing what would be covered, when it would be covered, or when the assignments would be due. This was especially problematic around midterms, when people are trying to budget their time, and Rubenstein decided to give out the information pertinent to assignments at the very last minute.\nI don\'t have a problem with teaching networks from a theoretical perspective, but I wish he spent more time talking about networks early on and less time trying to justify his decision to teach the way he does. Furthermore, everyone in the class has already taken a stats course of some sort, since it\'s a prerequisite for the course. It really wasn\'t necessary to spend 3 lectures early on explaining about expected value, especially since there was no schedule that people who already understood stats could refer to so that they could skip the redundant sessions.\nThe assignments were the kicker. He\'s certainly not the first CS professor I\'ve had who\'s extremely rigid about assignment deadlines, but usually the ones who are that rigid are obsessive compulsive about posting the assignments well in advance and making sure that the project specification is detailed enough to avoid problems. Instead, Rubenstein would give out assignments usually a day or three after he promised, only to have to go through several rounds of revisions to account for mutually contradictory requirements within the project. It\'s not that the assignments are bad, just that he doesn\'t seem to take enough prep time to really set them up properly ahead of time.\nAs for his exams, he takes great pride in making them hard, which is certainly his right. The trick is to understand that he\'d always rather ask a question designed to trick people than directly test their understanding of the underlying concepts. While it\'s useful to understand the concepts, you need to go into his exams trying to find the places where he\'s trying to trip you up. Unfortunately, this means that performance on the tests is at least as much about your ability to outsmart Rubenstein as it is about whether or not you\'re learning about computer networks.\nAll told, don\'t go out of your way to take any classes with him. He\'s not bad at standing in front of a room and explaining things, but he seems thoroughly uninterested in spending sufficient time preparing to teach. As for the theoretical angle he likes to take, it\'s not as bad as the other review would indicate, I just wish he hadn\'t wasted everyone\'s time with remedial stats in order to do it.\nWorkload:\nRegular problem sets. Not so regular programming assignments. Don\'t get going too early on the assignments, since he\'ll change them. Midterm and final, designed to trick you.','-5.600000039','10.10000014','uninterested, great'),('WCSEE4119','Rubenstein, Daniel','My biggest disappointment with this class was how dry and uninteresting he made networking. This modern, dynamic, complex topic that is fascinating to me in all other contexts was presented so that his students will assume they are bad at it, and will shy away from it for the rest of their career.\nThe best analogy I can think of is, it was like we were starving and all decided to try sushi for the first time. When we arrived, instead of bringing us delicious sushi, we were brought a dead fish that we had to dissect using our hands, all the while being criticized by the sushi chef for our poor technique. We all left slightly sick to our stomachs and unlikely to try out sushi again anytime soon.\nYou won\'t get any big pictures here. You won\'t learn about any actual protocols in use today. You won\'t hear any of the vocabulary everyone else in the industry uses to describe network phenomena. But on the upside, you will use all of that probability and discrete math that you thought had no real-world application.\nHe says that he doesn\'t concentrate on details (usually after he\'s just been called out for getting them incorrect), but every concept we discuss is presented as a mathematical proof. This means that you will leave his class not knowing how to use the word \"bandwidth\", but you will be able to draw the min-max fluid model of traffic flow.\nBottom line: unless you\'re an EE major, don\'t take this class. If you absolutely have to, at the very least, don\'t assume that this is all there is to networking. Promise me you\'ll give it another try some other time.\nWorkload:\nHe loves curves! The average for homeworks and tests were 15-45%. The final grade is also influenced by how hard he thinks you worked.\nAbout four programming assignments and four written assignments. The hardest part about the programming assignments is figuring out what he wants you to do -- note that what you think is unlikely to match up with what the T.A.s think. The written assignments are taken directly from his EE courses.\nMidterm had an average of 40%. I don\'t know about the final. Both were impossibly hard.','-1.599999949','6.399999961','delicious, best, incorrect'),('WCSEE4119','Yemini, Yechiam','I liked Professor Yemini a lot, and I feel like I learned a lot in his class. He clearly has a great depth of knowledge in the field, his digressions are good, and he\'s very personable and approachable.\nSome things to be prepared for, though:\n* His lecturing style is very dry, delivered in a low rumble. I was really interested in the material and was able to look past this to some extent, but it was sometimes hard to keep my mind from wandering. It also meant that much of the class wasn\'t all that strongly engaged, which de-energized the room.\n* The lectures were fairly applicable to the exams, but weren\'t all that helpful for the homework assignments. This, in combination with their dryness, plus the online availibility of lecture notes, is probably what caused most of the class to stop going to lecture starting about 1/3 of the way through the semester. This de-energized the classroom further.\n* Professor Yemini tries to make the initial assignments harder and the assignments later in the semester easier; his feeling is most C.S. classes operate in the opposite manner, and it\'s nice to counterbalance that. This isn\'t a bad philosophy.\n* There\'s a definite effort to make the homework assignments and the exam questions non-cliched and interesting. The results of this are a bit hit-and-miss, though. In the first programming assignment, for example, it was very difficult to divine what the project was supposed to do based on the specification. Others in the class spent hours upon hours spinning their wheels until they understood; I settled for a lower grade on that assignment. The second programming assignment, an RMI MUD server (with a reasonably constrained world-state to keep track of), in contrast, was a lot more fun.\nWorkload:\n2 programming assignments, 3-4 non-programming assignments, an open-book, open-notes midterm, and a similarly open final. The midterm in particular it\'s best to study for as if the exam isn\'t open-book, though, as you won\'t have much time to look things up.','2.000000022','6.400000118','great, fun, nice'),('WCSEE4119','Yemini, Yechiam','He can be a little dry, but this guy is one of the nicest professors I have come across. If you go to his office hours, he\'s really interested in helping you, and listens to your feedback. The workload is manageable.','1.899999976','1.899999976','nicest'),('WCSEE4119','Yemini, Yechiam','one of the most important and well tought courses in the computer science department. yemini blends a tremendous body of knowledge and experience with a visiion that is always looking at whats ahead. he\'s going to make you work. however, unlike the typical theoretical only courses within the c.s. department, what you learn is going to be re-usable for a good time to come. in various positions, i\'ve had to troubleshoot tcp/ip issues and create entire fault tolerant network protocols. this course was the basis of a career\nWorkload:\nfirst project is heavy duty. project complexity wanes over time.','1.599999979','3.200000003',''),('WCSEE4119','Yemini, Yechiam','Yemini has been at Columbia for a while and it shows -- boring lectures. Most people are used to his accent by the sixth week of classes, or so. It looks like he\'s ready to burst into full mid-life crisis any day now, so buyer beware. About the texts: they\'re about $300 total, but only the Stevens Unix text is essential, the others are mostly helpful for exams. Programming assignments are challenging but do-able. Programming teams are formed at random, so start scheming, or bring your rabbit\'s feet.','0.400000006','1.800000042','challenging'),('ECOMS6261','Malkin, Tal','This course is definitely a heavy theory course. The lectures were fairly long, but definitely well done; Professor Malkin is an excellent lecturer. She doesn\'t use PowerPoint, which I personally consider a plus, though it means that you can\'t skip lectures if you expect to learn something from them.\nWorkload:\nThe workload ended up consisting of writing a research paper. It couldn\'t just be a literature survey; it had to include original work, or analysis of a research field, or somesuch. I thought this was good -- it allowed us to take concepts introduced in the lectures and use them (or not use them) in our own work as we saw fit.','0.799999975','1.199999981','excellent'),('WCOMS4111','Gravano, Luis','Professor Gravano is tied for my favorite computer science professor. He generally follows quality texts in his lectures and easily outperforms them in terms of the ease with which the material is presented. His homeworks and exams are reasonably challenging but also completely fair -- don\'t worry if you get a 60% on an exam because it will come out in the curve.\nFurthermore, he always knows what he\'s talking about (more than some professors) as a result of an expansive knowledge of all aspects of databases thus far. Now that I have gotten to know him better, it seems this stems from a more passionate interest in the subject than I\'ve seen with others in their respective fields and it leads to a genuine desire to help students really master the material.\nI would definitely recommend taking the 6111 course if 4111 was at all interesting.\nWorkload:\nReasonable workload, but group projects are easily do-\nable on one\'s own. Homeworks can be tricky and are a fair extension of concepts in class. Exams are generally pretty difficult, but it shows in the curve.','4.599999964','4.599999964','ease, challenging'),('ECOMS6181','Schulzrinne, Henning','The AIS course is one of the most intensive courses. People grumble to high heaven about this class. Fact is, this course has 2 major parts. One is the theory about multimedia on the Internet. This stuff is all bleeding edge - so be prepared to google, read RFCs and chase down details. The second part is the programming part. You **have** to be very good in programming - particularly in threads, locking, networking ... all that low level stuff. You **will not** learn that here, rather the projects will expose you to them. The projects all build up to a software radio, which is a really cool thing to build. (Interviewers are really impressed to hear about this.) And you will become a battle hardened programmer at the end of it all. If you have not done this kind of programming before, then be prepared to spend 10-20 hours a week in the lab. It will be worth it.\nProf Schulzrinne is really into his stuff. He knows it inside out. Okay his lectures are not that detailed. But he is amazingly responsive via email (I got a reply back within half an hour - at 1am!). If you go to him prepared, then you\'ll find a knowledgeable and responsive person; if you go unprepared or ask stupid questions he will make you feel exactly that ... unprepared and stupid. Don\'t complain. Learn to deal with him on equal terms and you\'ll learn a heck of a lot in the class.\nWorkload:\n8-10 homeworks consisting of theory and programming projects - they come at a pretty fast clip so be prepared. The theory is not too bad. Allocate 10-20 hours a week, depending on your programming skill level, for this course and you\'ll be fine. Midterm and final have moderately difficult problems. If you\'ve got the main concepts you\'ll be fine.','2.900000036','9.50000006','amazingly, cool, stupid'),('ECOMS6181','Schulzrinne, Henning','no text book , many google things,need to read lots of RFC and papers. most topic base on sildes, anyway, it is a difficult course.\nWorkload:\n10 medium-sized programming projects (some are very hard), plus written questions, Midterm, Final.','-0.700000018','0.700000018',''),('ECOMS6831','Unger, Stephen','After taking twenty plus computer science classes, Prof. Unger is definitely one of the better lecturers in the CS department. If you have taken digital logic CS3823, this class won\'t be hard. First of all, the class meets once a week, and they are only 2 hrs long instead of the usual 3 hrs long classes. The course is basically a continuation of digital logic. He only teaches one chapter from the book that he wrote. Completing the homework sets will definitely prepare you for the tests. This class is relatively easier than digital logic and the grading is slightly better. Besides, it\'s a 6000 level class!\nWorkload:\nEvery week there is a problem set. One mid-term and a final.','2.600000016','3.200000025',''),('ECOMS6995','Hirschberg, Julia','Awesome professor who in any other context may be mistaken for a cat lady. She puts interests in every one of her students (admittedly easier than others because of a class size of 15 or so), is easily approachable, and keeps the long (2 hr) discussions as fun as they could possibly be. Also one of the best academics in her field... if you\'re a CS major looking to do coursework in NLP, you should absolutely take at least one class from her!\nWorkload:\nWeekly paper readings (varies in length), 1 Final Project (Proposal, Interim Report, Final Report and Presentation)','1.899999976','2.899999976','awesome, best, interests'),('ECOMS6998','Reed, Michael','A really interesting computer graphics class with an amazing professor. In this class, we are given a glimpse to the realm of geometry modeling and geometry processing. As we live in the age that artists and product designers utilize 3D software such as Rhino or Maya or ZBrush, to digitally model their products before actualization into tangible objects, or to model cartoon characters that would appear in animated films, this class provides a great introduction into the technical aspects of how these 3D softwares work or should work. We study the fundamentals down to the level of so-called NURBS curves and surfaces, geometry processing performed on triangle meshes, and subdivision surfaces -- each with extensive mathematical backgrounds that consider how these structures give artists and manufacturers computational advantages such as desired degree of smoothness no matter what shape of the curves/surfaces are formed. It is a really fun experience to learn how design softwares are actually made of, and we also had a guest speaker from the industry to discuss how he actually uses the software to design real-world products.\nSo the class covers mainly three parts: the fundamentals of B-Spline curves and surfaces (as well as NURBS and Rational form), geometry processing (in particular, mesh data structures and mesh simplification algorithms), and Subdivision surfaces (e.g., Catmull-Clark). Each topic has extensive assignments associated with it to help us see how things are implemented. Some are really challenging, but Prof. Reed would give us extensions if needed. So we always have time to refine our assignments as possible. I\'d say I\'m very proud of the code I have done for this class, since they never look like a mess compared to other classes that I sometimes rush things through just to make it work. It\'s so organized, and beautiful.\nSpeaking of the professor, he is probably one of the best professors I\'ve had for Computer Science class, personality-wise. He really took time to answer individual emails and discussion threads. He modified his assignments plan as the semester went, so we were given more challenging works since we did well as a class on the first few assignments, which helped me to learn even more. He was very approachable during his office hours or after class. So in a sense, you never feel isolated or helpless in this class. The only caveat is that his lectures sometimes may be a bit dry, but bare with them, and you will go a long way.\nSo, even with a slight interest in computer graphics in general, I\'d recommend you to come and take the class, and you will be amazed how much you learn and have fun at the end.\nWorkload:\n3 Assignments, each covering main topic in the class, as mentioned above.\nIn actuality, it feels more like 6 assignments. The B-Spline one will be split into 3 parts, while the geometry processing is split into 2 parts. However, they aren\'t equal in length. Some will be shorter; others will be longer.\n1 Midterm. 1 Final. Totally reasonable and manageable.','10.39999984','11.99999987','amazing, best, amazed'),('ECOMS6998','Reed, Michael','Prof Reed is an excellent teacher. He is well prepared for class and knows his material very well. He is especially helpful during office hours. His is not a hard professor to get a hold of because he constantly checks his e-mails (and replies to any questions one might have) and gives you his cell phone to call if necessary. The course covers curves and surfaces. He covers bezier and b-spline curves. He also gives lots of examples in class and goes over it in detail. There isn\'t any trick for the midterm and final and tells you what to study. In all, I learned quite a bit about curves/\nsurfaces and feel that professor is a terrific teacher!\nWorkload:\nThere are 4 programming assignments that have to be written in java. He gives you the foundation for each assignment and all you have to implement is the algorithm. The programming assignments were reasonable plus he gives you the psuedo-code and goes over some examples in class.','4.299999945','4.299999945','excellent, terrific'),('ECOMS6998','Collins, Michael','An enjoyable, informative, and (really, really) laid-back class. Like the title suggests, it\'s about ML applications to NLP, but since just about every machine learning model anyone\'s come up with has been used for NLP at some point, it tends to focus on problems Collins himself has worked on or is working on now. This is obviously a Good Thing: he was obviously excited about most of the material in the class (I don\'t think I\'ve ever heard the phrase \"fun algorithm\" used more or with such earnestness) and made it exciting to learn as well.\nHe\'s a phenomenally clear lecturer---I took this class concurrently with ML, and the contrast between Collins\' presentations and Jebara\'s insane ramblings couldn\'t be clearer. I\'d encountered a couple of the models we talked about in this class before and struggled with them; MC made everything effortlessly comprehensible. The slides are also good enough that you can get away with skipping the assigned papers (though you really shouldn\'t; I stopped after about two weeks but am hoping to catch up during the summer).\nAt times it felt like half the department was taking the class; other days there were only five people there. Obviously he\'s a big fuckin\' deal, and just about everyone in the NLP group, faculty included, showed up at some point to watch the man himself teach. I\'m still not sure how many people there were auditors rather than enrolled students. That said, both he and Vinod were very accessible during OO and by email.\nI\'m pleased to see that he\'s teaching NLP next fall---he\'ll bring some much-needed rigor to Hirschberg\'s class (which is well-intentioned but a little fuzzy around the edges). I really enjoyed this semester and hope I have the opportunity to take something else with him again before I graduate.\nWorkload:\nRemarkably, at times disturbingly, little. Two problem sets, both assigned near the end of the course and requiring more time to typeset in LaTeX than they did to solve. The main event is the final project, but even that is pretty low-key: the writeup is only six pages long if you\'re working by yourself, and Vinod seemed surprised when I gave him something in the form of a journal article rather than a lab report.\nI don\'t know if MIT students are all crybabies, or if Collins feels compelled to dumb himself down for us (I hope it\'s the former); either way, don\'t let the 6 in front of the course number fool you into thinking that the material will make you sweat.','3.79999996','4.999999993','effortlessly, pleased, enjoyable'),('ECOMS6998','Habash, Nizar','A fun, laid-back class---worth staying until 8 on Thursday nights for. You read papers (or, if you\'re an undergraduate taking 5+ classes, you sometimes read papers), you discuss, you learn about machine translation. Habash is the authority on Arabic SMT; it\'s pretty cool to see him cited in just about everything you read, and it means that he can answer all of your questions. I would have liked to see a more than a single lecture spent on how the vanilla SMT and rule-based systems work (nobody studies them anymore, but you need to understand how they work for everything else to make sense, and they\'re not easy to figure out on your own). Other than that, really good---if he offers it again, take it.\nWorkload:\n1 \"lab\", with partners: put together a translation pipeline from start to finish, and then tweak it to see if you can get your BLEU scores up. He makes it a competition; people get excited.\n1 semester-long project, culminating in a final paper in the format of an 8-page journal article.\n2 presentations: one on a paper set of your choice and one on a language of your choice.','2.300000012','3.699999988','cool, fun'),('ECOMS6125','Kaiser, Gail','The lectures during the first half of the class were informative. The paper, project, and presentation were fun. This is a rare class in the CS program in that you can elect not to be in a group! Read that last sentence over again. I feel like way too much of my time has been wasted working with incompetent group members in other courses.\nThe only downside to this course is that you are forced to sit through the other student\'s presentations. As in you get major points deducted if you skip even one day during student presentations. Many of your fellow students will not know how to give a presentation (dense text on slides, try to cover 40 slides in 10 minutes, mumble through the whole thing, etc). Many of them will also not speak English very well, some not at all. I kind of feel like it is somewhat sadistic to make a student that barely speaks English give a presentation... and make other people sit through it as well. Simple solution: bring a laptop and work on your project!\nWorkload:\n15 page paper on some web related topic of your choice and a pretty large programming project, again your choice, as long as it has to do with the web, and a 10 minute presentation. Not bad for a 6000 level course.','1.49E-08','4.999999985','incompetent, fun'),('ECOMS6125','Kaiser, Gail','Professor Kaiser\'s lectures are generally quite well done. She uses lots and lots of powerpoint slides, which isn\'t generally my favorite approach -- I like it when lecturers use fewer slides, or just chalk and chalkboard if they can get away with it -- but she pulls it off pretty well.\nThe class organization is quite strong, particularly with regard to the major assignments (paper and project, both of which include several milestones to meet aside from the final submission.) The work required and assignment specs were all laid out pretty clearly at the beginning of the semester, which was really refreshing, actually. Most of the other C.S. classes I\'ve been in don\'t make specifications for assignments available until 1-3 weeks before they come due; it\'s hard to plan a semester that way.\nI\'d say the course is intended to give a flavor of how web technology is used and how it developed -- up to and including the state of the art -- and it works well in that regard. A lot of information goes by quite fast, especially by the end, but students don\'t have to do all that much with lectures that don\'t relate to their project and paper, as there aren\'t exams.\nWorkload:\nOne research paper in the first half of the course (10-20 single-spaced pages), one web-related programming project in the second half (singly or in groups, about 1000-2000 lines of code per person), class participation (there is an attendance sheet), and a brief presentation on a topic of your choice (probably related to your paper or project.)','1.700000048','2.900000051',''),('ECSEE6717','Misra, Vishal','Information theory is an interesting subject, but the professor has some trouble presenting it. He taught directly from the Cover and Thomas textbook, but assigned a different textbook for us, which didn\'t cover the same material, and organized it differently where there was overlap. The lectures were hard to follow, and there was no text to refer to (Unless you had cover and thomas)\nWorkload:\nA few easy problemsets, a longer problemset given as a take home final.','-1.199999988','1.199999988',''),('ECSEE6717','Misra, Vishal','Pretty Good Professor. Also, the course is very interesting. He explains things clearly. However, he usually explains things exactly as they are in the text, and doesn\'t really go out of his way to make them interesting. He is very good in interacting with students however, and makes himself very available outside of class.\nWorkload:\n5 Homeworks, all challenging, some harder than others (some will take 6-7 hours, a few will take 15-20 hours). A take-home exam, about as difficult as a homework.','2.699999988','2.699999988','');
/*!40000 ALTER TABLE `sentiment` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `track`
--

DROP TABLE IF EXISTS `track`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `track` (
  `TrackID` text,
  `CourseID` text,
  `Required` int(11) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `track`
--

LOCK TABLES `track` WRITE;
/*!40000 ALTER TABLE `track` DISABLE KEYS */;
INSERT INTO `track` VALUES ('Computational Biology','WCOMS4771',1),('Computational Biology','WCBMF4761',1),('Computational Biology','WCOMS4111',0),('Computational Biology','WCOMS4252',0),('Computational Biology','WCOMS4772',0),('Computational Biology','ECOMS6111',0),('Computational Biology','WCOMS4995',0),('Computational Biology','ECOMS6998',0),('Computational Biology','ECOMS6901',0),('Computational Biology','EEECS6720',0),('Computational Biology','EEECS6894',0),('Computer Security','WCOMS4118',1),('Computer Security','WCOMS4156',1),('Computer Security','WCOMS4181',1),('Computer Security','WCOMS4182',1),('Computer Security','WCOMS4261 OR ECOMS6185',1),('Computer Security','WCOMS4115',0),('Computer Security','WCOMS4119',0),('Computer Security','WCOMS4186',0),('Computer Security','WCOMS4261',0),('Computer Security','WCOMS4995',0),('Computer Security','ECOMS6118',0),('Computer Security','ECOMS6181',0),('Computer Security','ECOMS6183',0),('Computer Security','ECOMS6184',0),('Computer Security','ECOMS6185',0),('Computer Security','ECOMS6261',0),('Computer Security','ECOMS6424',0),('Computer Security','ECOMS6901',0),('Computer Security','ECOMS6998',0),('Computer Security','WCSEE4824',0),('Network Systems','WCSEE4119',1),('Network Systems','WCOMS4118',1),('Network Systems','WCOMS4115',1),('Network Systems','WCSEE4140',0),('Network Systems','WCOMS4180',0),('Network Systems','WCOMS4261',0),('Network Systems','WCOMS4737',0),('Network Systems','WCOMS4995',0),('Network Systems','ECOMS6118',0),('Network Systems','ECOMS6125',0),('Network Systems','ECOMS6180',0),('Network Systems','ECOMS6181',0),('Network Systems','ECOMS6184',0),('Network Systems','ECOMS6185',0),('Network Systems','ECOMS6717',0),('Network Systems','ECOMS6737',0),('Network Systems','ECOMS6901',0),('Network Systems','ECOMS6998',0),('Network Systems','EEECS4951',0),('Natural Language Processing','WCOMS4705',1),('Natural Language Processing','ECOMS6998',1),('Natural Language Processing','WCOMS4170',0),('Natural Language Processing','WCOMS4172',0),('Natural Language Processing','WCOMS4252',0),('Natural Language Processing','WCOMS4701',0),('Natural Language Processing','WCOMS4771 OR WCOMS4721',0),('Natural Language Processing','WCOMS4772',0),('Natural Language Processing','ECOMS6901',0),('Natural Language Processing','ECOMS6998',0),('Natural Language Processing','EEECS6894',0),('Software Systems','WCOMS4115',1),('Software Systems','WCOMS4118',1),('Software Systems','WCOMS4156',1),('Software Systems','WCOMS4111',0),('Software Systems','WCOMS4112',0),('Software Systems','WCOMS4113',0),('Software Systems','WCOMS4186',0),('Software Systems','WCOMS4170',0),('Software Systems','WCOMS4181',0),('Software Systems','WCOMS4187',0),('Software Systems','WCOMS4444',0),('Software Systems','WCOMS4995',0),('Software Systems','ECOMS6111',0),('Software Systems','ECOMS6113',0),('Software Systems','ECOMS6114',0),('Software Systems','ECOMS6117',0),('Software Systems','ECOMS6118',0),('Software Systems','ECOMS6121',0),('Software Systems','ECOMS6156',0),('Software Systems','ECOMS6424',0),('Software Systems','ECOMS6901',0),('Software Systems','ECOMS6998',0),('Foundations of Computer Science','WCSOR4231',1),('Foundations of Computer Science','WCOMS4236',1),('Foundations of Computer Science','WCOMS4203',0),('Foundations of Computer Science','WCOMS4241',0),('Foundations of Computer Science','WCOMS4252',0),('Foundations of Computer Science','WCOMS4261',0),('Foundations of Computer Science','WCOMS4281',0),('Foundations of Computer Science','ECSEE6180',0),('Foundations of Computer Science','WCOMS4995',0),('Foundations of Computer Science','ECOMS6204',0),('Foundations of Computer Science','ECOMS6232',0),('Foundations of Computer Science','ECOMS6261',0),('Foundations of Computer Science','ECOMS6291',0),('Foundations of Computer Science','ECOMS6901',0),('Foundations of Computer Science','ECOMS6998',0),('Vision, Graphics, Interaction, and Robotics','WCOMS4160',1),('Vision, Graphics, Interaction, and Robotics','WCOMS4167',1),('Vision, Graphics, Interaction, and Robotics','WCOMS4170',1),('Vision, Graphics, Interaction, and Robotics','WCOMS4172',1),('Vision, Graphics, Interaction, and Robotics','WCOMS4731',1),('Vision, Graphics, Interaction, and Robotics','WCOMS4733',1),('Vision, Graphics, Interaction, and Robotics','WCOMS4735',1),('Vision, Graphics, Interaction, and Robotics','WCOMS4771 OR WCOMS4721',1),('Vision, Graphics, Interaction, and Robotics','WCOMS4737',1),('Vision, Graphics, Interaction, and Robotics','WCOMS4160',0),('Vision, Graphics, Interaction, and Robotics','WCOMS4162',0),('Vision, Graphics, Interaction, and Robotics','WCOMS4167',0),('Vision, Graphics, Interaction, and Robotics','WCOMS4170',0),('Vision, Graphics, Interaction, and Robotics','WCOMS4172',0),('Vision, Graphics, Interaction, and Robotics','WCOMS4731',0),('Vision, Graphics, Interaction, and Robotics','WCOMS4733',0),('Vision, Graphics, Interaction, and Robotics','WCOMS4735',0),('Vision, Graphics, Interaction, and Robotics','WCOMS4737',0),('Vision, Graphics, Interaction, and Robotics','WCOMS4771 OR WCOMS4721',0),('Vision, Graphics, Interaction, and Robotics','WCOMS4772',0),('Vision, Graphics, Interaction, and Robotics','WCOMS4995',0),('Vision, Graphics, Interaction, and Robotics','ECOMS6161',0),('Vision, Graphics, Interaction, and Robotics','ECOMS6174',0),('Vision, Graphics, Interaction, and Robotics','ECOMS6176',0),('Vision, Graphics, Interaction, and Robotics','ECOMS6731',0),('Vision, Graphics, Interaction, and Robotics','ECOMS6732',0),('Vision, Graphics, Interaction, and Robotics','ECOMS6733',0),('Vision, Graphics, Interaction, and Robotics','ECOMS6734',0),('Vision, Graphics, Interaction, and Robotics','ECOMS6735',0),('Vision, Graphics, Interaction, and Robotics','ECOMS6737',0),('Vision, Graphics, Interaction, and Robotics','ECOMS6901',0),('Vision, Graphics, Interaction, and Robotics','ECOMS6998',0),('Machine Learning','WCOMS4252',1),('Machine Learning','WCOMS4771 OR WCOMS4721',1),('Machine Learning','WCOMS4772',1),('Machine Learning','GCOMS6509',1),('Machine Learning','WCOMS4731',1),('Machine Learning','WCOMS4705',1),('Machine Learning','WCOMS4733',1),('Machine Learning','WCOMS4701',1),('Machine Learning','WCOMS4111',1),('Machine Learning','WCOMS4252',1),('Machine Learning','WCSOR4246',1),('Machine Learning','WCOMS4705',1),('Machine Learning','WCOMS4731',1),('Machine Learning','WCOMS4733',1),('Machine Learning','WCOMS4737',1),('Machine Learning','WCOMS4761',1),('Machine Learning','WCOMS4771 OR WCOMS4721',1),('Machine Learning','WCOMS4772',1),('Machine Learning','WCOMS4995',1),('Machine Learning','ECOMS6111',1),('Machine Learning','ECOMS6232',1),('Machine Learning','ECOMS6253',1),('Machine Learning','ECOMS6717',1),('Machine Learning','ECOMS6735',1),('Machine Learning','ECOMS6737',1),('Machine Learning','ECOMS6901',1),('Machine Learning','ECOMS6998',1),('Machine Learning','ECSEE6892',1),('Machine Learning','ECSEE6898',1),('Machine Learning','EEECS6720',1),('Machine Learning','EEECS6870',1),('Machine Learning','EEECS6893',1),('Machine Learning','EEECS6895',1),('Machine Learning','EEECS6894',1);
/*!40000 ALTER TABLE `track` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2018-11-25 21:47:29
